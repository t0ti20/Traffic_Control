
Application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003426  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00003426  000034ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000019  00800168  00800168  000035c2  2**0
                  ALLOC
  3 .stab         000028f8  00000000  00000000  000035c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002213  00000000  00000000  00005ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000080cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000197  00000000  00000000  0000820f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001a88  00000000  00000000  000083a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eb7  00000000  00000000  00009e2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000df7  00000000  00000000  0000ace5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000badc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002bf  00000000  00000000  0000bc3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007f2  00000000  00000000  0000befb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 9f 0f 	jmp	0x1f3e	; 0x1f3e <__vector_1>
       8:	0c 94 f0 0f 	jmp	0x1fe0	; 0x1fe0 <__vector_2>
       c:	0c 94 41 10 	jmp	0x2082	; 0x2082 <__vector_3>
      10:	0c 94 7d 0d 	jmp	0x1afa	; 0x1afa <__vector_4>
      14:	0c 94 11 0d 	jmp	0x1a22	; 0x1a22 <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__vector_10>
      2c:	0c 94 4e 0c 	jmp	0x189c	; 0x189c <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a1 38       	cpi	r26, 0x81	; 129
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e6 e2       	ldi	r30, 0x26	; 38
      78:	f4 e3       	ldi	r31, 0x34	; 52
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 81 19 	call	0x3302	; 0x3302 <main>
      8a:	0c 94 11 1a 	jmp	0x3422	; 0x3422 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 cb 02 	call	0x596	; 0x596 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 da 19 	jmp	0x33b4	; 0x33b4 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 f6 19 	jmp	0x33ec	; 0x33ec <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 e6 19 	jmp	0x33cc	; 0x33cc <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 02 1a 	jmp	0x3404	; 0x3404 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 e6 19 	jmp	0x33cc	; 0x33cc <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 02 1a 	jmp	0x3404	; 0x3404 <__epilogue_restores__+0x18>

0000043e <__divsf3>:
     43e:	a8 e1       	ldi	r26, 0x18	; 24
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 e2 19 	jmp	0x33c4	; 0x33c4 <__prologue_saves__+0x10>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	b9 e0       	ldi	r27, 0x09	; 9
     45c:	eb 2e       	mov	r14, r27
     45e:	f1 2c       	mov	r15, r1
     460:	ec 0e       	add	r14, r28
     462:	fd 1e       	adc	r15, r29
     464:	ce 01       	movw	r24, r28
     466:	01 96       	adiw	r24, 0x01	; 1
     468:	b7 01       	movw	r22, r14
     46a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     46e:	8e 01       	movw	r16, r28
     470:	0f 5e       	subi	r16, 0xEF	; 239
     472:	1f 4f       	sbci	r17, 0xFF	; 255
     474:	ce 01       	movw	r24, r28
     476:	05 96       	adiw	r24, 0x05	; 5
     478:	b8 01       	movw	r22, r16
     47a:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     47e:	29 85       	ldd	r18, Y+9	; 0x09
     480:	22 30       	cpi	r18, 0x02	; 2
     482:	08 f4       	brcc	.+2      	; 0x486 <__divsf3+0x48>
     484:	7e c0       	rjmp	.+252    	; 0x582 <__divsf3+0x144>
     486:	39 89       	ldd	r19, Y+17	; 0x11
     488:	32 30       	cpi	r19, 0x02	; 2
     48a:	10 f4       	brcc	.+4      	; 0x490 <__divsf3+0x52>
     48c:	b8 01       	movw	r22, r16
     48e:	7c c0       	rjmp	.+248    	; 0x588 <__divsf3+0x14a>
     490:	8a 85       	ldd	r24, Y+10	; 0x0a
     492:	9a 89       	ldd	r25, Y+18	; 0x12
     494:	89 27       	eor	r24, r25
     496:	8a 87       	std	Y+10, r24	; 0x0a
     498:	24 30       	cpi	r18, 0x04	; 4
     49a:	11 f0       	breq	.+4      	; 0x4a0 <__divsf3+0x62>
     49c:	22 30       	cpi	r18, 0x02	; 2
     49e:	31 f4       	brne	.+12     	; 0x4ac <__divsf3+0x6e>
     4a0:	23 17       	cp	r18, r19
     4a2:	09 f0       	breq	.+2      	; 0x4a6 <__divsf3+0x68>
     4a4:	6e c0       	rjmp	.+220    	; 0x582 <__divsf3+0x144>
     4a6:	60 e6       	ldi	r22, 0x60	; 96
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	6e c0       	rjmp	.+220    	; 0x588 <__divsf3+0x14a>
     4ac:	34 30       	cpi	r19, 0x04	; 4
     4ae:	39 f4       	brne	.+14     	; 0x4be <__divsf3+0x80>
     4b0:	1d 86       	std	Y+13, r1	; 0x0d
     4b2:	1e 86       	std	Y+14, r1	; 0x0e
     4b4:	1f 86       	std	Y+15, r1	; 0x0f
     4b6:	18 8a       	std	Y+16, r1	; 0x10
     4b8:	1c 86       	std	Y+12, r1	; 0x0c
     4ba:	1b 86       	std	Y+11, r1	; 0x0b
     4bc:	04 c0       	rjmp	.+8      	; 0x4c6 <__divsf3+0x88>
     4be:	32 30       	cpi	r19, 0x02	; 2
     4c0:	21 f4       	brne	.+8      	; 0x4ca <__divsf3+0x8c>
     4c2:	84 e0       	ldi	r24, 0x04	; 4
     4c4:	89 87       	std	Y+9, r24	; 0x09
     4c6:	b7 01       	movw	r22, r14
     4c8:	5f c0       	rjmp	.+190    	; 0x588 <__divsf3+0x14a>
     4ca:	2b 85       	ldd	r18, Y+11	; 0x0b
     4cc:	3c 85       	ldd	r19, Y+12	; 0x0c
     4ce:	8b 89       	ldd	r24, Y+19	; 0x13
     4d0:	9c 89       	ldd	r25, Y+20	; 0x14
     4d2:	28 1b       	sub	r18, r24
     4d4:	39 0b       	sbc	r19, r25
     4d6:	3c 87       	std	Y+12, r19	; 0x0c
     4d8:	2b 87       	std	Y+11, r18	; 0x0b
     4da:	ed 84       	ldd	r14, Y+13	; 0x0d
     4dc:	fe 84       	ldd	r15, Y+14	; 0x0e
     4de:	0f 85       	ldd	r16, Y+15	; 0x0f
     4e0:	18 89       	ldd	r17, Y+16	; 0x10
     4e2:	ad 88       	ldd	r10, Y+21	; 0x15
     4e4:	be 88       	ldd	r11, Y+22	; 0x16
     4e6:	cf 88       	ldd	r12, Y+23	; 0x17
     4e8:	d8 8c       	ldd	r13, Y+24	; 0x18
     4ea:	ea 14       	cp	r14, r10
     4ec:	fb 04       	cpc	r15, r11
     4ee:	0c 05       	cpc	r16, r12
     4f0:	1d 05       	cpc	r17, r13
     4f2:	40 f4       	brcc	.+16     	; 0x504 <__divsf3+0xc6>
     4f4:	ee 0c       	add	r14, r14
     4f6:	ff 1c       	adc	r15, r15
     4f8:	00 1f       	adc	r16, r16
     4fa:	11 1f       	adc	r17, r17
     4fc:	21 50       	subi	r18, 0x01	; 1
     4fe:	30 40       	sbci	r19, 0x00	; 0
     500:	3c 87       	std	Y+12, r19	; 0x0c
     502:	2b 87       	std	Y+11, r18	; 0x0b
     504:	20 e0       	ldi	r18, 0x00	; 0
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	40 e0       	ldi	r20, 0x00	; 0
     50a:	50 e0       	ldi	r21, 0x00	; 0
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e4       	ldi	r27, 0x40	; 64
     514:	60 e0       	ldi	r22, 0x00	; 0
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	ea 14       	cp	r14, r10
     51a:	fb 04       	cpc	r15, r11
     51c:	0c 05       	cpc	r16, r12
     51e:	1d 05       	cpc	r17, r13
     520:	40 f0       	brcs	.+16     	; 0x532 <__divsf3+0xf4>
     522:	28 2b       	or	r18, r24
     524:	39 2b       	or	r19, r25
     526:	4a 2b       	or	r20, r26
     528:	5b 2b       	or	r21, r27
     52a:	ea 18       	sub	r14, r10
     52c:	fb 08       	sbc	r15, r11
     52e:	0c 09       	sbc	r16, r12
     530:	1d 09       	sbc	r17, r13
     532:	b6 95       	lsr	r27
     534:	a7 95       	ror	r26
     536:	97 95       	ror	r25
     538:	87 95       	ror	r24
     53a:	ee 0c       	add	r14, r14
     53c:	ff 1c       	adc	r15, r15
     53e:	00 1f       	adc	r16, r16
     540:	11 1f       	adc	r17, r17
     542:	6f 5f       	subi	r22, 0xFF	; 255
     544:	7f 4f       	sbci	r23, 0xFF	; 255
     546:	6f 31       	cpi	r22, 0x1F	; 31
     548:	71 05       	cpc	r23, r1
     54a:	31 f7       	brne	.-52     	; 0x518 <__divsf3+0xda>
     54c:	da 01       	movw	r26, r20
     54e:	c9 01       	movw	r24, r18
     550:	8f 77       	andi	r24, 0x7F	; 127
     552:	90 70       	andi	r25, 0x00	; 0
     554:	a0 70       	andi	r26, 0x00	; 0
     556:	b0 70       	andi	r27, 0x00	; 0
     558:	80 34       	cpi	r24, 0x40	; 64
     55a:	91 05       	cpc	r25, r1
     55c:	a1 05       	cpc	r26, r1
     55e:	b1 05       	cpc	r27, r1
     560:	61 f4       	brne	.+24     	; 0x57a <__divsf3+0x13c>
     562:	27 fd       	sbrc	r18, 7
     564:	0a c0       	rjmp	.+20     	; 0x57a <__divsf3+0x13c>
     566:	e1 14       	cp	r14, r1
     568:	f1 04       	cpc	r15, r1
     56a:	01 05       	cpc	r16, r1
     56c:	11 05       	cpc	r17, r1
     56e:	29 f0       	breq	.+10     	; 0x57a <__divsf3+0x13c>
     570:	20 5c       	subi	r18, 0xC0	; 192
     572:	3f 4f       	sbci	r19, 0xFF	; 255
     574:	4f 4f       	sbci	r20, 0xFF	; 255
     576:	5f 4f       	sbci	r21, 0xFF	; 255
     578:	20 78       	andi	r18, 0x80	; 128
     57a:	2d 87       	std	Y+13, r18	; 0x0d
     57c:	3e 87       	std	Y+14, r19	; 0x0e
     57e:	4f 87       	std	Y+15, r20	; 0x0f
     580:	58 8b       	std	Y+16, r21	; 0x10
     582:	be 01       	movw	r22, r28
     584:	67 5f       	subi	r22, 0xF7	; 247
     586:	7f 4f       	sbci	r23, 0xFF	; 255
     588:	cb 01       	movw	r24, r22
     58a:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     58e:	68 96       	adiw	r28, 0x18	; 24
     590:	ea e0       	ldi	r30, 0x0A	; 10
     592:	0c 94 fe 19 	jmp	0x33fc	; 0x33fc <__epilogue_restores__+0x10>

00000596 <__gesf2>:
     596:	a8 e1       	ldi	r26, 0x18	; 24
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	e1 ed       	ldi	r30, 0xD1	; 209
     59c:	f2 e0       	ldi	r31, 0x02	; 2
     59e:	0c 94 e6 19 	jmp	0x33cc	; 0x33cc <__prologue_saves__+0x18>
     5a2:	69 83       	std	Y+1, r22	; 0x01
     5a4:	7a 83       	std	Y+2, r23	; 0x02
     5a6:	8b 83       	std	Y+3, r24	; 0x03
     5a8:	9c 83       	std	Y+4, r25	; 0x04
     5aa:	2d 83       	std	Y+5, r18	; 0x05
     5ac:	3e 83       	std	Y+6, r19	; 0x06
     5ae:	4f 83       	std	Y+7, r20	; 0x07
     5b0:	58 87       	std	Y+8, r21	; 0x08
     5b2:	89 e0       	ldi	r24, 0x09	; 9
     5b4:	e8 2e       	mov	r14, r24
     5b6:	f1 2c       	mov	r15, r1
     5b8:	ec 0e       	add	r14, r28
     5ba:	fd 1e       	adc	r15, r29
     5bc:	ce 01       	movw	r24, r28
     5be:	01 96       	adiw	r24, 0x01	; 1
     5c0:	b7 01       	movw	r22, r14
     5c2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     5c6:	8e 01       	movw	r16, r28
     5c8:	0f 5e       	subi	r16, 0xEF	; 239
     5ca:	1f 4f       	sbci	r17, 0xFF	; 255
     5cc:	ce 01       	movw	r24, r28
     5ce:	05 96       	adiw	r24, 0x05	; 5
     5d0:	b8 01       	movw	r22, r16
     5d2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     5d6:	89 85       	ldd	r24, Y+9	; 0x09
     5d8:	82 30       	cpi	r24, 0x02	; 2
     5da:	40 f0       	brcs	.+16     	; 0x5ec <__gesf2+0x56>
     5dc:	89 89       	ldd	r24, Y+17	; 0x11
     5de:	82 30       	cpi	r24, 0x02	; 2
     5e0:	28 f0       	brcs	.+10     	; 0x5ec <__gesf2+0x56>
     5e2:	c7 01       	movw	r24, r14
     5e4:	b8 01       	movw	r22, r16
     5e6:	0e 94 64 05 	call	0xac8	; 0xac8 <__fpcmp_parts_f>
     5ea:	01 c0       	rjmp	.+2      	; 0x5ee <__gesf2+0x58>
     5ec:	8f ef       	ldi	r24, 0xFF	; 255
     5ee:	68 96       	adiw	r28, 0x18	; 24
     5f0:	e6 e0       	ldi	r30, 0x06	; 6
     5f2:	0c 94 02 1a 	jmp	0x3404	; 0x3404 <__epilogue_restores__+0x18>

000005f6 <__fixsfsi>:
     5f6:	ac e0       	ldi	r26, 0x0C	; 12
     5f8:	b0 e0       	ldi	r27, 0x00	; 0
     5fa:	e1 e0       	ldi	r30, 0x01	; 1
     5fc:	f3 e0       	ldi	r31, 0x03	; 3
     5fe:	0c 94 ea 19 	jmp	0x33d4	; 0x33d4 <__prologue_saves__+0x20>
     602:	69 83       	std	Y+1, r22	; 0x01
     604:	7a 83       	std	Y+2, r23	; 0x02
     606:	8b 83       	std	Y+3, r24	; 0x03
     608:	9c 83       	std	Y+4, r25	; 0x04
     60a:	ce 01       	movw	r24, r28
     60c:	01 96       	adiw	r24, 0x01	; 1
     60e:	be 01       	movw	r22, r28
     610:	6b 5f       	subi	r22, 0xFB	; 251
     612:	7f 4f       	sbci	r23, 0xFF	; 255
     614:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__unpack_f>
     618:	8d 81       	ldd	r24, Y+5	; 0x05
     61a:	82 30       	cpi	r24, 0x02	; 2
     61c:	61 f1       	breq	.+88     	; 0x676 <__fixsfsi+0x80>
     61e:	82 30       	cpi	r24, 0x02	; 2
     620:	50 f1       	brcs	.+84     	; 0x676 <__fixsfsi+0x80>
     622:	84 30       	cpi	r24, 0x04	; 4
     624:	21 f4       	brne	.+8      	; 0x62e <__fixsfsi+0x38>
     626:	8e 81       	ldd	r24, Y+6	; 0x06
     628:	88 23       	and	r24, r24
     62a:	51 f1       	breq	.+84     	; 0x680 <__fixsfsi+0x8a>
     62c:	2e c0       	rjmp	.+92     	; 0x68a <__fixsfsi+0x94>
     62e:	2f 81       	ldd	r18, Y+7	; 0x07
     630:	38 85       	ldd	r19, Y+8	; 0x08
     632:	37 fd       	sbrc	r19, 7
     634:	20 c0       	rjmp	.+64     	; 0x676 <__fixsfsi+0x80>
     636:	6e 81       	ldd	r22, Y+6	; 0x06
     638:	2f 31       	cpi	r18, 0x1F	; 31
     63a:	31 05       	cpc	r19, r1
     63c:	1c f0       	brlt	.+6      	; 0x644 <__fixsfsi+0x4e>
     63e:	66 23       	and	r22, r22
     640:	f9 f0       	breq	.+62     	; 0x680 <__fixsfsi+0x8a>
     642:	23 c0       	rjmp	.+70     	; 0x68a <__fixsfsi+0x94>
     644:	8e e1       	ldi	r24, 0x1E	; 30
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	82 1b       	sub	r24, r18
     64a:	93 0b       	sbc	r25, r19
     64c:	29 85       	ldd	r18, Y+9	; 0x09
     64e:	3a 85       	ldd	r19, Y+10	; 0x0a
     650:	4b 85       	ldd	r20, Y+11	; 0x0b
     652:	5c 85       	ldd	r21, Y+12	; 0x0c
     654:	04 c0       	rjmp	.+8      	; 0x65e <__fixsfsi+0x68>
     656:	56 95       	lsr	r21
     658:	47 95       	ror	r20
     65a:	37 95       	ror	r19
     65c:	27 95       	ror	r18
     65e:	8a 95       	dec	r24
     660:	d2 f7       	brpl	.-12     	; 0x656 <__fixsfsi+0x60>
     662:	66 23       	and	r22, r22
     664:	b1 f0       	breq	.+44     	; 0x692 <__fixsfsi+0x9c>
     666:	50 95       	com	r21
     668:	40 95       	com	r20
     66a:	30 95       	com	r19
     66c:	21 95       	neg	r18
     66e:	3f 4f       	sbci	r19, 0xFF	; 255
     670:	4f 4f       	sbci	r20, 0xFF	; 255
     672:	5f 4f       	sbci	r21, 0xFF	; 255
     674:	0e c0       	rjmp	.+28     	; 0x692 <__fixsfsi+0x9c>
     676:	20 e0       	ldi	r18, 0x00	; 0
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	40 e0       	ldi	r20, 0x00	; 0
     67c:	50 e0       	ldi	r21, 0x00	; 0
     67e:	09 c0       	rjmp	.+18     	; 0x692 <__fixsfsi+0x9c>
     680:	2f ef       	ldi	r18, 0xFF	; 255
     682:	3f ef       	ldi	r19, 0xFF	; 255
     684:	4f ef       	ldi	r20, 0xFF	; 255
     686:	5f e7       	ldi	r21, 0x7F	; 127
     688:	04 c0       	rjmp	.+8      	; 0x692 <__fixsfsi+0x9c>
     68a:	20 e0       	ldi	r18, 0x00	; 0
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e8       	ldi	r21, 0x80	; 128
     692:	b9 01       	movw	r22, r18
     694:	ca 01       	movw	r24, r20
     696:	2c 96       	adiw	r28, 0x0c	; 12
     698:	e2 e0       	ldi	r30, 0x02	; 2
     69a:	0c 94 06 1a 	jmp	0x340c	; 0x340c <__epilogue_restores__+0x20>

0000069e <__floatunsisf>:
     69e:	a8 e0       	ldi	r26, 0x08	; 8
     6a0:	b0 e0       	ldi	r27, 0x00	; 0
     6a2:	e5 e5       	ldi	r30, 0x55	; 85
     6a4:	f3 e0       	ldi	r31, 0x03	; 3
     6a6:	0c 94 e2 19 	jmp	0x33c4	; 0x33c4 <__prologue_saves__+0x10>
     6aa:	7b 01       	movw	r14, r22
     6ac:	8c 01       	movw	r16, r24
     6ae:	61 15       	cp	r22, r1
     6b0:	71 05       	cpc	r23, r1
     6b2:	81 05       	cpc	r24, r1
     6b4:	91 05       	cpc	r25, r1
     6b6:	19 f4       	brne	.+6      	; 0x6be <__floatunsisf+0x20>
     6b8:	82 e0       	ldi	r24, 0x02	; 2
     6ba:	89 83       	std	Y+1, r24	; 0x01
     6bc:	60 c0       	rjmp	.+192    	; 0x77e <__floatunsisf+0xe0>
     6be:	83 e0       	ldi	r24, 0x03	; 3
     6c0:	89 83       	std	Y+1, r24	; 0x01
     6c2:	8e e1       	ldi	r24, 0x1E	; 30
     6c4:	c8 2e       	mov	r12, r24
     6c6:	d1 2c       	mov	r13, r1
     6c8:	dc 82       	std	Y+4, r13	; 0x04
     6ca:	cb 82       	std	Y+3, r12	; 0x03
     6cc:	ed 82       	std	Y+5, r14	; 0x05
     6ce:	fe 82       	std	Y+6, r15	; 0x06
     6d0:	0f 83       	std	Y+7, r16	; 0x07
     6d2:	18 87       	std	Y+8, r17	; 0x08
     6d4:	c8 01       	movw	r24, r16
     6d6:	b7 01       	movw	r22, r14
     6d8:	0e 94 c8 03 	call	0x790	; 0x790 <__clzsi2>
     6dc:	fc 01       	movw	r30, r24
     6de:	31 97       	sbiw	r30, 0x01	; 1
     6e0:	f7 ff       	sbrs	r31, 7
     6e2:	3b c0       	rjmp	.+118    	; 0x75a <__floatunsisf+0xbc>
     6e4:	22 27       	eor	r18, r18
     6e6:	33 27       	eor	r19, r19
     6e8:	2e 1b       	sub	r18, r30
     6ea:	3f 0b       	sbc	r19, r31
     6ec:	57 01       	movw	r10, r14
     6ee:	68 01       	movw	r12, r16
     6f0:	02 2e       	mov	r0, r18
     6f2:	04 c0       	rjmp	.+8      	; 0x6fc <__floatunsisf+0x5e>
     6f4:	d6 94       	lsr	r13
     6f6:	c7 94       	ror	r12
     6f8:	b7 94       	ror	r11
     6fa:	a7 94       	ror	r10
     6fc:	0a 94       	dec	r0
     6fe:	d2 f7       	brpl	.-12     	; 0x6f4 <__floatunsisf+0x56>
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	a0 e0       	ldi	r26, 0x00	; 0
     70e:	b0 e0       	ldi	r27, 0x00	; 0
     710:	04 c0       	rjmp	.+8      	; 0x71a <__floatunsisf+0x7c>
     712:	88 0f       	add	r24, r24
     714:	99 1f       	adc	r25, r25
     716:	aa 1f       	adc	r26, r26
     718:	bb 1f       	adc	r27, r27
     71a:	2a 95       	dec	r18
     71c:	d2 f7       	brpl	.-12     	; 0x712 <__floatunsisf+0x74>
     71e:	01 97       	sbiw	r24, 0x01	; 1
     720:	a1 09       	sbc	r26, r1
     722:	b1 09       	sbc	r27, r1
     724:	8e 21       	and	r24, r14
     726:	9f 21       	and	r25, r15
     728:	a0 23       	and	r26, r16
     72a:	b1 23       	and	r27, r17
     72c:	00 97       	sbiw	r24, 0x00	; 0
     72e:	a1 05       	cpc	r26, r1
     730:	b1 05       	cpc	r27, r1
     732:	21 f0       	breq	.+8      	; 0x73c <__floatunsisf+0x9e>
     734:	41 e0       	ldi	r20, 0x01	; 1
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	4a 29       	or	r20, r10
     73e:	5b 29       	or	r21, r11
     740:	6c 29       	or	r22, r12
     742:	7d 29       	or	r23, r13
     744:	4d 83       	std	Y+5, r20	; 0x05
     746:	5e 83       	std	Y+6, r21	; 0x06
     748:	6f 83       	std	Y+7, r22	; 0x07
     74a:	78 87       	std	Y+8, r23	; 0x08
     74c:	8e e1       	ldi	r24, 0x1E	; 30
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	8e 1b       	sub	r24, r30
     752:	9f 0b       	sbc	r25, r31
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	8b 83       	std	Y+3, r24	; 0x03
     758:	12 c0       	rjmp	.+36     	; 0x77e <__floatunsisf+0xe0>
     75a:	30 97       	sbiw	r30, 0x00	; 0
     75c:	81 f0       	breq	.+32     	; 0x77e <__floatunsisf+0xe0>
     75e:	0e 2e       	mov	r0, r30
     760:	04 c0       	rjmp	.+8      	; 0x76a <__floatunsisf+0xcc>
     762:	ee 0c       	add	r14, r14
     764:	ff 1c       	adc	r15, r15
     766:	00 1f       	adc	r16, r16
     768:	11 1f       	adc	r17, r17
     76a:	0a 94       	dec	r0
     76c:	d2 f7       	brpl	.-12     	; 0x762 <__floatunsisf+0xc4>
     76e:	ed 82       	std	Y+5, r14	; 0x05
     770:	fe 82       	std	Y+6, r15	; 0x06
     772:	0f 83       	std	Y+7, r16	; 0x07
     774:	18 87       	std	Y+8, r17	; 0x08
     776:	ce 1a       	sub	r12, r30
     778:	df 0a       	sbc	r13, r31
     77a:	dc 82       	std	Y+4, r13	; 0x04
     77c:	cb 82       	std	Y+3, r12	; 0x03
     77e:	1a 82       	std	Y+2, r1	; 0x02
     780:	ce 01       	movw	r24, r28
     782:	01 96       	adiw	r24, 0x01	; 1
     784:	0e 94 17 04 	call	0x82e	; 0x82e <__pack_f>
     788:	28 96       	adiw	r28, 0x08	; 8
     78a:	ea e0       	ldi	r30, 0x0A	; 10
     78c:	0c 94 fe 19 	jmp	0x33fc	; 0x33fc <__epilogue_restores__+0x10>

00000790 <__clzsi2>:
     790:	ef 92       	push	r14
     792:	ff 92       	push	r15
     794:	0f 93       	push	r16
     796:	1f 93       	push	r17
     798:	7b 01       	movw	r14, r22
     79a:	8c 01       	movw	r16, r24
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	e8 16       	cp	r14, r24
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	f8 06       	cpc	r15, r24
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	08 07       	cpc	r16, r24
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	18 07       	cpc	r17, r24
     7ac:	88 f4       	brcc	.+34     	; 0x7d0 <__clzsi2+0x40>
     7ae:	8f ef       	ldi	r24, 0xFF	; 255
     7b0:	e8 16       	cp	r14, r24
     7b2:	f1 04       	cpc	r15, r1
     7b4:	01 05       	cpc	r16, r1
     7b6:	11 05       	cpc	r17, r1
     7b8:	31 f0       	breq	.+12     	; 0x7c6 <__clzsi2+0x36>
     7ba:	28 f0       	brcs	.+10     	; 0x7c6 <__clzsi2+0x36>
     7bc:	88 e0       	ldi	r24, 0x08	; 8
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	a0 e0       	ldi	r26, 0x00	; 0
     7c2:	b0 e0       	ldi	r27, 0x00	; 0
     7c4:	17 c0       	rjmp	.+46     	; 0x7f4 <__clzsi2+0x64>
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	a0 e0       	ldi	r26, 0x00	; 0
     7cc:	b0 e0       	ldi	r27, 0x00	; 0
     7ce:	12 c0       	rjmp	.+36     	; 0x7f4 <__clzsi2+0x64>
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	e8 16       	cp	r14, r24
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	f8 06       	cpc	r15, r24
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	08 07       	cpc	r16, r24
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	18 07       	cpc	r17, r24
     7e0:	28 f0       	brcs	.+10     	; 0x7ec <__clzsi2+0x5c>
     7e2:	88 e1       	ldi	r24, 0x18	; 24
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	a0 e0       	ldi	r26, 0x00	; 0
     7e8:	b0 e0       	ldi	r27, 0x00	; 0
     7ea:	04 c0       	rjmp	.+8      	; 0x7f4 <__clzsi2+0x64>
     7ec:	80 e1       	ldi	r24, 0x10	; 16
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	a0 e0       	ldi	r26, 0x00	; 0
     7f2:	b0 e0       	ldi	r27, 0x00	; 0
     7f4:	20 e2       	ldi	r18, 0x20	; 32
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	50 e0       	ldi	r21, 0x00	; 0
     7fc:	28 1b       	sub	r18, r24
     7fe:	39 0b       	sbc	r19, r25
     800:	4a 0b       	sbc	r20, r26
     802:	5b 0b       	sbc	r21, r27
     804:	04 c0       	rjmp	.+8      	; 0x80e <__clzsi2+0x7e>
     806:	16 95       	lsr	r17
     808:	07 95       	ror	r16
     80a:	f7 94       	ror	r15
     80c:	e7 94       	ror	r14
     80e:	8a 95       	dec	r24
     810:	d2 f7       	brpl	.-12     	; 0x806 <__clzsi2+0x76>
     812:	f7 01       	movw	r30, r14
     814:	e8 59       	subi	r30, 0x98	; 152
     816:	ff 4f       	sbci	r31, 0xFF	; 255
     818:	80 81       	ld	r24, Z
     81a:	28 1b       	sub	r18, r24
     81c:	31 09       	sbc	r19, r1
     81e:	41 09       	sbc	r20, r1
     820:	51 09       	sbc	r21, r1
     822:	c9 01       	movw	r24, r18
     824:	1f 91       	pop	r17
     826:	0f 91       	pop	r16
     828:	ff 90       	pop	r15
     82a:	ef 90       	pop	r14
     82c:	08 95       	ret

0000082e <__pack_f>:
     82e:	df 92       	push	r13
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	fc 01       	movw	r30, r24
     83a:	e4 80       	ldd	r14, Z+4	; 0x04
     83c:	f5 80       	ldd	r15, Z+5	; 0x05
     83e:	06 81       	ldd	r16, Z+6	; 0x06
     840:	17 81       	ldd	r17, Z+7	; 0x07
     842:	d1 80       	ldd	r13, Z+1	; 0x01
     844:	80 81       	ld	r24, Z
     846:	82 30       	cpi	r24, 0x02	; 2
     848:	48 f4       	brcc	.+18     	; 0x85c <__pack_f+0x2e>
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	a0 e1       	ldi	r26, 0x10	; 16
     850:	b0 e0       	ldi	r27, 0x00	; 0
     852:	e8 2a       	or	r14, r24
     854:	f9 2a       	or	r15, r25
     856:	0a 2b       	or	r16, r26
     858:	1b 2b       	or	r17, r27
     85a:	a5 c0       	rjmp	.+330    	; 0x9a6 <__stack+0x147>
     85c:	84 30       	cpi	r24, 0x04	; 4
     85e:	09 f4       	brne	.+2      	; 0x862 <__stack+0x3>
     860:	9f c0       	rjmp	.+318    	; 0x9a0 <__stack+0x141>
     862:	82 30       	cpi	r24, 0x02	; 2
     864:	21 f4       	brne	.+8      	; 0x86e <__stack+0xf>
     866:	ee 24       	eor	r14, r14
     868:	ff 24       	eor	r15, r15
     86a:	87 01       	movw	r16, r14
     86c:	05 c0       	rjmp	.+10     	; 0x878 <__stack+0x19>
     86e:	e1 14       	cp	r14, r1
     870:	f1 04       	cpc	r15, r1
     872:	01 05       	cpc	r16, r1
     874:	11 05       	cpc	r17, r1
     876:	19 f4       	brne	.+6      	; 0x87e <__stack+0x1f>
     878:	e0 e0       	ldi	r30, 0x00	; 0
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	96 c0       	rjmp	.+300    	; 0x9aa <__stack+0x14b>
     87e:	62 81       	ldd	r22, Z+2	; 0x02
     880:	73 81       	ldd	r23, Z+3	; 0x03
     882:	9f ef       	ldi	r25, 0xFF	; 255
     884:	62 38       	cpi	r22, 0x82	; 130
     886:	79 07       	cpc	r23, r25
     888:	0c f0       	brlt	.+2      	; 0x88c <__stack+0x2d>
     88a:	5b c0       	rjmp	.+182    	; 0x942 <__stack+0xe3>
     88c:	22 e8       	ldi	r18, 0x82	; 130
     88e:	3f ef       	ldi	r19, 0xFF	; 255
     890:	26 1b       	sub	r18, r22
     892:	37 0b       	sbc	r19, r23
     894:	2a 31       	cpi	r18, 0x1A	; 26
     896:	31 05       	cpc	r19, r1
     898:	2c f0       	brlt	.+10     	; 0x8a4 <__stack+0x45>
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	40 e0       	ldi	r20, 0x00	; 0
     8a0:	50 e0       	ldi	r21, 0x00	; 0
     8a2:	2a c0       	rjmp	.+84     	; 0x8f8 <__stack+0x99>
     8a4:	b8 01       	movw	r22, r16
     8a6:	a7 01       	movw	r20, r14
     8a8:	02 2e       	mov	r0, r18
     8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <__stack+0x55>
     8ac:	76 95       	lsr	r23
     8ae:	67 95       	ror	r22
     8b0:	57 95       	ror	r21
     8b2:	47 95       	ror	r20
     8b4:	0a 94       	dec	r0
     8b6:	d2 f7       	brpl	.-12     	; 0x8ac <__stack+0x4d>
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	a0 e0       	ldi	r26, 0x00	; 0
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	04 c0       	rjmp	.+8      	; 0x8ca <__stack+0x6b>
     8c2:	88 0f       	add	r24, r24
     8c4:	99 1f       	adc	r25, r25
     8c6:	aa 1f       	adc	r26, r26
     8c8:	bb 1f       	adc	r27, r27
     8ca:	2a 95       	dec	r18
     8cc:	d2 f7       	brpl	.-12     	; 0x8c2 <__stack+0x63>
     8ce:	01 97       	sbiw	r24, 0x01	; 1
     8d0:	a1 09       	sbc	r26, r1
     8d2:	b1 09       	sbc	r27, r1
     8d4:	8e 21       	and	r24, r14
     8d6:	9f 21       	and	r25, r15
     8d8:	a0 23       	and	r26, r16
     8da:	b1 23       	and	r27, r17
     8dc:	00 97       	sbiw	r24, 0x00	; 0
     8de:	a1 05       	cpc	r26, r1
     8e0:	b1 05       	cpc	r27, r1
     8e2:	21 f0       	breq	.+8      	; 0x8ec <__stack+0x8d>
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	a0 e0       	ldi	r26, 0x00	; 0
     8ea:	b0 e0       	ldi	r27, 0x00	; 0
     8ec:	9a 01       	movw	r18, r20
     8ee:	ab 01       	movw	r20, r22
     8f0:	28 2b       	or	r18, r24
     8f2:	39 2b       	or	r19, r25
     8f4:	4a 2b       	or	r20, r26
     8f6:	5b 2b       	or	r21, r27
     8f8:	da 01       	movw	r26, r20
     8fa:	c9 01       	movw	r24, r18
     8fc:	8f 77       	andi	r24, 0x7F	; 127
     8fe:	90 70       	andi	r25, 0x00	; 0
     900:	a0 70       	andi	r26, 0x00	; 0
     902:	b0 70       	andi	r27, 0x00	; 0
     904:	80 34       	cpi	r24, 0x40	; 64
     906:	91 05       	cpc	r25, r1
     908:	a1 05       	cpc	r26, r1
     90a:	b1 05       	cpc	r27, r1
     90c:	39 f4       	brne	.+14     	; 0x91c <__stack+0xbd>
     90e:	27 ff       	sbrs	r18, 7
     910:	09 c0       	rjmp	.+18     	; 0x924 <__stack+0xc5>
     912:	20 5c       	subi	r18, 0xC0	; 192
     914:	3f 4f       	sbci	r19, 0xFF	; 255
     916:	4f 4f       	sbci	r20, 0xFF	; 255
     918:	5f 4f       	sbci	r21, 0xFF	; 255
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__stack+0xc5>
     91c:	21 5c       	subi	r18, 0xC1	; 193
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	4f 4f       	sbci	r20, 0xFF	; 255
     922:	5f 4f       	sbci	r21, 0xFF	; 255
     924:	e0 e0       	ldi	r30, 0x00	; 0
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	20 30       	cpi	r18, 0x00	; 0
     92a:	a0 e0       	ldi	r26, 0x00	; 0
     92c:	3a 07       	cpc	r19, r26
     92e:	a0 e0       	ldi	r26, 0x00	; 0
     930:	4a 07       	cpc	r20, r26
     932:	a0 e4       	ldi	r26, 0x40	; 64
     934:	5a 07       	cpc	r21, r26
     936:	10 f0       	brcs	.+4      	; 0x93c <__stack+0xdd>
     938:	e1 e0       	ldi	r30, 0x01	; 1
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	79 01       	movw	r14, r18
     93e:	8a 01       	movw	r16, r20
     940:	27 c0       	rjmp	.+78     	; 0x990 <__stack+0x131>
     942:	60 38       	cpi	r22, 0x80	; 128
     944:	71 05       	cpc	r23, r1
     946:	64 f5       	brge	.+88     	; 0x9a0 <__stack+0x141>
     948:	fb 01       	movw	r30, r22
     94a:	e1 58       	subi	r30, 0x81	; 129
     94c:	ff 4f       	sbci	r31, 0xFF	; 255
     94e:	d8 01       	movw	r26, r16
     950:	c7 01       	movw	r24, r14
     952:	8f 77       	andi	r24, 0x7F	; 127
     954:	90 70       	andi	r25, 0x00	; 0
     956:	a0 70       	andi	r26, 0x00	; 0
     958:	b0 70       	andi	r27, 0x00	; 0
     95a:	80 34       	cpi	r24, 0x40	; 64
     95c:	91 05       	cpc	r25, r1
     95e:	a1 05       	cpc	r26, r1
     960:	b1 05       	cpc	r27, r1
     962:	39 f4       	brne	.+14     	; 0x972 <__stack+0x113>
     964:	e7 fe       	sbrs	r14, 7
     966:	0d c0       	rjmp	.+26     	; 0x982 <__stack+0x123>
     968:	80 e4       	ldi	r24, 0x40	; 64
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	a0 e0       	ldi	r26, 0x00	; 0
     96e:	b0 e0       	ldi	r27, 0x00	; 0
     970:	04 c0       	rjmp	.+8      	; 0x97a <__stack+0x11b>
     972:	8f e3       	ldi	r24, 0x3F	; 63
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	a0 e0       	ldi	r26, 0x00	; 0
     978:	b0 e0       	ldi	r27, 0x00	; 0
     97a:	e8 0e       	add	r14, r24
     97c:	f9 1e       	adc	r15, r25
     97e:	0a 1f       	adc	r16, r26
     980:	1b 1f       	adc	r17, r27
     982:	17 ff       	sbrs	r17, 7
     984:	05 c0       	rjmp	.+10     	; 0x990 <__stack+0x131>
     986:	16 95       	lsr	r17
     988:	07 95       	ror	r16
     98a:	f7 94       	ror	r15
     98c:	e7 94       	ror	r14
     98e:	31 96       	adiw	r30, 0x01	; 1
     990:	87 e0       	ldi	r24, 0x07	; 7
     992:	16 95       	lsr	r17
     994:	07 95       	ror	r16
     996:	f7 94       	ror	r15
     998:	e7 94       	ror	r14
     99a:	8a 95       	dec	r24
     99c:	d1 f7       	brne	.-12     	; 0x992 <__stack+0x133>
     99e:	05 c0       	rjmp	.+10     	; 0x9aa <__stack+0x14b>
     9a0:	ee 24       	eor	r14, r14
     9a2:	ff 24       	eor	r15, r15
     9a4:	87 01       	movw	r16, r14
     9a6:	ef ef       	ldi	r30, 0xFF	; 255
     9a8:	f0 e0       	ldi	r31, 0x00	; 0
     9aa:	6e 2f       	mov	r22, r30
     9ac:	67 95       	ror	r22
     9ae:	66 27       	eor	r22, r22
     9b0:	67 95       	ror	r22
     9b2:	90 2f       	mov	r25, r16
     9b4:	9f 77       	andi	r25, 0x7F	; 127
     9b6:	d7 94       	ror	r13
     9b8:	dd 24       	eor	r13, r13
     9ba:	d7 94       	ror	r13
     9bc:	8e 2f       	mov	r24, r30
     9be:	86 95       	lsr	r24
     9c0:	49 2f       	mov	r20, r25
     9c2:	46 2b       	or	r20, r22
     9c4:	58 2f       	mov	r21, r24
     9c6:	5d 29       	or	r21, r13
     9c8:	b7 01       	movw	r22, r14
     9ca:	ca 01       	movw	r24, r20
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	ff 90       	pop	r15
     9d2:	ef 90       	pop	r14
     9d4:	df 90       	pop	r13
     9d6:	08 95       	ret

000009d8 <__unpack_f>:
     9d8:	fc 01       	movw	r30, r24
     9da:	db 01       	movw	r26, r22
     9dc:	40 81       	ld	r20, Z
     9de:	51 81       	ldd	r21, Z+1	; 0x01
     9e0:	22 81       	ldd	r18, Z+2	; 0x02
     9e2:	62 2f       	mov	r22, r18
     9e4:	6f 77       	andi	r22, 0x7F	; 127
     9e6:	70 e0       	ldi	r23, 0x00	; 0
     9e8:	22 1f       	adc	r18, r18
     9ea:	22 27       	eor	r18, r18
     9ec:	22 1f       	adc	r18, r18
     9ee:	93 81       	ldd	r25, Z+3	; 0x03
     9f0:	89 2f       	mov	r24, r25
     9f2:	88 0f       	add	r24, r24
     9f4:	82 2b       	or	r24, r18
     9f6:	28 2f       	mov	r18, r24
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	99 1f       	adc	r25, r25
     9fc:	99 27       	eor	r25, r25
     9fe:	99 1f       	adc	r25, r25
     a00:	11 96       	adiw	r26, 0x01	; 1
     a02:	9c 93       	st	X, r25
     a04:	11 97       	sbiw	r26, 0x01	; 1
     a06:	21 15       	cp	r18, r1
     a08:	31 05       	cpc	r19, r1
     a0a:	a9 f5       	brne	.+106    	; 0xa76 <__unpack_f+0x9e>
     a0c:	41 15       	cp	r20, r1
     a0e:	51 05       	cpc	r21, r1
     a10:	61 05       	cpc	r22, r1
     a12:	71 05       	cpc	r23, r1
     a14:	11 f4       	brne	.+4      	; 0xa1a <__unpack_f+0x42>
     a16:	82 e0       	ldi	r24, 0x02	; 2
     a18:	37 c0       	rjmp	.+110    	; 0xa88 <__unpack_f+0xb0>
     a1a:	82 e8       	ldi	r24, 0x82	; 130
     a1c:	9f ef       	ldi	r25, 0xFF	; 255
     a1e:	13 96       	adiw	r26, 0x03	; 3
     a20:	9c 93       	st	X, r25
     a22:	8e 93       	st	-X, r24
     a24:	12 97       	sbiw	r26, 0x02	; 2
     a26:	9a 01       	movw	r18, r20
     a28:	ab 01       	movw	r20, r22
     a2a:	67 e0       	ldi	r22, 0x07	; 7
     a2c:	22 0f       	add	r18, r18
     a2e:	33 1f       	adc	r19, r19
     a30:	44 1f       	adc	r20, r20
     a32:	55 1f       	adc	r21, r21
     a34:	6a 95       	dec	r22
     a36:	d1 f7       	brne	.-12     	; 0xa2c <__unpack_f+0x54>
     a38:	83 e0       	ldi	r24, 0x03	; 3
     a3a:	8c 93       	st	X, r24
     a3c:	0d c0       	rjmp	.+26     	; 0xa58 <__unpack_f+0x80>
     a3e:	22 0f       	add	r18, r18
     a40:	33 1f       	adc	r19, r19
     a42:	44 1f       	adc	r20, r20
     a44:	55 1f       	adc	r21, r21
     a46:	12 96       	adiw	r26, 0x02	; 2
     a48:	8d 91       	ld	r24, X+
     a4a:	9c 91       	ld	r25, X
     a4c:	13 97       	sbiw	r26, 0x03	; 3
     a4e:	01 97       	sbiw	r24, 0x01	; 1
     a50:	13 96       	adiw	r26, 0x03	; 3
     a52:	9c 93       	st	X, r25
     a54:	8e 93       	st	-X, r24
     a56:	12 97       	sbiw	r26, 0x02	; 2
     a58:	20 30       	cpi	r18, 0x00	; 0
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	38 07       	cpc	r19, r24
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	48 07       	cpc	r20, r24
     a62:	80 e4       	ldi	r24, 0x40	; 64
     a64:	58 07       	cpc	r21, r24
     a66:	58 f3       	brcs	.-42     	; 0xa3e <__unpack_f+0x66>
     a68:	14 96       	adiw	r26, 0x04	; 4
     a6a:	2d 93       	st	X+, r18
     a6c:	3d 93       	st	X+, r19
     a6e:	4d 93       	st	X+, r20
     a70:	5c 93       	st	X, r21
     a72:	17 97       	sbiw	r26, 0x07	; 7
     a74:	08 95       	ret
     a76:	2f 3f       	cpi	r18, 0xFF	; 255
     a78:	31 05       	cpc	r19, r1
     a7a:	79 f4       	brne	.+30     	; 0xa9a <__unpack_f+0xc2>
     a7c:	41 15       	cp	r20, r1
     a7e:	51 05       	cpc	r21, r1
     a80:	61 05       	cpc	r22, r1
     a82:	71 05       	cpc	r23, r1
     a84:	19 f4       	brne	.+6      	; 0xa8c <__unpack_f+0xb4>
     a86:	84 e0       	ldi	r24, 0x04	; 4
     a88:	8c 93       	st	X, r24
     a8a:	08 95       	ret
     a8c:	64 ff       	sbrs	r22, 4
     a8e:	03 c0       	rjmp	.+6      	; 0xa96 <__unpack_f+0xbe>
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	8c 93       	st	X, r24
     a94:	12 c0       	rjmp	.+36     	; 0xaba <__unpack_f+0xe2>
     a96:	1c 92       	st	X, r1
     a98:	10 c0       	rjmp	.+32     	; 0xaba <__unpack_f+0xe2>
     a9a:	2f 57       	subi	r18, 0x7F	; 127
     a9c:	30 40       	sbci	r19, 0x00	; 0
     a9e:	13 96       	adiw	r26, 0x03	; 3
     aa0:	3c 93       	st	X, r19
     aa2:	2e 93       	st	-X, r18
     aa4:	12 97       	sbiw	r26, 0x02	; 2
     aa6:	83 e0       	ldi	r24, 0x03	; 3
     aa8:	8c 93       	st	X, r24
     aaa:	87 e0       	ldi	r24, 0x07	; 7
     aac:	44 0f       	add	r20, r20
     aae:	55 1f       	adc	r21, r21
     ab0:	66 1f       	adc	r22, r22
     ab2:	77 1f       	adc	r23, r23
     ab4:	8a 95       	dec	r24
     ab6:	d1 f7       	brne	.-12     	; 0xaac <__unpack_f+0xd4>
     ab8:	70 64       	ori	r23, 0x40	; 64
     aba:	14 96       	adiw	r26, 0x04	; 4
     abc:	4d 93       	st	X+, r20
     abe:	5d 93       	st	X+, r21
     ac0:	6d 93       	st	X+, r22
     ac2:	7c 93       	st	X, r23
     ac4:	17 97       	sbiw	r26, 0x07	; 7
     ac6:	08 95       	ret

00000ac8 <__fpcmp_parts_f>:
     ac8:	1f 93       	push	r17
     aca:	dc 01       	movw	r26, r24
     acc:	fb 01       	movw	r30, r22
     ace:	9c 91       	ld	r25, X
     ad0:	92 30       	cpi	r25, 0x02	; 2
     ad2:	08 f4       	brcc	.+2      	; 0xad6 <__fpcmp_parts_f+0xe>
     ad4:	47 c0       	rjmp	.+142    	; 0xb64 <__fpcmp_parts_f+0x9c>
     ad6:	80 81       	ld	r24, Z
     ad8:	82 30       	cpi	r24, 0x02	; 2
     ada:	08 f4       	brcc	.+2      	; 0xade <__fpcmp_parts_f+0x16>
     adc:	43 c0       	rjmp	.+134    	; 0xb64 <__fpcmp_parts_f+0x9c>
     ade:	94 30       	cpi	r25, 0x04	; 4
     ae0:	51 f4       	brne	.+20     	; 0xaf6 <__fpcmp_parts_f+0x2e>
     ae2:	11 96       	adiw	r26, 0x01	; 1
     ae4:	1c 91       	ld	r17, X
     ae6:	84 30       	cpi	r24, 0x04	; 4
     ae8:	99 f5       	brne	.+102    	; 0xb50 <__fpcmp_parts_f+0x88>
     aea:	81 81       	ldd	r24, Z+1	; 0x01
     aec:	68 2f       	mov	r22, r24
     aee:	70 e0       	ldi	r23, 0x00	; 0
     af0:	61 1b       	sub	r22, r17
     af2:	71 09       	sbc	r23, r1
     af4:	3f c0       	rjmp	.+126    	; 0xb74 <__fpcmp_parts_f+0xac>
     af6:	84 30       	cpi	r24, 0x04	; 4
     af8:	21 f0       	breq	.+8      	; 0xb02 <__fpcmp_parts_f+0x3a>
     afa:	92 30       	cpi	r25, 0x02	; 2
     afc:	31 f4       	brne	.+12     	; 0xb0a <__fpcmp_parts_f+0x42>
     afe:	82 30       	cpi	r24, 0x02	; 2
     b00:	b9 f1       	breq	.+110    	; 0xb70 <__fpcmp_parts_f+0xa8>
     b02:	81 81       	ldd	r24, Z+1	; 0x01
     b04:	88 23       	and	r24, r24
     b06:	89 f1       	breq	.+98     	; 0xb6a <__fpcmp_parts_f+0xa2>
     b08:	2d c0       	rjmp	.+90     	; 0xb64 <__fpcmp_parts_f+0x9c>
     b0a:	11 96       	adiw	r26, 0x01	; 1
     b0c:	1c 91       	ld	r17, X
     b0e:	11 97       	sbiw	r26, 0x01	; 1
     b10:	82 30       	cpi	r24, 0x02	; 2
     b12:	f1 f0       	breq	.+60     	; 0xb50 <__fpcmp_parts_f+0x88>
     b14:	81 81       	ldd	r24, Z+1	; 0x01
     b16:	18 17       	cp	r17, r24
     b18:	d9 f4       	brne	.+54     	; 0xb50 <__fpcmp_parts_f+0x88>
     b1a:	12 96       	adiw	r26, 0x02	; 2
     b1c:	2d 91       	ld	r18, X+
     b1e:	3c 91       	ld	r19, X
     b20:	13 97       	sbiw	r26, 0x03	; 3
     b22:	82 81       	ldd	r24, Z+2	; 0x02
     b24:	93 81       	ldd	r25, Z+3	; 0x03
     b26:	82 17       	cp	r24, r18
     b28:	93 07       	cpc	r25, r19
     b2a:	94 f0       	brlt	.+36     	; 0xb50 <__fpcmp_parts_f+0x88>
     b2c:	28 17       	cp	r18, r24
     b2e:	39 07       	cpc	r19, r25
     b30:	bc f0       	brlt	.+46     	; 0xb60 <__fpcmp_parts_f+0x98>
     b32:	14 96       	adiw	r26, 0x04	; 4
     b34:	8d 91       	ld	r24, X+
     b36:	9d 91       	ld	r25, X+
     b38:	0d 90       	ld	r0, X+
     b3a:	bc 91       	ld	r27, X
     b3c:	a0 2d       	mov	r26, r0
     b3e:	24 81       	ldd	r18, Z+4	; 0x04
     b40:	35 81       	ldd	r19, Z+5	; 0x05
     b42:	46 81       	ldd	r20, Z+6	; 0x06
     b44:	57 81       	ldd	r21, Z+7	; 0x07
     b46:	28 17       	cp	r18, r24
     b48:	39 07       	cpc	r19, r25
     b4a:	4a 07       	cpc	r20, r26
     b4c:	5b 07       	cpc	r21, r27
     b4e:	18 f4       	brcc	.+6      	; 0xb56 <__fpcmp_parts_f+0x8e>
     b50:	11 23       	and	r17, r17
     b52:	41 f0       	breq	.+16     	; 0xb64 <__fpcmp_parts_f+0x9c>
     b54:	0a c0       	rjmp	.+20     	; 0xb6a <__fpcmp_parts_f+0xa2>
     b56:	82 17       	cp	r24, r18
     b58:	93 07       	cpc	r25, r19
     b5a:	a4 07       	cpc	r26, r20
     b5c:	b5 07       	cpc	r27, r21
     b5e:	40 f4       	brcc	.+16     	; 0xb70 <__fpcmp_parts_f+0xa8>
     b60:	11 23       	and	r17, r17
     b62:	19 f0       	breq	.+6      	; 0xb6a <__fpcmp_parts_f+0xa2>
     b64:	61 e0       	ldi	r22, 0x01	; 1
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	05 c0       	rjmp	.+10     	; 0xb74 <__fpcmp_parts_f+0xac>
     b6a:	6f ef       	ldi	r22, 0xFF	; 255
     b6c:	7f ef       	ldi	r23, 0xFF	; 255
     b6e:	02 c0       	rjmp	.+4      	; 0xb74 <__fpcmp_parts_f+0xac>
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	cb 01       	movw	r24, r22
     b76:	1f 91       	pop	r17
     b78:	08 95       	ret

00000b7a <Timer_0_VidBusy_Wait_ms>:
/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/************************************************/
/*					Timer 0 					*/
/************************************************/
void Timer_0_VidBusy_Wait_ms(u32 Copy_u32Delay)
{
     b7a:	0f 93       	push	r16
     b7c:	df 93       	push	r29
     b7e:	cf 93       	push	r28
     b80:	cd b7       	in	r28, 0x3d	; 61
     b82:	de b7       	in	r29, 0x3e	; 62
     b84:	2c 97       	sbiw	r28, 0x0c	; 12
     b86:	0f b6       	in	r0, 0x3f	; 63
     b88:	f8 94       	cli
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	cd bf       	out	0x3d, r28	; 61
     b90:	69 87       	std	Y+9, r22	; 0x09
     b92:	7a 87       	std	Y+10, r23	; 0x0a
     b94:	8b 87       	std	Y+11, r24	; 0x0b
     b96:	9c 87       	std	Y+12, r25	; 0x0c
	f32 Local_f32Tic_Time=(1024.0/CPU_Freq)*1000;
     b98:	8f e6       	ldi	r24, 0x6F	; 111
     b9a:	92 e1       	ldi	r25, 0x12	; 18
     b9c:	a3 e8       	ldi	r26, 0x83	; 131
     b9e:	be e3       	ldi	r27, 0x3E	; 62
     ba0:	8d 83       	std	Y+5, r24	; 0x05
     ba2:	9e 83       	std	Y+6, r25	; 0x06
     ba4:	af 83       	std	Y+7, r26	; 0x07
     ba6:	b8 87       	std	Y+8, r27	; 0x08
	u32 Local_u32Total_Tics=Copy_u32Delay/Local_f32Tic_Time;
     ba8:	69 85       	ldd	r22, Y+9	; 0x09
     baa:	7a 85       	ldd	r23, Y+10	; 0x0a
     bac:	8b 85       	ldd	r24, Y+11	; 0x0b
     bae:	9c 85       	ldd	r25, Y+12	; 0x0c
     bb0:	0e 94 4f 03 	call	0x69e	; 0x69e <__floatunsisf>
     bb4:	dc 01       	movw	r26, r24
     bb6:	cb 01       	movw	r24, r22
     bb8:	bc 01       	movw	r22, r24
     bba:	cd 01       	movw	r24, r26
     bbc:	2d 81       	ldd	r18, Y+5	; 0x05
     bbe:	3e 81       	ldd	r19, Y+6	; 0x06
     bc0:	4f 81       	ldd	r20, Y+7	; 0x07
     bc2:	58 85       	ldd	r21, Y+8	; 0x08
     bc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__divsf3>
     bc8:	dc 01       	movw	r26, r24
     bca:	cb 01       	movw	r24, r22
     bcc:	bc 01       	movw	r22, r24
     bce:	cd 01       	movw	r24, r26
     bd0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     bd4:	dc 01       	movw	r26, r24
     bd6:	cb 01       	movw	r24, r22
     bd8:	89 83       	std	Y+1, r24	; 0x01
     bda:	9a 83       	std	Y+2, r25	; 0x02
     bdc:	ab 83       	std	Y+3, r26	; 0x03
     bde:	bc 83       	std	Y+4, r27	; 0x04
	if (Local_u32Total_Tics<=255)
     be0:	89 81       	ldd	r24, Y+1	; 0x01
     be2:	9a 81       	ldd	r25, Y+2	; 0x02
     be4:	ab 81       	ldd	r26, Y+3	; 0x03
     be6:	bc 81       	ldd	r27, Y+4	; 0x04
     be8:	8f 3f       	cpi	r24, 0xFF	; 255
     bea:	91 05       	cpc	r25, r1
     bec:	a1 05       	cpc	r26, r1
     bee:	b1 05       	cpc	r27, r1
     bf0:	09 f0       	breq	.+2      	; 0xbf4 <Timer_0_VidBusy_Wait_ms+0x7a>
     bf2:	d0 f4       	brcc	.+52     	; 0xc28 <Timer_0_VidBusy_Wait_ms+0xae>
	{
		Timer_0_VidInitialization(CTC,Local_u32Total_Tics,Disable_CM,Disable_OF,Pre_Scalar_1024);
     bf4:	99 81       	ldd	r25, Y+1	; 0x01
     bf6:	83 e0       	ldi	r24, 0x03	; 3
     bf8:	69 2f       	mov	r22, r25
     bfa:	43 e0       	ldi	r20, 0x03	; 3
     bfc:	21 e0       	ldi	r18, 0x01	; 1
     bfe:	06 e0       	ldi	r16, 0x06	; 6
     c00:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Timer_0_VidInitialization>
		while(!Get_Bit(TIFR,TIFR_OCF0));
     c04:	e8 e5       	ldi	r30, 0x58	; 88
     c06:	f0 e0       	ldi	r31, 0x00	; 0
     c08:	80 81       	ld	r24, Z
     c0a:	86 95       	lsr	r24
     c0c:	88 2f       	mov	r24, r24
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	81 70       	andi	r24, 0x01	; 1
     c12:	90 70       	andi	r25, 0x00	; 0
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	b1 f3       	breq	.-20     	; 0xc04 <Timer_0_VidBusy_Wait_ms+0x8a>
		Set_Bit(TIFR,TIFR_OCF0);
     c18:	a8 e5       	ldi	r26, 0x58	; 88
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e8 e5       	ldi	r30, 0x58	; 88
     c1e:	f0 e0       	ldi	r31, 0x00	; 0
     c20:	80 81       	ld	r24, Z
     c22:	82 60       	ori	r24, 0x02	; 2
     c24:	8c 93       	st	X, r24
     c26:	73 c0       	rjmp	.+230    	; 0xd0e <Timer_0_VidBusy_Wait_ms+0x194>
	}
	else
	{
		Global_Timer_0_u16Flag=(Local_u32Total_Tics/255)+1;
     c28:	89 81       	ldd	r24, Y+1	; 0x01
     c2a:	9a 81       	ldd	r25, Y+2	; 0x02
     c2c:	ab 81       	ldd	r26, Y+3	; 0x03
     c2e:	bc 81       	ldd	r27, Y+4	; 0x04
     c30:	2f ef       	ldi	r18, 0xFF	; 255
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	40 e0       	ldi	r20, 0x00	; 0
     c36:	50 e0       	ldi	r21, 0x00	; 0
     c38:	bc 01       	movw	r22, r24
     c3a:	cd 01       	movw	r24, r26
     c3c:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
     c40:	da 01       	movw	r26, r20
     c42:	c9 01       	movw	r24, r18
     c44:	01 96       	adiw	r24, 0x01	; 1
     c46:	a1 1d       	adc	r26, r1
     c48:	b1 1d       	adc	r27, r1
     c4a:	80 93 7d 01 	sts	0x017D, r24
     c4e:	90 93 7e 01 	sts	0x017E, r25
     c52:	a0 93 7f 01 	sts	0x017F, r26
     c56:	b0 93 80 01 	sts	0x0180, r27
		Timer_0_VidInitialization(Normal,255-((Local_u32Total_Tics%255)*255),Disable_CM,Disable_OF,Pre_Scalar_1024);
     c5a:	89 81       	ldd	r24, Y+1	; 0x01
     c5c:	9a 81       	ldd	r25, Y+2	; 0x02
     c5e:	ab 81       	ldd	r26, Y+3	; 0x03
     c60:	bc 81       	ldd	r27, Y+4	; 0x04
     c62:	2f ef       	ldi	r18, 0xFF	; 255
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	40 e0       	ldi	r20, 0x00	; 0
     c68:	50 e0       	ldi	r21, 0x00	; 0
     c6a:	bc 01       	movw	r22, r24
     c6c:	cd 01       	movw	r24, r26
     c6e:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
     c72:	dc 01       	movw	r26, r24
     c74:	cb 01       	movw	r24, r22
     c76:	9c 01       	movw	r18, r24
     c78:	ad 01       	movw	r20, r26
     c7a:	81 e0       	ldi	r24, 0x01	; 1
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	a0 e0       	ldi	r26, 0x00	; 0
     c80:	b0 e0       	ldi	r27, 0x00	; 0
     c82:	82 1b       	sub	r24, r18
     c84:	93 0b       	sbc	r25, r19
     c86:	a4 0b       	sbc	r26, r20
     c88:	b5 0b       	sbc	r27, r21
     c8a:	2f ef       	ldi	r18, 0xFF	; 255
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	40 e0       	ldi	r20, 0x00	; 0
     c90:	50 e0       	ldi	r21, 0x00	; 0
     c92:	bc 01       	movw	r22, r24
     c94:	cd 01       	movw	r24, r26
     c96:	0e 94 99 19 	call	0x3332	; 0x3332 <__mulsi3>
     c9a:	dc 01       	movw	r26, r24
     c9c:	cb 01       	movw	r24, r22
     c9e:	98 2f       	mov	r25, r24
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	69 2f       	mov	r22, r25
     ca4:	43 e0       	ldi	r20, 0x03	; 3
     ca6:	21 e0       	ldi	r18, 0x01	; 1
     ca8:	06 e0       	ldi	r16, 0x06	; 6
     caa:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Timer_0_VidInitialization>
     cae:	23 c0       	rjmp	.+70     	; 0xcf6 <Timer_0_VidBusy_Wait_ms+0x17c>
		while(Global_Timer_0_u16Flag)
		{
			if(Get_Bit(TIFR,TIFR_TOV0))
     cb0:	e8 e5       	ldi	r30, 0x58	; 88
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	80 81       	ld	r24, Z
     cb6:	88 2f       	mov	r24, r24
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	81 70       	andi	r24, 0x01	; 1
     cbc:	90 70       	andi	r25, 0x00	; 0
     cbe:	88 23       	and	r24, r24
     cc0:	d1 f0       	breq	.+52     	; 0xcf6 <Timer_0_VidBusy_Wait_ms+0x17c>
			{
				Global_Timer_0_u16Flag--;
     cc2:	80 91 7d 01 	lds	r24, 0x017D
     cc6:	90 91 7e 01 	lds	r25, 0x017E
     cca:	a0 91 7f 01 	lds	r26, 0x017F
     cce:	b0 91 80 01 	lds	r27, 0x0180
     cd2:	01 97       	sbiw	r24, 0x01	; 1
     cd4:	a1 09       	sbc	r26, r1
     cd6:	b1 09       	sbc	r27, r1
     cd8:	80 93 7d 01 	sts	0x017D, r24
     cdc:	90 93 7e 01 	sts	0x017E, r25
     ce0:	a0 93 7f 01 	sts	0x017F, r26
     ce4:	b0 93 80 01 	sts	0x0180, r27
				Set_Bit(TIFR,TIFR_TOV0);
     ce8:	a8 e5       	ldi	r26, 0x58	; 88
     cea:	b0 e0       	ldi	r27, 0x00	; 0
     cec:	e8 e5       	ldi	r30, 0x58	; 88
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	81 60       	ori	r24, 0x01	; 1
     cf4:	8c 93       	st	X, r24
	}
	else
	{
		Global_Timer_0_u16Flag=(Local_u32Total_Tics/255)+1;
		Timer_0_VidInitialization(Normal,255-((Local_u32Total_Tics%255)*255),Disable_CM,Disable_OF,Pre_Scalar_1024);
		while(Global_Timer_0_u16Flag)
     cf6:	80 91 7d 01 	lds	r24, 0x017D
     cfa:	90 91 7e 01 	lds	r25, 0x017E
     cfe:	a0 91 7f 01 	lds	r26, 0x017F
     d02:	b0 91 80 01 	lds	r27, 0x0180
     d06:	00 97       	sbiw	r24, 0x00	; 0
     d08:	a1 05       	cpc	r26, r1
     d0a:	b1 05       	cpc	r27, r1
     d0c:	89 f6       	brne	.-94     	; 0xcb0 <Timer_0_VidBusy_Wait_ms+0x136>
				Global_Timer_0_u16Flag--;
				Set_Bit(TIFR,TIFR_TOV0);
			}
		}
	}
}
     d0e:	2c 96       	adiw	r28, 0x0c	; 12
     d10:	0f b6       	in	r0, 0x3f	; 63
     d12:	f8 94       	cli
     d14:	de bf       	out	0x3e, r29	; 62
     d16:	0f be       	out	0x3f, r0	; 63
     d18:	cd bf       	out	0x3d, r28	; 61
     d1a:	cf 91       	pop	r28
     d1c:	df 91       	pop	r29
     d1e:	0f 91       	pop	r16
     d20:	08 95       	ret

00000d22 <Timer_0_VidDelay_ms>:
void Timer_0_VidDelay_ms(u32 Copy_u32Delay,void (*Copy_VidDelay_Func)(void))
{
     d22:	0f 93       	push	r16
     d24:	df 93       	push	r29
     d26:	cf 93       	push	r28
     d28:	cd b7       	in	r28, 0x3d	; 61
     d2a:	de b7       	in	r29, 0x3e	; 62
     d2c:	2e 97       	sbiw	r28, 0x0e	; 14
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	f8 94       	cli
     d32:	de bf       	out	0x3e, r29	; 62
     d34:	0f be       	out	0x3f, r0	; 63
     d36:	cd bf       	out	0x3d, r28	; 61
     d38:	69 87       	std	Y+9, r22	; 0x09
     d3a:	7a 87       	std	Y+10, r23	; 0x0a
     d3c:	8b 87       	std	Y+11, r24	; 0x0b
     d3e:	9c 87       	std	Y+12, r25	; 0x0c
     d40:	5e 87       	std	Y+14, r21	; 0x0e
     d42:	4d 87       	std	Y+13, r20	; 0x0d
	f32 Local_f32Tic_Time=(1024.0/CPU_Freq)*1000;
     d44:	8f e6       	ldi	r24, 0x6F	; 111
     d46:	92 e1       	ldi	r25, 0x12	; 18
     d48:	a3 e8       	ldi	r26, 0x83	; 131
     d4a:	be e3       	ldi	r27, 0x3E	; 62
     d4c:	8d 83       	std	Y+5, r24	; 0x05
     d4e:	9e 83       	std	Y+6, r25	; 0x06
     d50:	af 83       	std	Y+7, r26	; 0x07
     d52:	b8 87       	std	Y+8, r27	; 0x08
	u32 Local_u32Total_Tics=Copy_u32Delay/Local_f32Tic_Time;
     d54:	69 85       	ldd	r22, Y+9	; 0x09
     d56:	7a 85       	ldd	r23, Y+10	; 0x0a
     d58:	8b 85       	ldd	r24, Y+11	; 0x0b
     d5a:	9c 85       	ldd	r25, Y+12	; 0x0c
     d5c:	0e 94 4f 03 	call	0x69e	; 0x69e <__floatunsisf>
     d60:	dc 01       	movw	r26, r24
     d62:	cb 01       	movw	r24, r22
     d64:	bc 01       	movw	r22, r24
     d66:	cd 01       	movw	r24, r26
     d68:	2d 81       	ldd	r18, Y+5	; 0x05
     d6a:	3e 81       	ldd	r19, Y+6	; 0x06
     d6c:	4f 81       	ldd	r20, Y+7	; 0x07
     d6e:	58 85       	ldd	r21, Y+8	; 0x08
     d70:	0e 94 1f 02 	call	0x43e	; 0x43e <__divsf3>
     d74:	dc 01       	movw	r26, r24
     d76:	cb 01       	movw	r24, r22
     d78:	bc 01       	movw	r22, r24
     d7a:	cd 01       	movw	r24, r26
     d7c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d80:	dc 01       	movw	r26, r24
     d82:	cb 01       	movw	r24, r22
     d84:	89 83       	std	Y+1, r24	; 0x01
     d86:	9a 83       	std	Y+2, r25	; 0x02
     d88:	ab 83       	std	Y+3, r26	; 0x03
     d8a:	bc 83       	std	Y+4, r27	; 0x04
	if (Local_u32Total_Tics<=255)
     d8c:	89 81       	ldd	r24, Y+1	; 0x01
     d8e:	9a 81       	ldd	r25, Y+2	; 0x02
     d90:	ab 81       	ldd	r26, Y+3	; 0x03
     d92:	bc 81       	ldd	r27, Y+4	; 0x04
     d94:	8f 3f       	cpi	r24, 0xFF	; 255
     d96:	91 05       	cpc	r25, r1
     d98:	a1 05       	cpc	r26, r1
     d9a:	b1 05       	cpc	r27, r1
     d9c:	09 f0       	breq	.+2      	; 0xda0 <Timer_0_VidDelay_ms+0x7e>
     d9e:	68 f4       	brcc	.+26     	; 0xdba <Timer_0_VidDelay_ms+0x98>
	{
		Timer_0_VidInitialization(CTC,Local_u32Total_Tics,Enable_CM,Disable_OF,Pre_Scalar_1024);
     da0:	99 81       	ldd	r25, Y+1	; 0x01
     da2:	83 e0       	ldi	r24, 0x03	; 3
     da4:	69 2f       	mov	r22, r25
     da6:	42 e0       	ldi	r20, 0x02	; 2
     da8:	21 e0       	ldi	r18, 0x01	; 1
     daa:	06 e0       	ldi	r16, 0x06	; 6
     dac:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Timer_0_VidInitialization>
		Timer_0_VidCompare_Match_Inturrept(Copy_VidDelay_Func);
     db0:	8d 85       	ldd	r24, Y+13	; 0x0d
     db2:	9e 85       	ldd	r25, Y+14	; 0x0e
     db4:	0e 94 a9 0c 	call	0x1952	; 0x1952 <Timer_0_VidCompare_Match_Inturrept>
     db8:	47 c0       	rjmp	.+142    	; 0xe48 <Timer_0_VidDelay_ms+0x126>
	}
	else
	{
		Global_Timer_0_u16Flag=(Local_u32Total_Tics/255)+1;
     dba:	89 81       	ldd	r24, Y+1	; 0x01
     dbc:	9a 81       	ldd	r25, Y+2	; 0x02
     dbe:	ab 81       	ldd	r26, Y+3	; 0x03
     dc0:	bc 81       	ldd	r27, Y+4	; 0x04
     dc2:	2f ef       	ldi	r18, 0xFF	; 255
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	40 e0       	ldi	r20, 0x00	; 0
     dc8:	50 e0       	ldi	r21, 0x00	; 0
     dca:	bc 01       	movw	r22, r24
     dcc:	cd 01       	movw	r24, r26
     dce:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
     dd2:	da 01       	movw	r26, r20
     dd4:	c9 01       	movw	r24, r18
     dd6:	01 96       	adiw	r24, 0x01	; 1
     dd8:	a1 1d       	adc	r26, r1
     dda:	b1 1d       	adc	r27, r1
     ddc:	80 93 7d 01 	sts	0x017D, r24
     de0:	90 93 7e 01 	sts	0x017E, r25
     de4:	a0 93 7f 01 	sts	0x017F, r26
     de8:	b0 93 80 01 	sts	0x0180, r27
		Timer_0_VidInitialization(Normal,255-((Local_u32Total_Tics%255)*255),Disable_CM,Enable_OF,Pre_Scalar_1024);
     dec:	89 81       	ldd	r24, Y+1	; 0x01
     dee:	9a 81       	ldd	r25, Y+2	; 0x02
     df0:	ab 81       	ldd	r26, Y+3	; 0x03
     df2:	bc 81       	ldd	r27, Y+4	; 0x04
     df4:	2f ef       	ldi	r18, 0xFF	; 255
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	40 e0       	ldi	r20, 0x00	; 0
     dfa:	50 e0       	ldi	r21, 0x00	; 0
     dfc:	bc 01       	movw	r22, r24
     dfe:	cd 01       	movw	r24, r26
     e00:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
     e04:	dc 01       	movw	r26, r24
     e06:	cb 01       	movw	r24, r22
     e08:	9c 01       	movw	r18, r24
     e0a:	ad 01       	movw	r20, r26
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	a0 e0       	ldi	r26, 0x00	; 0
     e12:	b0 e0       	ldi	r27, 0x00	; 0
     e14:	82 1b       	sub	r24, r18
     e16:	93 0b       	sbc	r25, r19
     e18:	a4 0b       	sbc	r26, r20
     e1a:	b5 0b       	sbc	r27, r21
     e1c:	2f ef       	ldi	r18, 0xFF	; 255
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	40 e0       	ldi	r20, 0x00	; 0
     e22:	50 e0       	ldi	r21, 0x00	; 0
     e24:	bc 01       	movw	r22, r24
     e26:	cd 01       	movw	r24, r26
     e28:	0e 94 99 19 	call	0x3332	; 0x3332 <__mulsi3>
     e2c:	dc 01       	movw	r26, r24
     e2e:	cb 01       	movw	r24, r22
     e30:	98 2f       	mov	r25, r24
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	69 2f       	mov	r22, r25
     e36:	43 e0       	ldi	r20, 0x03	; 3
     e38:	20 e0       	ldi	r18, 0x00	; 0
     e3a:	06 e0       	ldi	r16, 0x06	; 6
     e3c:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Timer_0_VidInitialization>
		Timer_0_VidOverflow_Inturrept(Copy_VidDelay_Func);
     e40:	8d 85       	ldd	r24, Y+13	; 0x0d
     e42:	9e 85       	ldd	r25, Y+14	; 0x0e
     e44:	0e 94 38 0c 	call	0x1870	; 0x1870 <Timer_0_VidOverflow_Inturrept>
	}
}
     e48:	2e 96       	adiw	r28, 0x0e	; 14
     e4a:	0f b6       	in	r0, 0x3f	; 63
     e4c:	f8 94       	cli
     e4e:	de bf       	out	0x3e, r29	; 62
     e50:	0f be       	out	0x3f, r0	; 63
     e52:	cd bf       	out	0x3d, r28	; 61
     e54:	cf 91       	pop	r28
     e56:	df 91       	pop	r29
     e58:	0f 91       	pop	r16
     e5a:	08 95       	ret

00000e5c <Timer_0_VidInitialization>:

void Timer_0_VidInitialization (u8 Copy_u8Mode,u8 Copy_u8OCR_Value,u8 Copy_u8Compare_Match_Interrupt,u8 Copy_u8Over_Flow_Interrupt,u8 Copy_u8Pre_Scalar)
{
     e5c:	0f 93       	push	r16
     e5e:	df 93       	push	r29
     e60:	cf 93       	push	r28
     e62:	cd b7       	in	r28, 0x3d	; 61
     e64:	de b7       	in	r29, 0x3e	; 62
     e66:	2d 97       	sbiw	r28, 0x0d	; 13
     e68:	0f b6       	in	r0, 0x3f	; 63
     e6a:	f8 94       	cli
     e6c:	de bf       	out	0x3e, r29	; 62
     e6e:	0f be       	out	0x3f, r0	; 63
     e70:	cd bf       	out	0x3d, r28	; 61
     e72:	89 83       	std	Y+1, r24	; 0x01
     e74:	6a 83       	std	Y+2, r22	; 0x02
     e76:	4b 83       	std	Y+3, r20	; 0x03
     e78:	2c 83       	std	Y+4, r18	; 0x04
     e7a:	0d 83       	std	Y+5, r16	; 0x05
	switch(Copy_u8Mode)
     e7c:	89 81       	ldd	r24, Y+1	; 0x01
     e7e:	28 2f       	mov	r18, r24
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	3d 87       	std	Y+13, r19	; 0x0d
     e84:	2c 87       	std	Y+12, r18	; 0x0c
     e86:	8c 85       	ldd	r24, Y+12	; 0x0c
     e88:	9d 85       	ldd	r25, Y+13	; 0x0d
     e8a:	82 30       	cpi	r24, 0x02	; 2
     e8c:	91 05       	cpc	r25, r1
     e8e:	e1 f1       	breq	.+120    	; 0xf08 <Timer_0_VidInitialization+0xac>
     e90:	2c 85       	ldd	r18, Y+12	; 0x0c
     e92:	3d 85       	ldd	r19, Y+13	; 0x0d
     e94:	23 30       	cpi	r18, 0x03	; 3
     e96:	31 05       	cpc	r19, r1
     e98:	34 f4       	brge	.+12     	; 0xea6 <Timer_0_VidInitialization+0x4a>
     e9a:	8c 85       	ldd	r24, Y+12	; 0x0c
     e9c:	9d 85       	ldd	r25, Y+13	; 0x0d
     e9e:	81 30       	cpi	r24, 0x01	; 1
     ea0:	91 05       	cpc	r25, r1
     ea2:	61 f0       	breq	.+24     	; 0xebc <Timer_0_VidInitialization+0x60>
     ea4:	4f c0       	rjmp	.+158    	; 0xf44 <Timer_0_VidInitialization+0xe8>
     ea6:	2c 85       	ldd	r18, Y+12	; 0x0c
     ea8:	3d 85       	ldd	r19, Y+13	; 0x0d
     eaa:	23 30       	cpi	r18, 0x03	; 3
     eac:	31 05       	cpc	r19, r1
     eae:	c9 f0       	breq	.+50     	; 0xee2 <Timer_0_VidInitialization+0x86>
     eb0:	8c 85       	ldd	r24, Y+12	; 0x0c
     eb2:	9d 85       	ldd	r25, Y+13	; 0x0d
     eb4:	84 30       	cpi	r24, 0x04	; 4
     eb6:	91 05       	cpc	r25, r1
     eb8:	b1 f1       	breq	.+108    	; 0xf26 <Timer_0_VidInitialization+0xca>
     eba:	44 c0       	rjmp	.+136    	; 0xf44 <Timer_0_VidInitialization+0xe8>
	{
		case(Normal):Clear_Bit(TCCR0,TCCR0_WGM00);Clear_Bit(TCCR0,TCCR0_WGM01);OCR0=Copy_u8OCR_Value;break;
     ebc:	a3 e5       	ldi	r26, 0x53	; 83
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	e3 e5       	ldi	r30, 0x53	; 83
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	80 81       	ld	r24, Z
     ec6:	8f 7b       	andi	r24, 0xBF	; 191
     ec8:	8c 93       	st	X, r24
     eca:	a3 e5       	ldi	r26, 0x53	; 83
     ecc:	b0 e0       	ldi	r27, 0x00	; 0
     ece:	e3 e5       	ldi	r30, 0x53	; 83
     ed0:	f0 e0       	ldi	r31, 0x00	; 0
     ed2:	80 81       	ld	r24, Z
     ed4:	87 7f       	andi	r24, 0xF7	; 247
     ed6:	8c 93       	st	X, r24
     ed8:	ec e5       	ldi	r30, 0x5C	; 92
     eda:	f0 e0       	ldi	r31, 0x00	; 0
     edc:	8a 81       	ldd	r24, Y+2	; 0x02
     ede:	80 83       	st	Z, r24
     ee0:	3f c0       	rjmp	.+126    	; 0xf60 <Timer_0_VidInitialization+0x104>
		case(CTC):Clear_Bit(TCCR0,TCCR0_WGM00);Set_Bit(TCCR0,TCCR0_WGM01);OCR0=Copy_u8OCR_Value;break;
     ee2:	a3 e5       	ldi	r26, 0x53	; 83
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	e3 e5       	ldi	r30, 0x53	; 83
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	80 81       	ld	r24, Z
     eec:	8f 7b       	andi	r24, 0xBF	; 191
     eee:	8c 93       	st	X, r24
     ef0:	a3 e5       	ldi	r26, 0x53	; 83
     ef2:	b0 e0       	ldi	r27, 0x00	; 0
     ef4:	e3 e5       	ldi	r30, 0x53	; 83
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	80 81       	ld	r24, Z
     efa:	88 60       	ori	r24, 0x08	; 8
     efc:	8c 93       	st	X, r24
     efe:	ec e5       	ldi	r30, 0x5C	; 92
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	8a 81       	ldd	r24, Y+2	; 0x02
     f04:	80 83       	st	Z, r24
     f06:	2c c0       	rjmp	.+88     	; 0xf60 <Timer_0_VidInitialization+0x104>
		case(PWM_Phase_Correct):Set_Bit(TCCR0,TCCR0_WGM00);Clear_Bit(TCCR0,TCCR0_WGM01);break;
     f08:	a3 e5       	ldi	r26, 0x53	; 83
     f0a:	b0 e0       	ldi	r27, 0x00	; 0
     f0c:	e3 e5       	ldi	r30, 0x53	; 83
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	80 81       	ld	r24, Z
     f12:	80 64       	ori	r24, 0x40	; 64
     f14:	8c 93       	st	X, r24
     f16:	a3 e5       	ldi	r26, 0x53	; 83
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	e3 e5       	ldi	r30, 0x53	; 83
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	80 81       	ld	r24, Z
     f20:	87 7f       	andi	r24, 0xF7	; 247
     f22:	8c 93       	st	X, r24
     f24:	1d c0       	rjmp	.+58     	; 0xf60 <Timer_0_VidInitialization+0x104>
		case(Fast_PWM):Set_Bit(TCCR0,TCCR0_WGM00);Set_Bit(TCCR0,TCCR0_WGM01);break;
     f26:	a3 e5       	ldi	r26, 0x53	; 83
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	e3 e5       	ldi	r30, 0x53	; 83
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 81       	ld	r24, Z
     f30:	80 64       	ori	r24, 0x40	; 64
     f32:	8c 93       	st	X, r24
     f34:	a3 e5       	ldi	r26, 0x53	; 83
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e3 e5       	ldi	r30, 0x53	; 83
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	88 60       	ori	r24, 0x08	; 8
     f40:	8c 93       	st	X, r24
     f42:	0e c0       	rjmp	.+28     	; 0xf60 <Timer_0_VidInitialization+0x104>
		default:Clear_Bit(TCCR0,TCCR0_WGM00);Clear_Bit(TCCR0,TCCR0_WGM01);
     f44:	a3 e5       	ldi	r26, 0x53	; 83
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	e3 e5       	ldi	r30, 0x53	; 83
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	8f 7b       	andi	r24, 0xBF	; 191
     f50:	8c 93       	st	X, r24
     f52:	a3 e5       	ldi	r26, 0x53	; 83
     f54:	b0 e0       	ldi	r27, 0x00	; 0
     f56:	e3 e5       	ldi	r30, 0x53	; 83
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	87 7f       	andi	r24, 0xF7	; 247
     f5e:	8c 93       	st	X, r24
	}
	switch(Copy_u8Compare_Match_Interrupt)
     f60:	8b 81       	ldd	r24, Y+3	; 0x03
     f62:	28 2f       	mov	r18, r24
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	3b 87       	std	Y+11, r19	; 0x0b
     f68:	2a 87       	std	Y+10, r18	; 0x0a
     f6a:	8a 85       	ldd	r24, Y+10	; 0x0a
     f6c:	9b 85       	ldd	r25, Y+11	; 0x0b
     f6e:	82 30       	cpi	r24, 0x02	; 2
     f70:	91 05       	cpc	r25, r1
     f72:	31 f0       	breq	.+12     	; 0xf80 <Timer_0_VidInitialization+0x124>
     f74:	2a 85       	ldd	r18, Y+10	; 0x0a
     f76:	3b 85       	ldd	r19, Y+11	; 0x0b
     f78:	23 30       	cpi	r18, 0x03	; 3
     f7a:	31 05       	cpc	r19, r1
     f7c:	49 f0       	breq	.+18     	; 0xf90 <Timer_0_VidInitialization+0x134>
     f7e:	10 c0       	rjmp	.+32     	; 0xfa0 <Timer_0_VidInitialization+0x144>
	{
		case(Enable_CM):Set_Bit(TIMSK,TIMSK_OCIE0);break;
     f80:	a9 e5       	ldi	r26, 0x59	; 89
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	e9 e5       	ldi	r30, 0x59	; 89
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	80 81       	ld	r24, Z
     f8a:	82 60       	ori	r24, 0x02	; 2
     f8c:	8c 93       	st	X, r24
     f8e:	0f c0       	rjmp	.+30     	; 0xfae <Timer_0_VidInitialization+0x152>
		case(Disable_CM):Clear_Bit(TIMSK,TIMSK_OCIE0);break;
     f90:	a9 e5       	ldi	r26, 0x59	; 89
     f92:	b0 e0       	ldi	r27, 0x00	; 0
     f94:	e9 e5       	ldi	r30, 0x59	; 89
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	80 81       	ld	r24, Z
     f9a:	8d 7f       	andi	r24, 0xFD	; 253
     f9c:	8c 93       	st	X, r24
     f9e:	07 c0       	rjmp	.+14     	; 0xfae <Timer_0_VidInitialization+0x152>
		default:Set_Bit(TIMSK,TIMSK_OCIE0);
     fa0:	a9 e5       	ldi	r26, 0x59	; 89
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e9 e5       	ldi	r30, 0x59	; 89
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	82 60       	ori	r24, 0x02	; 2
     fac:	8c 93       	st	X, r24
	}
	switch(Copy_u8Over_Flow_Interrupt)
     fae:	8c 81       	ldd	r24, Y+4	; 0x04
     fb0:	28 2f       	mov	r18, r24
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	39 87       	std	Y+9, r19	; 0x09
     fb6:	28 87       	std	Y+8, r18	; 0x08
     fb8:	88 85       	ldd	r24, Y+8	; 0x08
     fba:	99 85       	ldd	r25, Y+9	; 0x09
     fbc:	00 97       	sbiw	r24, 0x00	; 0
     fbe:	31 f0       	breq	.+12     	; 0xfcc <Timer_0_VidInitialization+0x170>
     fc0:	28 85       	ldd	r18, Y+8	; 0x08
     fc2:	39 85       	ldd	r19, Y+9	; 0x09
     fc4:	21 30       	cpi	r18, 0x01	; 1
     fc6:	31 05       	cpc	r19, r1
     fc8:	49 f0       	breq	.+18     	; 0xfdc <Timer_0_VidInitialization+0x180>
     fca:	10 c0       	rjmp	.+32     	; 0xfec <Timer_0_VidInitialization+0x190>
	{
		case(Enable_OF):Set_Bit(TIMSK,TIMSK_TOIE0);break;
     fcc:	a9 e5       	ldi	r26, 0x59	; 89
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	e9 e5       	ldi	r30, 0x59	; 89
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	80 81       	ld	r24, Z
     fd6:	81 60       	ori	r24, 0x01	; 1
     fd8:	8c 93       	st	X, r24
     fda:	0f c0       	rjmp	.+30     	; 0xffa <Timer_0_VidInitialization+0x19e>
		case(Disable_OF):Clear_Bit(TIMSK,TIMSK_TOIE0);break;
     fdc:	a9 e5       	ldi	r26, 0x59	; 89
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	e9 e5       	ldi	r30, 0x59	; 89
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	80 81       	ld	r24, Z
     fe6:	8e 7f       	andi	r24, 0xFE	; 254
     fe8:	8c 93       	st	X, r24
     fea:	07 c0       	rjmp	.+14     	; 0xffa <Timer_0_VidInitialization+0x19e>
		default:Set_Bit(TIMSK,TIMSK_TOIE0);
     fec:	a9 e5       	ldi	r26, 0x59	; 89
     fee:	b0 e0       	ldi	r27, 0x00	; 0
     ff0:	e9 e5       	ldi	r30, 0x59	; 89
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
     ff4:	80 81       	ld	r24, Z
     ff6:	81 60       	ori	r24, 0x01	; 1
     ff8:	8c 93       	st	X, r24
	}

	if((Copy_u8Mode==PWM_Phase_Correct)||(Copy_u8Mode==Fast_PWM))
     ffa:	89 81       	ldd	r24, Y+1	; 0x01
     ffc:	82 30       	cpi	r24, 0x02	; 2
     ffe:	19 f0       	breq	.+6      	; 0x1006 <Timer_0_VidInitialization+0x1aa>
    1000:	89 81       	ldd	r24, Y+1	; 0x01
    1002:	84 30       	cpi	r24, 0x04	; 4
    1004:	71 f4       	brne	.+28     	; 0x1022 <Timer_0_VidInitialization+0x1c6>
	{
		#if	PWM_Mode == COCSOB
			Clear_Bit(TCCR0,TCCR0_COM00);
    1006:	a3 e5       	ldi	r26, 0x53	; 83
    1008:	b0 e0       	ldi	r27, 0x00	; 0
    100a:	e3 e5       	ldi	r30, 0x53	; 83
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	80 81       	ld	r24, Z
    1010:	8f 7e       	andi	r24, 0xEF	; 239
    1012:	8c 93       	st	X, r24
			Set_Bit(TCCR0,TCCR0_COM01);
    1014:	a3 e5       	ldi	r26, 0x53	; 83
    1016:	b0 e0       	ldi	r27, 0x00	; 0
    1018:	e3 e5       	ldi	r30, 0x53	; 83
    101a:	f0 e0       	ldi	r31, 0x00	; 0
    101c:	80 81       	ld	r24, Z
    101e:	80 62       	ori	r24, 0x20	; 32
    1020:	8c 93       	st	X, r24
			Set_Bit(TCCR0,TCCR0_COM01);
		#else
					#warning (" Wrong Configuration !!")
		#endif
	}
	switch(Copy_u8Pre_Scalar)
    1022:	8d 81       	ldd	r24, Y+5	; 0x05
    1024:	28 2f       	mov	r18, r24
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	3f 83       	std	Y+7, r19	; 0x07
    102a:	2e 83       	std	Y+6, r18	; 0x06
    102c:	8e 81       	ldd	r24, Y+6	; 0x06
    102e:	9f 81       	ldd	r25, Y+7	; 0x07
    1030:	83 30       	cpi	r24, 0x03	; 3
    1032:	91 05       	cpc	r25, r1
    1034:	09 f4       	brne	.+2      	; 0x1038 <Timer_0_VidInitialization+0x1dc>
    1036:	48 c0       	rjmp	.+144    	; 0x10c8 <Timer_0_VidInitialization+0x26c>
    1038:	2e 81       	ldd	r18, Y+6	; 0x06
    103a:	3f 81       	ldd	r19, Y+7	; 0x07
    103c:	24 30       	cpi	r18, 0x04	; 4
    103e:	31 05       	cpc	r19, r1
    1040:	54 f4       	brge	.+20     	; 0x1056 <Timer_0_VidInitialization+0x1fa>
    1042:	8e 81       	ldd	r24, Y+6	; 0x06
    1044:	9f 81       	ldd	r25, Y+7	; 0x07
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	99 f0       	breq	.+38     	; 0x1070 <Timer_0_VidInitialization+0x214>
    104a:	2e 81       	ldd	r18, Y+6	; 0x06
    104c:	3f 81       	ldd	r19, Y+7	; 0x07
    104e:	21 30       	cpi	r18, 0x01	; 1
    1050:	31 05       	cpc	r19, r1
    1052:	21 f1       	breq	.+72     	; 0x109c <Timer_0_VidInitialization+0x240>
    1054:	7b c0       	rjmp	.+246    	; 0x114c <Timer_0_VidInitialization+0x2f0>
    1056:	8e 81       	ldd	r24, Y+6	; 0x06
    1058:	9f 81       	ldd	r25, Y+7	; 0x07
    105a:	85 30       	cpi	r24, 0x05	; 5
    105c:	91 05       	cpc	r25, r1
    105e:	09 f4       	brne	.+2      	; 0x1062 <Timer_0_VidInitialization+0x206>
    1060:	49 c0       	rjmp	.+146    	; 0x10f4 <Timer_0_VidInitialization+0x298>
    1062:	2e 81       	ldd	r18, Y+6	; 0x06
    1064:	3f 81       	ldd	r19, Y+7	; 0x07
    1066:	26 30       	cpi	r18, 0x06	; 6
    1068:	31 05       	cpc	r19, r1
    106a:	09 f4       	brne	.+2      	; 0x106e <Timer_0_VidInitialization+0x212>
    106c:	59 c0       	rjmp	.+178    	; 0x1120 <Timer_0_VidInitialization+0x2c4>
    106e:	6e c0       	rjmp	.+220    	; 0x114c <Timer_0_VidInitialization+0x2f0>
	{
		case(Pre_Scalar_0):Set_Bit(TCCR0 , TCCR0_CS00);Clear_Bit(TCCR0 , TCCR0_CS01);Clear_Bit(TCCR0 , TCCR0_CS02);break;
    1070:	a3 e5       	ldi	r26, 0x53	; 83
    1072:	b0 e0       	ldi	r27, 0x00	; 0
    1074:	e3 e5       	ldi	r30, 0x53	; 83
    1076:	f0 e0       	ldi	r31, 0x00	; 0
    1078:	80 81       	ld	r24, Z
    107a:	81 60       	ori	r24, 0x01	; 1
    107c:	8c 93       	st	X, r24
    107e:	a3 e5       	ldi	r26, 0x53	; 83
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	e3 e5       	ldi	r30, 0x53	; 83
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	8d 7f       	andi	r24, 0xFD	; 253
    108a:	8c 93       	st	X, r24
    108c:	a3 e5       	ldi	r26, 0x53	; 83
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	e3 e5       	ldi	r30, 0x53	; 83
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	8b 7f       	andi	r24, 0xFB	; 251
    1098:	8c 93       	st	X, r24
    109a:	6d c0       	rjmp	.+218    	; 0x1176 <Timer_0_VidInitialization+0x31a>
		case(Pre_Scalar_8):Clear_Bit(TCCR0 , TCCR0_CS00);Set_Bit(TCCR0 , TCCR0_CS01);Clear_Bit(TCCR0 , TCCR0_CS02);break;
    109c:	a3 e5       	ldi	r26, 0x53	; 83
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	e3 e5       	ldi	r30, 0x53	; 83
    10a2:	f0 e0       	ldi	r31, 0x00	; 0
    10a4:	80 81       	ld	r24, Z
    10a6:	8e 7f       	andi	r24, 0xFE	; 254
    10a8:	8c 93       	st	X, r24
    10aa:	a3 e5       	ldi	r26, 0x53	; 83
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	e3 e5       	ldi	r30, 0x53	; 83
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	80 81       	ld	r24, Z
    10b4:	82 60       	ori	r24, 0x02	; 2
    10b6:	8c 93       	st	X, r24
    10b8:	a3 e5       	ldi	r26, 0x53	; 83
    10ba:	b0 e0       	ldi	r27, 0x00	; 0
    10bc:	e3 e5       	ldi	r30, 0x53	; 83
    10be:	f0 e0       	ldi	r31, 0x00	; 0
    10c0:	80 81       	ld	r24, Z
    10c2:	8b 7f       	andi	r24, 0xFB	; 251
    10c4:	8c 93       	st	X, r24
    10c6:	57 c0       	rjmp	.+174    	; 0x1176 <Timer_0_VidInitialization+0x31a>
		case(Pre_Scalar_64):Set_Bit(TCCR0 , TCCR0_CS00);Set_Bit(TCCR0 , TCCR0_CS01);Clear_Bit(TCCR0 , TCCR0_CS02);break;
    10c8:	a3 e5       	ldi	r26, 0x53	; 83
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	e3 e5       	ldi	r30, 0x53	; 83
    10ce:	f0 e0       	ldi	r31, 0x00	; 0
    10d0:	80 81       	ld	r24, Z
    10d2:	81 60       	ori	r24, 0x01	; 1
    10d4:	8c 93       	st	X, r24
    10d6:	a3 e5       	ldi	r26, 0x53	; 83
    10d8:	b0 e0       	ldi	r27, 0x00	; 0
    10da:	e3 e5       	ldi	r30, 0x53	; 83
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 81       	ld	r24, Z
    10e0:	82 60       	ori	r24, 0x02	; 2
    10e2:	8c 93       	st	X, r24
    10e4:	a3 e5       	ldi	r26, 0x53	; 83
    10e6:	b0 e0       	ldi	r27, 0x00	; 0
    10e8:	e3 e5       	ldi	r30, 0x53	; 83
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	80 81       	ld	r24, Z
    10ee:	8b 7f       	andi	r24, 0xFB	; 251
    10f0:	8c 93       	st	X, r24
    10f2:	41 c0       	rjmp	.+130    	; 0x1176 <Timer_0_VidInitialization+0x31a>
		case(Pre_Scalar_256):Clear_Bit(TCCR0 , TCCR0_CS00);Clear_Bit(TCCR0 , TCCR0_CS01);Set_Bit(TCCR0 , TCCR0_CS02);break;
    10f4:	a3 e5       	ldi	r26, 0x53	; 83
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e3 e5       	ldi	r30, 0x53	; 83
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	80 81       	ld	r24, Z
    10fe:	8e 7f       	andi	r24, 0xFE	; 254
    1100:	8c 93       	st	X, r24
    1102:	a3 e5       	ldi	r26, 0x53	; 83
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	e3 e5       	ldi	r30, 0x53	; 83
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	80 81       	ld	r24, Z
    110c:	8d 7f       	andi	r24, 0xFD	; 253
    110e:	8c 93       	st	X, r24
    1110:	a3 e5       	ldi	r26, 0x53	; 83
    1112:	b0 e0       	ldi	r27, 0x00	; 0
    1114:	e3 e5       	ldi	r30, 0x53	; 83
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	84 60       	ori	r24, 0x04	; 4
    111c:	8c 93       	st	X, r24
    111e:	2b c0       	rjmp	.+86     	; 0x1176 <Timer_0_VidInitialization+0x31a>
		case(Pre_Scalar_1024):Set_Bit(TCCR0 , TCCR0_CS00);Clear_Bit(TCCR0 , TCCR0_CS01);Set_Bit(TCCR0 , TCCR0_CS02);break;
    1120:	a3 e5       	ldi	r26, 0x53	; 83
    1122:	b0 e0       	ldi	r27, 0x00	; 0
    1124:	e3 e5       	ldi	r30, 0x53	; 83
    1126:	f0 e0       	ldi	r31, 0x00	; 0
    1128:	80 81       	ld	r24, Z
    112a:	81 60       	ori	r24, 0x01	; 1
    112c:	8c 93       	st	X, r24
    112e:	a3 e5       	ldi	r26, 0x53	; 83
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	e3 e5       	ldi	r30, 0x53	; 83
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	80 81       	ld	r24, Z
    1138:	8d 7f       	andi	r24, 0xFD	; 253
    113a:	8c 93       	st	X, r24
    113c:	a3 e5       	ldi	r26, 0x53	; 83
    113e:	b0 e0       	ldi	r27, 0x00	; 0
    1140:	e3 e5       	ldi	r30, 0x53	; 83
    1142:	f0 e0       	ldi	r31, 0x00	; 0
    1144:	80 81       	ld	r24, Z
    1146:	84 60       	ori	r24, 0x04	; 4
    1148:	8c 93       	st	X, r24
    114a:	15 c0       	rjmp	.+42     	; 0x1176 <Timer_0_VidInitialization+0x31a>
		default:Clear_Bit(TCCR0 , TCCR0_CS00);Clear_Bit(TCCR0 , TCCR0_CS01);Clear_Bit(TCCR0 , TCCR0_CS02);
    114c:	a3 e5       	ldi	r26, 0x53	; 83
    114e:	b0 e0       	ldi	r27, 0x00	; 0
    1150:	e3 e5       	ldi	r30, 0x53	; 83
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	80 81       	ld	r24, Z
    1156:	8e 7f       	andi	r24, 0xFE	; 254
    1158:	8c 93       	st	X, r24
    115a:	a3 e5       	ldi	r26, 0x53	; 83
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	e3 e5       	ldi	r30, 0x53	; 83
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	80 81       	ld	r24, Z
    1164:	8d 7f       	andi	r24, 0xFD	; 253
    1166:	8c 93       	st	X, r24
    1168:	a3 e5       	ldi	r26, 0x53	; 83
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	e3 e5       	ldi	r30, 0x53	; 83
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	80 81       	ld	r24, Z
    1172:	8b 7f       	andi	r24, 0xFB	; 251
    1174:	8c 93       	st	X, r24
	}
}
    1176:	2d 96       	adiw	r28, 0x0d	; 13
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	f8 94       	cli
    117c:	de bf       	out	0x3e, r29	; 62
    117e:	0f be       	out	0x3f, r0	; 63
    1180:	cd bf       	out	0x3d, r28	; 61
    1182:	cf 91       	pop	r28
    1184:	df 91       	pop	r29
    1186:	0f 91       	pop	r16
    1188:	08 95       	ret

0000118a <Timer_2_VidDelay_ms>:

/************************************************/
/*					Timer 2 					*/
/************************************************/
void Timer_2_VidDelay_ms(u32 Copy_u32Delay,void (*Copy_VidDelay_Func)(void))
{
    118a:	0f 93       	push	r16
    118c:	df 93       	push	r29
    118e:	cf 93       	push	r28
    1190:	cd b7       	in	r28, 0x3d	; 61
    1192:	de b7       	in	r29, 0x3e	; 62
    1194:	2e 97       	sbiw	r28, 0x0e	; 14
    1196:	0f b6       	in	r0, 0x3f	; 63
    1198:	f8 94       	cli
    119a:	de bf       	out	0x3e, r29	; 62
    119c:	0f be       	out	0x3f, r0	; 63
    119e:	cd bf       	out	0x3d, r28	; 61
    11a0:	69 87       	std	Y+9, r22	; 0x09
    11a2:	7a 87       	std	Y+10, r23	; 0x0a
    11a4:	8b 87       	std	Y+11, r24	; 0x0b
    11a6:	9c 87       	std	Y+12, r25	; 0x0c
    11a8:	5e 87       	std	Y+14, r21	; 0x0e
    11aa:	4d 87       	std	Y+13, r20	; 0x0d
	f32 Local_f32Tic_Time=(1024.0/CPU_Freq)*1000;
    11ac:	8f e6       	ldi	r24, 0x6F	; 111
    11ae:	92 e1       	ldi	r25, 0x12	; 18
    11b0:	a3 e8       	ldi	r26, 0x83	; 131
    11b2:	be e3       	ldi	r27, 0x3E	; 62
    11b4:	8d 83       	std	Y+5, r24	; 0x05
    11b6:	9e 83       	std	Y+6, r25	; 0x06
    11b8:	af 83       	std	Y+7, r26	; 0x07
    11ba:	b8 87       	std	Y+8, r27	; 0x08
	u32 Local_u32Total_Tics=Copy_u32Delay/Local_f32Tic_Time;
    11bc:	69 85       	ldd	r22, Y+9	; 0x09
    11be:	7a 85       	ldd	r23, Y+10	; 0x0a
    11c0:	8b 85       	ldd	r24, Y+11	; 0x0b
    11c2:	9c 85       	ldd	r25, Y+12	; 0x0c
    11c4:	0e 94 4f 03 	call	0x69e	; 0x69e <__floatunsisf>
    11c8:	dc 01       	movw	r26, r24
    11ca:	cb 01       	movw	r24, r22
    11cc:	bc 01       	movw	r22, r24
    11ce:	cd 01       	movw	r24, r26
    11d0:	2d 81       	ldd	r18, Y+5	; 0x05
    11d2:	3e 81       	ldd	r19, Y+6	; 0x06
    11d4:	4f 81       	ldd	r20, Y+7	; 0x07
    11d6:	58 85       	ldd	r21, Y+8	; 0x08
    11d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__divsf3>
    11dc:	dc 01       	movw	r26, r24
    11de:	cb 01       	movw	r24, r22
    11e0:	bc 01       	movw	r22, r24
    11e2:	cd 01       	movw	r24, r26
    11e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11e8:	dc 01       	movw	r26, r24
    11ea:	cb 01       	movw	r24, r22
    11ec:	89 83       	std	Y+1, r24	; 0x01
    11ee:	9a 83       	std	Y+2, r25	; 0x02
    11f0:	ab 83       	std	Y+3, r26	; 0x03
    11f2:	bc 83       	std	Y+4, r27	; 0x04
	if (Local_u32Total_Tics<=255)
    11f4:	89 81       	ldd	r24, Y+1	; 0x01
    11f6:	9a 81       	ldd	r25, Y+2	; 0x02
    11f8:	ab 81       	ldd	r26, Y+3	; 0x03
    11fa:	bc 81       	ldd	r27, Y+4	; 0x04
    11fc:	8f 3f       	cpi	r24, 0xFF	; 255
    11fe:	91 05       	cpc	r25, r1
    1200:	a1 05       	cpc	r26, r1
    1202:	b1 05       	cpc	r27, r1
    1204:	09 f0       	breq	.+2      	; 0x1208 <Timer_2_VidDelay_ms+0x7e>
    1206:	68 f4       	brcc	.+26     	; 0x1222 <Timer_2_VidDelay_ms+0x98>
	{
		Timer_2_VidInitialization(CTC,Local_u32Total_Tics,Enable_CM,Disable_OF,Pre_Scalar_1024);
    1208:	99 81       	ldd	r25, Y+1	; 0x01
    120a:	83 e0       	ldi	r24, 0x03	; 3
    120c:	69 2f       	mov	r22, r25
    120e:	42 e0       	ldi	r20, 0x02	; 2
    1210:	21 e0       	ldi	r18, 0x01	; 1
    1212:	06 e0       	ldi	r16, 0x06	; 6
    1214:	0e 94 35 0a 	call	0x146a	; 0x146a <Timer_2_VidInitialization>
		Timer_2_VidCompare_Match_Inturrept(Copy_VidDelay_Func);
    1218:	8d 85       	ldd	r24, Y+13	; 0x0d
    121a:	9e 85       	ldd	r25, Y+14	; 0x0e
    121c:	0e 94 67 0d 	call	0x1ace	; 0x1ace <Timer_2_VidCompare_Match_Inturrept>
    1220:	47 c0       	rjmp	.+142    	; 0x12b0 <Timer_2_VidDelay_ms+0x126>
	}
	else
	{
		Global_Timer_2_u16Flag=(Local_u32Total_Tics/255)+1;
    1222:	89 81       	ldd	r24, Y+1	; 0x01
    1224:	9a 81       	ldd	r25, Y+2	; 0x02
    1226:	ab 81       	ldd	r26, Y+3	; 0x03
    1228:	bc 81       	ldd	r27, Y+4	; 0x04
    122a:	2f ef       	ldi	r18, 0xFF	; 255
    122c:	30 e0       	ldi	r19, 0x00	; 0
    122e:	40 e0       	ldi	r20, 0x00	; 0
    1230:	50 e0       	ldi	r21, 0x00	; 0
    1232:	bc 01       	movw	r22, r24
    1234:	cd 01       	movw	r24, r26
    1236:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
    123a:	da 01       	movw	r26, r20
    123c:	c9 01       	movw	r24, r18
    123e:	01 96       	adiw	r24, 0x01	; 1
    1240:	a1 1d       	adc	r26, r1
    1242:	b1 1d       	adc	r27, r1
    1244:	80 93 79 01 	sts	0x0179, r24
    1248:	90 93 7a 01 	sts	0x017A, r25
    124c:	a0 93 7b 01 	sts	0x017B, r26
    1250:	b0 93 7c 01 	sts	0x017C, r27
		Timer_2_VidInitialization(Normal,255-((Local_u32Total_Tics%255)*255),Disable_CM,Enable_OF,Pre_Scalar_1024);
    1254:	89 81       	ldd	r24, Y+1	; 0x01
    1256:	9a 81       	ldd	r25, Y+2	; 0x02
    1258:	ab 81       	ldd	r26, Y+3	; 0x03
    125a:	bc 81       	ldd	r27, Y+4	; 0x04
    125c:	2f ef       	ldi	r18, 0xFF	; 255
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	40 e0       	ldi	r20, 0x00	; 0
    1262:	50 e0       	ldi	r21, 0x00	; 0
    1264:	bc 01       	movw	r22, r24
    1266:	cd 01       	movw	r24, r26
    1268:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
    126c:	dc 01       	movw	r26, r24
    126e:	cb 01       	movw	r24, r22
    1270:	9c 01       	movw	r18, r24
    1272:	ad 01       	movw	r20, r26
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	a0 e0       	ldi	r26, 0x00	; 0
    127a:	b0 e0       	ldi	r27, 0x00	; 0
    127c:	82 1b       	sub	r24, r18
    127e:	93 0b       	sbc	r25, r19
    1280:	a4 0b       	sbc	r26, r20
    1282:	b5 0b       	sbc	r27, r21
    1284:	2f ef       	ldi	r18, 0xFF	; 255
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	40 e0       	ldi	r20, 0x00	; 0
    128a:	50 e0       	ldi	r21, 0x00	; 0
    128c:	bc 01       	movw	r22, r24
    128e:	cd 01       	movw	r24, r26
    1290:	0e 94 99 19 	call	0x3332	; 0x3332 <__mulsi3>
    1294:	dc 01       	movw	r26, r24
    1296:	cb 01       	movw	r24, r22
    1298:	98 2f       	mov	r25, r24
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	69 2f       	mov	r22, r25
    129e:	43 e0       	ldi	r20, 0x03	; 3
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	06 e0       	ldi	r16, 0x06	; 6
    12a4:	0e 94 35 0a 	call	0x146a	; 0x146a <Timer_2_VidInitialization>
		Timer_2_VidOverflow_Inturrept(Copy_VidDelay_Func);
    12a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    12aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    12ac:	0e 94 fb 0c 	call	0x19f6	; 0x19f6 <Timer_2_VidOverflow_Inturrept>
	}
}
    12b0:	2e 96       	adiw	r28, 0x0e	; 14
    12b2:	0f b6       	in	r0, 0x3f	; 63
    12b4:	f8 94       	cli
    12b6:	de bf       	out	0x3e, r29	; 62
    12b8:	0f be       	out	0x3f, r0	; 63
    12ba:	cd bf       	out	0x3d, r28	; 61
    12bc:	cf 91       	pop	r28
    12be:	df 91       	pop	r29
    12c0:	0f 91       	pop	r16
    12c2:	08 95       	ret

000012c4 <Timer_2_VidBusy_Wait_ms>:
void Timer_2_VidBusy_Wait_ms(u32 Copy_u32Delay)
{
    12c4:	0f 93       	push	r16
    12c6:	df 93       	push	r29
    12c8:	cf 93       	push	r28
    12ca:	cd b7       	in	r28, 0x3d	; 61
    12cc:	de b7       	in	r29, 0x3e	; 62
    12ce:	2c 97       	sbiw	r28, 0x0c	; 12
    12d0:	0f b6       	in	r0, 0x3f	; 63
    12d2:	f8 94       	cli
    12d4:	de bf       	out	0x3e, r29	; 62
    12d6:	0f be       	out	0x3f, r0	; 63
    12d8:	cd bf       	out	0x3d, r28	; 61
    12da:	69 87       	std	Y+9, r22	; 0x09
    12dc:	7a 87       	std	Y+10, r23	; 0x0a
    12de:	8b 87       	std	Y+11, r24	; 0x0b
    12e0:	9c 87       	std	Y+12, r25	; 0x0c
	f32 Local_f32Tic_Time=(1024.0/CPU_Freq)*1000;
    12e2:	8f e6       	ldi	r24, 0x6F	; 111
    12e4:	92 e1       	ldi	r25, 0x12	; 18
    12e6:	a3 e8       	ldi	r26, 0x83	; 131
    12e8:	be e3       	ldi	r27, 0x3E	; 62
    12ea:	8d 83       	std	Y+5, r24	; 0x05
    12ec:	9e 83       	std	Y+6, r25	; 0x06
    12ee:	af 83       	std	Y+7, r26	; 0x07
    12f0:	b8 87       	std	Y+8, r27	; 0x08
	u32 Local_u32Total_Tics=Copy_u32Delay/Local_f32Tic_Time;
    12f2:	69 85       	ldd	r22, Y+9	; 0x09
    12f4:	7a 85       	ldd	r23, Y+10	; 0x0a
    12f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    12f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    12fa:	0e 94 4f 03 	call	0x69e	; 0x69e <__floatunsisf>
    12fe:	dc 01       	movw	r26, r24
    1300:	cb 01       	movw	r24, r22
    1302:	bc 01       	movw	r22, r24
    1304:	cd 01       	movw	r24, r26
    1306:	2d 81       	ldd	r18, Y+5	; 0x05
    1308:	3e 81       	ldd	r19, Y+6	; 0x06
    130a:	4f 81       	ldd	r20, Y+7	; 0x07
    130c:	58 85       	ldd	r21, Y+8	; 0x08
    130e:	0e 94 1f 02 	call	0x43e	; 0x43e <__divsf3>
    1312:	dc 01       	movw	r26, r24
    1314:	cb 01       	movw	r24, r22
    1316:	bc 01       	movw	r22, r24
    1318:	cd 01       	movw	r24, r26
    131a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    131e:	dc 01       	movw	r26, r24
    1320:	cb 01       	movw	r24, r22
    1322:	89 83       	std	Y+1, r24	; 0x01
    1324:	9a 83       	std	Y+2, r25	; 0x02
    1326:	ab 83       	std	Y+3, r26	; 0x03
    1328:	bc 83       	std	Y+4, r27	; 0x04
	if (Local_u32Total_Tics<=255)
    132a:	89 81       	ldd	r24, Y+1	; 0x01
    132c:	9a 81       	ldd	r25, Y+2	; 0x02
    132e:	ab 81       	ldd	r26, Y+3	; 0x03
    1330:	bc 81       	ldd	r27, Y+4	; 0x04
    1332:	8f 3f       	cpi	r24, 0xFF	; 255
    1334:	91 05       	cpc	r25, r1
    1336:	a1 05       	cpc	r26, r1
    1338:	b1 05       	cpc	r27, r1
    133a:	09 f0       	breq	.+2      	; 0x133e <Timer_2_VidBusy_Wait_ms+0x7a>
    133c:	a8 f4       	brcc	.+42     	; 0x1368 <Timer_2_VidBusy_Wait_ms+0xa4>
	{
		Timer_2_VidInitialization(CTC,Local_u32Total_Tics,Disable_CM,Disable_OF,Pre_Scalar_1024);
    133e:	99 81       	ldd	r25, Y+1	; 0x01
    1340:	83 e0       	ldi	r24, 0x03	; 3
    1342:	69 2f       	mov	r22, r25
    1344:	43 e0       	ldi	r20, 0x03	; 3
    1346:	21 e0       	ldi	r18, 0x01	; 1
    1348:	06 e0       	ldi	r16, 0x06	; 6
    134a:	0e 94 35 0a 	call	0x146a	; 0x146a <Timer_2_VidInitialization>
		while(!Get_Bit(TIFR,TIFR_OCF2));
    134e:	e8 e5       	ldi	r30, 0x58	; 88
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	80 81       	ld	r24, Z
    1354:	88 23       	and	r24, r24
    1356:	dc f7       	brge	.-10     	; 0x134e <Timer_2_VidBusy_Wait_ms+0x8a>
		Set_Bit(TIFR,TIFR_OCF2);
    1358:	a8 e5       	ldi	r26, 0x58	; 88
    135a:	b0 e0       	ldi	r27, 0x00	; 0
    135c:	e8 e5       	ldi	r30, 0x58	; 88
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	80 81       	ld	r24, Z
    1362:	80 68       	ori	r24, 0x80	; 128
    1364:	8c 93       	st	X, r24
    1366:	77 c0       	rjmp	.+238    	; 0x1456 <Timer_2_VidBusy_Wait_ms+0x192>
	}
	else
	{
		Global_Timer_2_u16Flag=(Local_u32Total_Tics/255)+1;
    1368:	89 81       	ldd	r24, Y+1	; 0x01
    136a:	9a 81       	ldd	r25, Y+2	; 0x02
    136c:	ab 81       	ldd	r26, Y+3	; 0x03
    136e:	bc 81       	ldd	r27, Y+4	; 0x04
    1370:	2f ef       	ldi	r18, 0xFF	; 255
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	40 e0       	ldi	r20, 0x00	; 0
    1376:	50 e0       	ldi	r21, 0x00	; 0
    1378:	bc 01       	movw	r22, r24
    137a:	cd 01       	movw	r24, r26
    137c:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
    1380:	da 01       	movw	r26, r20
    1382:	c9 01       	movw	r24, r18
    1384:	01 96       	adiw	r24, 0x01	; 1
    1386:	a1 1d       	adc	r26, r1
    1388:	b1 1d       	adc	r27, r1
    138a:	80 93 79 01 	sts	0x0179, r24
    138e:	90 93 7a 01 	sts	0x017A, r25
    1392:	a0 93 7b 01 	sts	0x017B, r26
    1396:	b0 93 7c 01 	sts	0x017C, r27
		Timer_2_VidInitialization(Normal,255-((Local_u32Total_Tics%255)*255),Disable_CM,Disable_OF,Pre_Scalar_1024);
    139a:	89 81       	ldd	r24, Y+1	; 0x01
    139c:	9a 81       	ldd	r25, Y+2	; 0x02
    139e:	ab 81       	ldd	r26, Y+3	; 0x03
    13a0:	bc 81       	ldd	r27, Y+4	; 0x04
    13a2:	2f ef       	ldi	r18, 0xFF	; 255
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	40 e0       	ldi	r20, 0x00	; 0
    13a8:	50 e0       	ldi	r21, 0x00	; 0
    13aa:	bc 01       	movw	r22, r24
    13ac:	cd 01       	movw	r24, r26
    13ae:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
    13b2:	dc 01       	movw	r26, r24
    13b4:	cb 01       	movw	r24, r22
    13b6:	9c 01       	movw	r18, r24
    13b8:	ad 01       	movw	r20, r26
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	a0 e0       	ldi	r26, 0x00	; 0
    13c0:	b0 e0       	ldi	r27, 0x00	; 0
    13c2:	82 1b       	sub	r24, r18
    13c4:	93 0b       	sbc	r25, r19
    13c6:	a4 0b       	sbc	r26, r20
    13c8:	b5 0b       	sbc	r27, r21
    13ca:	2f ef       	ldi	r18, 0xFF	; 255
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	40 e0       	ldi	r20, 0x00	; 0
    13d0:	50 e0       	ldi	r21, 0x00	; 0
    13d2:	bc 01       	movw	r22, r24
    13d4:	cd 01       	movw	r24, r26
    13d6:	0e 94 99 19 	call	0x3332	; 0x3332 <__mulsi3>
    13da:	dc 01       	movw	r26, r24
    13dc:	cb 01       	movw	r24, r22
    13de:	98 2f       	mov	r25, r24
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	69 2f       	mov	r22, r25
    13e4:	43 e0       	ldi	r20, 0x03	; 3
    13e6:	21 e0       	ldi	r18, 0x01	; 1
    13e8:	06 e0       	ldi	r16, 0x06	; 6
    13ea:	0e 94 35 0a 	call	0x146a	; 0x146a <Timer_2_VidInitialization>
    13ee:	27 c0       	rjmp	.+78     	; 0x143e <Timer_2_VidBusy_Wait_ms+0x17a>
		while(Global_Timer_2_u16Flag)
		{
			if(Get_Bit(TIFR,TIFR_TOV2))
    13f0:	e8 e5       	ldi	r30, 0x58	; 88
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	80 81       	ld	r24, Z
    13f6:	82 95       	swap	r24
    13f8:	86 95       	lsr	r24
    13fa:	86 95       	lsr	r24
    13fc:	83 70       	andi	r24, 0x03	; 3
    13fe:	88 2f       	mov	r24, r24
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	81 70       	andi	r24, 0x01	; 1
    1404:	90 70       	andi	r25, 0x00	; 0
    1406:	88 23       	and	r24, r24
    1408:	d1 f0       	breq	.+52     	; 0x143e <Timer_2_VidBusy_Wait_ms+0x17a>
			{
				Global_Timer_2_u16Flag--;
    140a:	80 91 79 01 	lds	r24, 0x0179
    140e:	90 91 7a 01 	lds	r25, 0x017A
    1412:	a0 91 7b 01 	lds	r26, 0x017B
    1416:	b0 91 7c 01 	lds	r27, 0x017C
    141a:	01 97       	sbiw	r24, 0x01	; 1
    141c:	a1 09       	sbc	r26, r1
    141e:	b1 09       	sbc	r27, r1
    1420:	80 93 79 01 	sts	0x0179, r24
    1424:	90 93 7a 01 	sts	0x017A, r25
    1428:	a0 93 7b 01 	sts	0x017B, r26
    142c:	b0 93 7c 01 	sts	0x017C, r27
				Set_Bit(TIFR,TIFR_TOV2);
    1430:	a8 e5       	ldi	r26, 0x58	; 88
    1432:	b0 e0       	ldi	r27, 0x00	; 0
    1434:	e8 e5       	ldi	r30, 0x58	; 88
    1436:	f0 e0       	ldi	r31, 0x00	; 0
    1438:	80 81       	ld	r24, Z
    143a:	80 64       	ori	r24, 0x40	; 64
    143c:	8c 93       	st	X, r24
	}
	else
	{
		Global_Timer_2_u16Flag=(Local_u32Total_Tics/255)+1;
		Timer_2_VidInitialization(Normal,255-((Local_u32Total_Tics%255)*255),Disable_CM,Disable_OF,Pre_Scalar_1024);
		while(Global_Timer_2_u16Flag)
    143e:	80 91 79 01 	lds	r24, 0x0179
    1442:	90 91 7a 01 	lds	r25, 0x017A
    1446:	a0 91 7b 01 	lds	r26, 0x017B
    144a:	b0 91 7c 01 	lds	r27, 0x017C
    144e:	00 97       	sbiw	r24, 0x00	; 0
    1450:	a1 05       	cpc	r26, r1
    1452:	b1 05       	cpc	r27, r1
    1454:	69 f6       	brne	.-102    	; 0x13f0 <Timer_2_VidBusy_Wait_ms+0x12c>
				Set_Bit(TIFR,TIFR_TOV2);
			}
		}
	}

}
    1456:	2c 96       	adiw	r28, 0x0c	; 12
    1458:	0f b6       	in	r0, 0x3f	; 63
    145a:	f8 94       	cli
    145c:	de bf       	out	0x3e, r29	; 62
    145e:	0f be       	out	0x3f, r0	; 63
    1460:	cd bf       	out	0x3d, r28	; 61
    1462:	cf 91       	pop	r28
    1464:	df 91       	pop	r29
    1466:	0f 91       	pop	r16
    1468:	08 95       	ret

0000146a <Timer_2_VidInitialization>:

void Timer_2_VidInitialization (u8 Copy_u8Mode,u8 Copy_u8OCR_Value,u8 Copy_u8Compare_Match_Interrupt,u8 Copy_u8Over_Flow_Interrupt,u8 Copy_u8Pre_Scalar)
{
    146a:	0f 93       	push	r16
    146c:	df 93       	push	r29
    146e:	cf 93       	push	r28
    1470:	cd b7       	in	r28, 0x3d	; 61
    1472:	de b7       	in	r29, 0x3e	; 62
    1474:	2d 97       	sbiw	r28, 0x0d	; 13
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	f8 94       	cli
    147a:	de bf       	out	0x3e, r29	; 62
    147c:	0f be       	out	0x3f, r0	; 63
    147e:	cd bf       	out	0x3d, r28	; 61
    1480:	89 83       	std	Y+1, r24	; 0x01
    1482:	6a 83       	std	Y+2, r22	; 0x02
    1484:	4b 83       	std	Y+3, r20	; 0x03
    1486:	2c 83       	std	Y+4, r18	; 0x04
    1488:	0d 83       	std	Y+5, r16	; 0x05
	switch(Copy_u8Mode)
    148a:	89 81       	ldd	r24, Y+1	; 0x01
    148c:	28 2f       	mov	r18, r24
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	3d 87       	std	Y+13, r19	; 0x0d
    1492:	2c 87       	std	Y+12, r18	; 0x0c
    1494:	8c 85       	ldd	r24, Y+12	; 0x0c
    1496:	9d 85       	ldd	r25, Y+13	; 0x0d
    1498:	82 30       	cpi	r24, 0x02	; 2
    149a:	91 05       	cpc	r25, r1
    149c:	e1 f1       	breq	.+120    	; 0x1516 <Timer_2_VidInitialization+0xac>
    149e:	2c 85       	ldd	r18, Y+12	; 0x0c
    14a0:	3d 85       	ldd	r19, Y+13	; 0x0d
    14a2:	23 30       	cpi	r18, 0x03	; 3
    14a4:	31 05       	cpc	r19, r1
    14a6:	34 f4       	brge	.+12     	; 0x14b4 <Timer_2_VidInitialization+0x4a>
    14a8:	8c 85       	ldd	r24, Y+12	; 0x0c
    14aa:	9d 85       	ldd	r25, Y+13	; 0x0d
    14ac:	81 30       	cpi	r24, 0x01	; 1
    14ae:	91 05       	cpc	r25, r1
    14b0:	61 f0       	breq	.+24     	; 0x14ca <Timer_2_VidInitialization+0x60>
    14b2:	4f c0       	rjmp	.+158    	; 0x1552 <Timer_2_VidInitialization+0xe8>
    14b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    14b6:	3d 85       	ldd	r19, Y+13	; 0x0d
    14b8:	23 30       	cpi	r18, 0x03	; 3
    14ba:	31 05       	cpc	r19, r1
    14bc:	c9 f0       	breq	.+50     	; 0x14f0 <Timer_2_VidInitialization+0x86>
    14be:	8c 85       	ldd	r24, Y+12	; 0x0c
    14c0:	9d 85       	ldd	r25, Y+13	; 0x0d
    14c2:	84 30       	cpi	r24, 0x04	; 4
    14c4:	91 05       	cpc	r25, r1
    14c6:	b1 f1       	breq	.+108    	; 0x1534 <Timer_2_VidInitialization+0xca>
    14c8:	44 c0       	rjmp	.+136    	; 0x1552 <Timer_2_VidInitialization+0xe8>
	{
		case(Normal):Clear_Bit(TCCR2,TCCR2_WGM21);Clear_Bit(TCCR2,TCCR2_WGM20);OCR2=Copy_u8OCR_Value;break;
    14ca:	a5 e4       	ldi	r26, 0x45	; 69
    14cc:	b0 e0       	ldi	r27, 0x00	; 0
    14ce:	e5 e4       	ldi	r30, 0x45	; 69
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	80 81       	ld	r24, Z
    14d4:	87 7f       	andi	r24, 0xF7	; 247
    14d6:	8c 93       	st	X, r24
    14d8:	a5 e4       	ldi	r26, 0x45	; 69
    14da:	b0 e0       	ldi	r27, 0x00	; 0
    14dc:	e5 e4       	ldi	r30, 0x45	; 69
    14de:	f0 e0       	ldi	r31, 0x00	; 0
    14e0:	80 81       	ld	r24, Z
    14e2:	8f 7b       	andi	r24, 0xBF	; 191
    14e4:	8c 93       	st	X, r24
    14e6:	e3 e4       	ldi	r30, 0x43	; 67
    14e8:	f0 e0       	ldi	r31, 0x00	; 0
    14ea:	8a 81       	ldd	r24, Y+2	; 0x02
    14ec:	80 83       	st	Z, r24
    14ee:	3f c0       	rjmp	.+126    	; 0x156e <Timer_2_VidInitialization+0x104>
		case(CTC):Clear_Bit(TCCR2,TCCR2_WGM21);Set_Bit(TCCR2,TCCR2_WGM20);OCR2=Copy_u8OCR_Value;break;
    14f0:	a5 e4       	ldi	r26, 0x45	; 69
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	e5 e4       	ldi	r30, 0x45	; 69
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	80 81       	ld	r24, Z
    14fa:	87 7f       	andi	r24, 0xF7	; 247
    14fc:	8c 93       	st	X, r24
    14fe:	a5 e4       	ldi	r26, 0x45	; 69
    1500:	b0 e0       	ldi	r27, 0x00	; 0
    1502:	e5 e4       	ldi	r30, 0x45	; 69
    1504:	f0 e0       	ldi	r31, 0x00	; 0
    1506:	80 81       	ld	r24, Z
    1508:	80 64       	ori	r24, 0x40	; 64
    150a:	8c 93       	st	X, r24
    150c:	e3 e4       	ldi	r30, 0x43	; 67
    150e:	f0 e0       	ldi	r31, 0x00	; 0
    1510:	8a 81       	ldd	r24, Y+2	; 0x02
    1512:	80 83       	st	Z, r24
    1514:	2c c0       	rjmp	.+88     	; 0x156e <Timer_2_VidInitialization+0x104>
		case(PWM_Phase_Correct):Set_Bit(TCCR2,TCCR2_WGM21);Clear_Bit(TCCR2,TCCR2_WGM20);break;
    1516:	a5 e4       	ldi	r26, 0x45	; 69
    1518:	b0 e0       	ldi	r27, 0x00	; 0
    151a:	e5 e4       	ldi	r30, 0x45	; 69
    151c:	f0 e0       	ldi	r31, 0x00	; 0
    151e:	80 81       	ld	r24, Z
    1520:	88 60       	ori	r24, 0x08	; 8
    1522:	8c 93       	st	X, r24
    1524:	a5 e4       	ldi	r26, 0x45	; 69
    1526:	b0 e0       	ldi	r27, 0x00	; 0
    1528:	e5 e4       	ldi	r30, 0x45	; 69
    152a:	f0 e0       	ldi	r31, 0x00	; 0
    152c:	80 81       	ld	r24, Z
    152e:	8f 7b       	andi	r24, 0xBF	; 191
    1530:	8c 93       	st	X, r24
    1532:	1d c0       	rjmp	.+58     	; 0x156e <Timer_2_VidInitialization+0x104>
		case(Fast_PWM):Set_Bit(TCCR2,TCCR2_WGM21);Set_Bit(TCCR2,TCCR2_WGM20);break;
    1534:	a5 e4       	ldi	r26, 0x45	; 69
    1536:	b0 e0       	ldi	r27, 0x00	; 0
    1538:	e5 e4       	ldi	r30, 0x45	; 69
    153a:	f0 e0       	ldi	r31, 0x00	; 0
    153c:	80 81       	ld	r24, Z
    153e:	88 60       	ori	r24, 0x08	; 8
    1540:	8c 93       	st	X, r24
    1542:	a5 e4       	ldi	r26, 0x45	; 69
    1544:	b0 e0       	ldi	r27, 0x00	; 0
    1546:	e5 e4       	ldi	r30, 0x45	; 69
    1548:	f0 e0       	ldi	r31, 0x00	; 0
    154a:	80 81       	ld	r24, Z
    154c:	80 64       	ori	r24, 0x40	; 64
    154e:	8c 93       	st	X, r24
    1550:	0e c0       	rjmp	.+28     	; 0x156e <Timer_2_VidInitialization+0x104>
		default:Clear_Bit(TCCR2,TCCR2_WGM21);Clear_Bit(TCCR2,TCCR2_WGM20);
    1552:	a5 e4       	ldi	r26, 0x45	; 69
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	e5 e4       	ldi	r30, 0x45	; 69
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	80 81       	ld	r24, Z
    155c:	87 7f       	andi	r24, 0xF7	; 247
    155e:	8c 93       	st	X, r24
    1560:	a5 e4       	ldi	r26, 0x45	; 69
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e5 e4       	ldi	r30, 0x45	; 69
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	80 81       	ld	r24, Z
    156a:	8f 7b       	andi	r24, 0xBF	; 191
    156c:	8c 93       	st	X, r24
	}
	switch(Copy_u8Compare_Match_Interrupt)
    156e:	8b 81       	ldd	r24, Y+3	; 0x03
    1570:	28 2f       	mov	r18, r24
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	3b 87       	std	Y+11, r19	; 0x0b
    1576:	2a 87       	std	Y+10, r18	; 0x0a
    1578:	8a 85       	ldd	r24, Y+10	; 0x0a
    157a:	9b 85       	ldd	r25, Y+11	; 0x0b
    157c:	82 30       	cpi	r24, 0x02	; 2
    157e:	91 05       	cpc	r25, r1
    1580:	31 f0       	breq	.+12     	; 0x158e <Timer_2_VidInitialization+0x124>
    1582:	2a 85       	ldd	r18, Y+10	; 0x0a
    1584:	3b 85       	ldd	r19, Y+11	; 0x0b
    1586:	23 30       	cpi	r18, 0x03	; 3
    1588:	31 05       	cpc	r19, r1
    158a:	49 f0       	breq	.+18     	; 0x159e <Timer_2_VidInitialization+0x134>
    158c:	10 c0       	rjmp	.+32     	; 0x15ae <Timer_2_VidInitialization+0x144>
	{
		case(Enable_CM):Set_Bit(TIMSK,TIMSK_OCIE2);break;
    158e:	a9 e5       	ldi	r26, 0x59	; 89
    1590:	b0 e0       	ldi	r27, 0x00	; 0
    1592:	e9 e5       	ldi	r30, 0x59	; 89
    1594:	f0 e0       	ldi	r31, 0x00	; 0
    1596:	80 81       	ld	r24, Z
    1598:	80 68       	ori	r24, 0x80	; 128
    159a:	8c 93       	st	X, r24
    159c:	0f c0       	rjmp	.+30     	; 0x15bc <Timer_2_VidInitialization+0x152>
		case(Disable_CM):Clear_Bit(TIMSK,TIMSK_OCIE2);break;
    159e:	a9 e5       	ldi	r26, 0x59	; 89
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	e9 e5       	ldi	r30, 0x59	; 89
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 81       	ld	r24, Z
    15a8:	8f 77       	andi	r24, 0x7F	; 127
    15aa:	8c 93       	st	X, r24
    15ac:	07 c0       	rjmp	.+14     	; 0x15bc <Timer_2_VidInitialization+0x152>
		default:Clear_Bit(TIMSK,TIMSK_OCIE2);
    15ae:	a9 e5       	ldi	r26, 0x59	; 89
    15b0:	b0 e0       	ldi	r27, 0x00	; 0
    15b2:	e9 e5       	ldi	r30, 0x59	; 89
    15b4:	f0 e0       	ldi	r31, 0x00	; 0
    15b6:	80 81       	ld	r24, Z
    15b8:	8f 77       	andi	r24, 0x7F	; 127
    15ba:	8c 93       	st	X, r24
	}
	switch(Copy_u8Over_Flow_Interrupt)
    15bc:	8c 81       	ldd	r24, Y+4	; 0x04
    15be:	28 2f       	mov	r18, r24
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	39 87       	std	Y+9, r19	; 0x09
    15c4:	28 87       	std	Y+8, r18	; 0x08
    15c6:	88 85       	ldd	r24, Y+8	; 0x08
    15c8:	99 85       	ldd	r25, Y+9	; 0x09
    15ca:	00 97       	sbiw	r24, 0x00	; 0
    15cc:	31 f0       	breq	.+12     	; 0x15da <Timer_2_VidInitialization+0x170>
    15ce:	28 85       	ldd	r18, Y+8	; 0x08
    15d0:	39 85       	ldd	r19, Y+9	; 0x09
    15d2:	21 30       	cpi	r18, 0x01	; 1
    15d4:	31 05       	cpc	r19, r1
    15d6:	49 f0       	breq	.+18     	; 0x15ea <Timer_2_VidInitialization+0x180>
    15d8:	10 c0       	rjmp	.+32     	; 0x15fa <Timer_2_VidInitialization+0x190>
	{
		case(Enable_OF):Set_Bit(TIMSK,TIMSK_TOIE2);break;
    15da:	a9 e5       	ldi	r26, 0x59	; 89
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	e9 e5       	ldi	r30, 0x59	; 89
    15e0:	f0 e0       	ldi	r31, 0x00	; 0
    15e2:	80 81       	ld	r24, Z
    15e4:	80 64       	ori	r24, 0x40	; 64
    15e6:	8c 93       	st	X, r24
    15e8:	0f c0       	rjmp	.+30     	; 0x1608 <Timer_2_VidInitialization+0x19e>
		case(Disable_OF):Clear_Bit(TIMSK,TIMSK_TOIE2);break;
    15ea:	a9 e5       	ldi	r26, 0x59	; 89
    15ec:	b0 e0       	ldi	r27, 0x00	; 0
    15ee:	e9 e5       	ldi	r30, 0x59	; 89
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	80 81       	ld	r24, Z
    15f4:	8f 7b       	andi	r24, 0xBF	; 191
    15f6:	8c 93       	st	X, r24
    15f8:	07 c0       	rjmp	.+14     	; 0x1608 <Timer_2_VidInitialization+0x19e>
		default:Clear_Bit(TIMSK,TIMSK_TOIE2);
    15fa:	a9 e5       	ldi	r26, 0x59	; 89
    15fc:	b0 e0       	ldi	r27, 0x00	; 0
    15fe:	e9 e5       	ldi	r30, 0x59	; 89
    1600:	f0 e0       	ldi	r31, 0x00	; 0
    1602:	80 81       	ld	r24, Z
    1604:	8f 7b       	andi	r24, 0xBF	; 191
    1606:	8c 93       	st	X, r24
	}
	if((Copy_u8Mode==PWM_Phase_Correct)||(Copy_u8Mode==Fast_PWM))
    1608:	89 81       	ldd	r24, Y+1	; 0x01
    160a:	82 30       	cpi	r24, 0x02	; 2
    160c:	19 f0       	breq	.+6      	; 0x1614 <Timer_2_VidInitialization+0x1aa>
    160e:	89 81       	ldd	r24, Y+1	; 0x01
    1610:	84 30       	cpi	r24, 0x04	; 4
    1612:	71 f4       	brne	.+28     	; 0x1630 <Timer_2_VidInitialization+0x1c6>
	{
		#if	PWM_Mode == COCSOB
			Clear_Bit(TCCR0,TCCR0_COM00);
    1614:	a3 e5       	ldi	r26, 0x53	; 83
    1616:	b0 e0       	ldi	r27, 0x00	; 0
    1618:	e3 e5       	ldi	r30, 0x53	; 83
    161a:	f0 e0       	ldi	r31, 0x00	; 0
    161c:	80 81       	ld	r24, Z
    161e:	8f 7e       	andi	r24, 0xEF	; 239
    1620:	8c 93       	st	X, r24
			Set_Bit(TCCR0,TCCR0_COM01);
    1622:	a3 e5       	ldi	r26, 0x53	; 83
    1624:	b0 e0       	ldi	r27, 0x00	; 0
    1626:	e3 e5       	ldi	r30, 0x53	; 83
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	80 81       	ld	r24, Z
    162c:	80 62       	ori	r24, 0x20	; 32
    162e:	8c 93       	st	X, r24
			Set_Bit(TCCR0,TCCR0_COM01);
		#else
					#warning (" Wrong Configuration !!")
		#endif
	}
	switch(Copy_u8Pre_Scalar)
    1630:	8d 81       	ldd	r24, Y+5	; 0x05
    1632:	28 2f       	mov	r18, r24
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	3f 83       	std	Y+7, r19	; 0x07
    1638:	2e 83       	std	Y+6, r18	; 0x06
    163a:	8e 81       	ldd	r24, Y+6	; 0x06
    163c:	9f 81       	ldd	r25, Y+7	; 0x07
    163e:	82 30       	cpi	r24, 0x02	; 2
    1640:	91 05       	cpc	r25, r1
    1642:	09 f4       	brne	.+2      	; 0x1646 <Timer_2_VidInitialization+0x1dc>
    1644:	4e c0       	rjmp	.+156    	; 0x16e2 <Timer_2_VidInitialization+0x278>
    1646:	2e 81       	ldd	r18, Y+6	; 0x06
    1648:	3f 81       	ldd	r19, Y+7	; 0x07
    164a:	23 30       	cpi	r18, 0x03	; 3
    164c:	31 05       	cpc	r19, r1
    164e:	54 f4       	brge	.+20     	; 0x1664 <Timer_2_VidInitialization+0x1fa>
    1650:	8e 81       	ldd	r24, Y+6	; 0x06
    1652:	9f 81       	ldd	r25, Y+7	; 0x07
    1654:	00 97       	sbiw	r24, 0x00	; 0
    1656:	c9 f0       	breq	.+50     	; 0x168a <Timer_2_VidInitialization+0x220>
    1658:	2e 81       	ldd	r18, Y+6	; 0x06
    165a:	3f 81       	ldd	r19, Y+7	; 0x07
    165c:	21 30       	cpi	r18, 0x01	; 1
    165e:	31 05       	cpc	r19, r1
    1660:	51 f1       	breq	.+84     	; 0x16b6 <Timer_2_VidInitialization+0x24c>
    1662:	97 c0       	rjmp	.+302    	; 0x1792 <Timer_2_VidInitialization+0x328>
    1664:	8e 81       	ldd	r24, Y+6	; 0x06
    1666:	9f 81       	ldd	r25, Y+7	; 0x07
    1668:	85 30       	cpi	r24, 0x05	; 5
    166a:	91 05       	cpc	r25, r1
    166c:	09 f4       	brne	.+2      	; 0x1670 <Timer_2_VidInitialization+0x206>
    166e:	65 c0       	rjmp	.+202    	; 0x173a <Timer_2_VidInitialization+0x2d0>
    1670:	2e 81       	ldd	r18, Y+6	; 0x06
    1672:	3f 81       	ldd	r19, Y+7	; 0x07
    1674:	26 30       	cpi	r18, 0x06	; 6
    1676:	31 05       	cpc	r19, r1
    1678:	09 f4       	brne	.+2      	; 0x167c <Timer_2_VidInitialization+0x212>
    167a:	75 c0       	rjmp	.+234    	; 0x1766 <Timer_2_VidInitialization+0x2fc>
    167c:	8e 81       	ldd	r24, Y+6	; 0x06
    167e:	9f 81       	ldd	r25, Y+7	; 0x07
    1680:	83 30       	cpi	r24, 0x03	; 3
    1682:	91 05       	cpc	r25, r1
    1684:	09 f4       	brne	.+2      	; 0x1688 <Timer_2_VidInitialization+0x21e>
    1686:	43 c0       	rjmp	.+134    	; 0x170e <Timer_2_VidInitialization+0x2a4>
    1688:	84 c0       	rjmp	.+264    	; 0x1792 <Timer_2_VidInitialization+0x328>
	{
		case(Pre_Scalar_0):Clear_Bit(TCCR2 , TCCR2_CS22);Clear_Bit(TCCR2 , TCCR2_CS21);Set_Bit(TCCR2 , TCCR2_CS20);break;
    168a:	a5 e4       	ldi	r26, 0x45	; 69
    168c:	b0 e0       	ldi	r27, 0x00	; 0
    168e:	e5 e4       	ldi	r30, 0x45	; 69
    1690:	f0 e0       	ldi	r31, 0x00	; 0
    1692:	80 81       	ld	r24, Z
    1694:	8b 7f       	andi	r24, 0xFB	; 251
    1696:	8c 93       	st	X, r24
    1698:	a5 e4       	ldi	r26, 0x45	; 69
    169a:	b0 e0       	ldi	r27, 0x00	; 0
    169c:	e5 e4       	ldi	r30, 0x45	; 69
    169e:	f0 e0       	ldi	r31, 0x00	; 0
    16a0:	80 81       	ld	r24, Z
    16a2:	8d 7f       	andi	r24, 0xFD	; 253
    16a4:	8c 93       	st	X, r24
    16a6:	a5 e4       	ldi	r26, 0x45	; 69
    16a8:	b0 e0       	ldi	r27, 0x00	; 0
    16aa:	e5 e4       	ldi	r30, 0x45	; 69
    16ac:	f0 e0       	ldi	r31, 0x00	; 0
    16ae:	80 81       	ld	r24, Z
    16b0:	81 60       	ori	r24, 0x01	; 1
    16b2:	8c 93       	st	X, r24
    16b4:	83 c0       	rjmp	.+262    	; 0x17bc <Timer_2_VidInitialization+0x352>
		case(Pre_Scalar_8):Clear_Bit(TCCR2 , TCCR2_CS22);Set_Bit(TCCR2 , TCCR2_CS21);Clear_Bit(TCCR2 , TCCR2_CS20);break;
    16b6:	a5 e4       	ldi	r26, 0x45	; 69
    16b8:	b0 e0       	ldi	r27, 0x00	; 0
    16ba:	e5 e4       	ldi	r30, 0x45	; 69
    16bc:	f0 e0       	ldi	r31, 0x00	; 0
    16be:	80 81       	ld	r24, Z
    16c0:	8b 7f       	andi	r24, 0xFB	; 251
    16c2:	8c 93       	st	X, r24
    16c4:	a5 e4       	ldi	r26, 0x45	; 69
    16c6:	b0 e0       	ldi	r27, 0x00	; 0
    16c8:	e5 e4       	ldi	r30, 0x45	; 69
    16ca:	f0 e0       	ldi	r31, 0x00	; 0
    16cc:	80 81       	ld	r24, Z
    16ce:	82 60       	ori	r24, 0x02	; 2
    16d0:	8c 93       	st	X, r24
    16d2:	a5 e4       	ldi	r26, 0x45	; 69
    16d4:	b0 e0       	ldi	r27, 0x00	; 0
    16d6:	e5 e4       	ldi	r30, 0x45	; 69
    16d8:	f0 e0       	ldi	r31, 0x00	; 0
    16da:	80 81       	ld	r24, Z
    16dc:	8e 7f       	andi	r24, 0xFE	; 254
    16de:	8c 93       	st	X, r24
    16e0:	6d c0       	rjmp	.+218    	; 0x17bc <Timer_2_VidInitialization+0x352>
		case(Pre_Scalar_32):Clear_Bit(TCCR2 , TCCR2_CS22);Set_Bit(TCCR2 , TCCR2_CS21);Set_Bit(TCCR2 , TCCR2_CS20);break;
    16e2:	a5 e4       	ldi	r26, 0x45	; 69
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	e5 e4       	ldi	r30, 0x45	; 69
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	80 81       	ld	r24, Z
    16ec:	8b 7f       	andi	r24, 0xFB	; 251
    16ee:	8c 93       	st	X, r24
    16f0:	a5 e4       	ldi	r26, 0x45	; 69
    16f2:	b0 e0       	ldi	r27, 0x00	; 0
    16f4:	e5 e4       	ldi	r30, 0x45	; 69
    16f6:	f0 e0       	ldi	r31, 0x00	; 0
    16f8:	80 81       	ld	r24, Z
    16fa:	82 60       	ori	r24, 0x02	; 2
    16fc:	8c 93       	st	X, r24
    16fe:	a5 e4       	ldi	r26, 0x45	; 69
    1700:	b0 e0       	ldi	r27, 0x00	; 0
    1702:	e5 e4       	ldi	r30, 0x45	; 69
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	80 81       	ld	r24, Z
    1708:	81 60       	ori	r24, 0x01	; 1
    170a:	8c 93       	st	X, r24
    170c:	57 c0       	rjmp	.+174    	; 0x17bc <Timer_2_VidInitialization+0x352>
		case(Pre_Scalar_64):Set_Bit(TCCR2 , TCCR2_CS22);Clear_Bit(TCCR2 , TCCR2_CS21);Clear_Bit(TCCR2 , TCCR2_CS20);break;
    170e:	a5 e4       	ldi	r26, 0x45	; 69
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	e5 e4       	ldi	r30, 0x45	; 69
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	80 81       	ld	r24, Z
    1718:	84 60       	ori	r24, 0x04	; 4
    171a:	8c 93       	st	X, r24
    171c:	a5 e4       	ldi	r26, 0x45	; 69
    171e:	b0 e0       	ldi	r27, 0x00	; 0
    1720:	e5 e4       	ldi	r30, 0x45	; 69
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	80 81       	ld	r24, Z
    1726:	8d 7f       	andi	r24, 0xFD	; 253
    1728:	8c 93       	st	X, r24
    172a:	a5 e4       	ldi	r26, 0x45	; 69
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	e5 e4       	ldi	r30, 0x45	; 69
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	80 81       	ld	r24, Z
    1734:	8e 7f       	andi	r24, 0xFE	; 254
    1736:	8c 93       	st	X, r24
    1738:	41 c0       	rjmp	.+130    	; 0x17bc <Timer_2_VidInitialization+0x352>
		case(Pre_Scalar_256):Set_Bit(TCCR2 , TCCR2_CS22);Set_Bit(TCCR2 , TCCR2_CS21);Clear_Bit(TCCR2 , TCCR2_CS20);break;
    173a:	a5 e4       	ldi	r26, 0x45	; 69
    173c:	b0 e0       	ldi	r27, 0x00	; 0
    173e:	e5 e4       	ldi	r30, 0x45	; 69
    1740:	f0 e0       	ldi	r31, 0x00	; 0
    1742:	80 81       	ld	r24, Z
    1744:	84 60       	ori	r24, 0x04	; 4
    1746:	8c 93       	st	X, r24
    1748:	a5 e4       	ldi	r26, 0x45	; 69
    174a:	b0 e0       	ldi	r27, 0x00	; 0
    174c:	e5 e4       	ldi	r30, 0x45	; 69
    174e:	f0 e0       	ldi	r31, 0x00	; 0
    1750:	80 81       	ld	r24, Z
    1752:	82 60       	ori	r24, 0x02	; 2
    1754:	8c 93       	st	X, r24
    1756:	a5 e4       	ldi	r26, 0x45	; 69
    1758:	b0 e0       	ldi	r27, 0x00	; 0
    175a:	e5 e4       	ldi	r30, 0x45	; 69
    175c:	f0 e0       	ldi	r31, 0x00	; 0
    175e:	80 81       	ld	r24, Z
    1760:	8e 7f       	andi	r24, 0xFE	; 254
    1762:	8c 93       	st	X, r24
    1764:	2b c0       	rjmp	.+86     	; 0x17bc <Timer_2_VidInitialization+0x352>
		case(Pre_Scalar_1024):Set_Bit(TCCR2 , TCCR2_CS22);Set_Bit(TCCR2 , TCCR2_CS21);Set_Bit(TCCR2 , TCCR2_CS20);break;
    1766:	a5 e4       	ldi	r26, 0x45	; 69
    1768:	b0 e0       	ldi	r27, 0x00	; 0
    176a:	e5 e4       	ldi	r30, 0x45	; 69
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	80 81       	ld	r24, Z
    1770:	84 60       	ori	r24, 0x04	; 4
    1772:	8c 93       	st	X, r24
    1774:	a5 e4       	ldi	r26, 0x45	; 69
    1776:	b0 e0       	ldi	r27, 0x00	; 0
    1778:	e5 e4       	ldi	r30, 0x45	; 69
    177a:	f0 e0       	ldi	r31, 0x00	; 0
    177c:	80 81       	ld	r24, Z
    177e:	82 60       	ori	r24, 0x02	; 2
    1780:	8c 93       	st	X, r24
    1782:	a5 e4       	ldi	r26, 0x45	; 69
    1784:	b0 e0       	ldi	r27, 0x00	; 0
    1786:	e5 e4       	ldi	r30, 0x45	; 69
    1788:	f0 e0       	ldi	r31, 0x00	; 0
    178a:	80 81       	ld	r24, Z
    178c:	81 60       	ori	r24, 0x01	; 1
    178e:	8c 93       	st	X, r24
    1790:	15 c0       	rjmp	.+42     	; 0x17bc <Timer_2_VidInitialization+0x352>
		default:Clear_Bit(TCCR2 , TCCR2_CS22);Clear_Bit(TCCR2 , TCCR2_CS21);Clear_Bit(TCCR2 , TCCR2_CS20);
    1792:	a5 e4       	ldi	r26, 0x45	; 69
    1794:	b0 e0       	ldi	r27, 0x00	; 0
    1796:	e5 e4       	ldi	r30, 0x45	; 69
    1798:	f0 e0       	ldi	r31, 0x00	; 0
    179a:	80 81       	ld	r24, Z
    179c:	8b 7f       	andi	r24, 0xFB	; 251
    179e:	8c 93       	st	X, r24
    17a0:	a5 e4       	ldi	r26, 0x45	; 69
    17a2:	b0 e0       	ldi	r27, 0x00	; 0
    17a4:	e5 e4       	ldi	r30, 0x45	; 69
    17a6:	f0 e0       	ldi	r31, 0x00	; 0
    17a8:	80 81       	ld	r24, Z
    17aa:	8d 7f       	andi	r24, 0xFD	; 253
    17ac:	8c 93       	st	X, r24
    17ae:	a5 e4       	ldi	r26, 0x45	; 69
    17b0:	b0 e0       	ldi	r27, 0x00	; 0
    17b2:	e5 e4       	ldi	r30, 0x45	; 69
    17b4:	f0 e0       	ldi	r31, 0x00	; 0
    17b6:	80 81       	ld	r24, Z
    17b8:	8e 7f       	andi	r24, 0xFE	; 254
    17ba:	8c 93       	st	X, r24
	}
}
    17bc:	2d 96       	adiw	r28, 0x0d	; 13
    17be:	0f b6       	in	r0, 0x3f	; 63
    17c0:	f8 94       	cli
    17c2:	de bf       	out	0x3e, r29	; 62
    17c4:	0f be       	out	0x3f, r0	; 63
    17c6:	cd bf       	out	0x3d, r28	; 61
    17c8:	cf 91       	pop	r28
    17ca:	df 91       	pop	r29
    17cc:	0f 91       	pop	r16
    17ce:	08 95       	ret

000017d0 <Timer_VidPwm_Duty_Cycle>:

/************************************************/
/*					General 					*/
/************************************************/
void Timer_VidPwm_Duty_Cycle(u8 Copy_u8Timer,u8 Copy_u8Duty_Cycle)
{
    17d0:	df 93       	push	r29
    17d2:	cf 93       	push	r28
    17d4:	00 d0       	rcall	.+0      	; 0x17d6 <Timer_VidPwm_Duty_Cycle+0x6>
    17d6:	00 d0       	rcall	.+0      	; 0x17d8 <Timer_VidPwm_Duty_Cycle+0x8>
    17d8:	0f 92       	push	r0
    17da:	cd b7       	in	r28, 0x3d	; 61
    17dc:	de b7       	in	r29, 0x3e	; 62
    17de:	8a 83       	std	Y+2, r24	; 0x02
    17e0:	6b 83       	std	Y+3, r22	; 0x03
u8 Local_u8Variable=((Copy_u8Duty_Cycle*255ul)/100ul);
    17e2:	8b 81       	ldd	r24, Y+3	; 0x03
    17e4:	88 2f       	mov	r24, r24
    17e6:	90 e0       	ldi	r25, 0x00	; 0
    17e8:	a0 e0       	ldi	r26, 0x00	; 0
    17ea:	b0 e0       	ldi	r27, 0x00	; 0
    17ec:	2f ef       	ldi	r18, 0xFF	; 255
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	40 e0       	ldi	r20, 0x00	; 0
    17f2:	50 e0       	ldi	r21, 0x00	; 0
    17f4:	bc 01       	movw	r22, r24
    17f6:	cd 01       	movw	r24, r26
    17f8:	0e 94 99 19 	call	0x3332	; 0x3332 <__mulsi3>
    17fc:	dc 01       	movw	r26, r24
    17fe:	cb 01       	movw	r24, r22
    1800:	24 e6       	ldi	r18, 0x64	; 100
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	40 e0       	ldi	r20, 0x00	; 0
    1806:	50 e0       	ldi	r21, 0x00	; 0
    1808:	bc 01       	movw	r22, r24
    180a:	cd 01       	movw	r24, r26
    180c:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
    1810:	da 01       	movw	r26, r20
    1812:	c9 01       	movw	r24, r18
    1814:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Timer)
    1816:	8a 81       	ldd	r24, Y+2	; 0x02
    1818:	28 2f       	mov	r18, r24
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	3d 83       	std	Y+5, r19	; 0x05
    181e:	2c 83       	std	Y+4, r18	; 0x04
    1820:	8c 81       	ldd	r24, Y+4	; 0x04
    1822:	9d 81       	ldd	r25, Y+5	; 0x05
    1824:	81 30       	cpi	r24, 0x01	; 1
    1826:	91 05       	cpc	r25, r1
    1828:	71 f0       	breq	.+28     	; 0x1846 <Timer_VidPwm_Duty_Cycle+0x76>
    182a:	2c 81       	ldd	r18, Y+4	; 0x04
    182c:	3d 81       	ldd	r19, Y+5	; 0x05
    182e:	22 30       	cpi	r18, 0x02	; 2
    1830:	31 05       	cpc	r19, r1
    1832:	91 f0       	breq	.+36     	; 0x1858 <Timer_VidPwm_Duty_Cycle+0x88>
    1834:	8c 81       	ldd	r24, Y+4	; 0x04
    1836:	9d 81       	ldd	r25, Y+5	; 0x05
    1838:	00 97       	sbiw	r24, 0x00	; 0
    183a:	91 f4       	brne	.+36     	; 0x1860 <Timer_VidPwm_Duty_Cycle+0x90>
	{
		case(Timer_0):OCR0=Local_u8Variable;break;
    183c:	ec e5       	ldi	r30, 0x5C	; 92
    183e:	f0 e0       	ldi	r31, 0x00	; 0
    1840:	89 81       	ldd	r24, Y+1	; 0x01
    1842:	80 83       	st	Z, r24
    1844:	0d c0       	rjmp	.+26     	; 0x1860 <Timer_VidPwm_Duty_Cycle+0x90>
		case(Timer_1):OCR1AL=Local_u8Variable;OCR1BL=Local_u8Variable;break;
    1846:	ea e4       	ldi	r30, 0x4A	; 74
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	89 81       	ldd	r24, Y+1	; 0x01
    184c:	80 83       	st	Z, r24
    184e:	e8 e4       	ldi	r30, 0x48	; 72
    1850:	f0 e0       	ldi	r31, 0x00	; 0
    1852:	89 81       	ldd	r24, Y+1	; 0x01
    1854:	80 83       	st	Z, r24
    1856:	04 c0       	rjmp	.+8      	; 0x1860 <Timer_VidPwm_Duty_Cycle+0x90>
		case(Timer_2):OCR2=Local_u8Variable;break;
    1858:	e3 e4       	ldi	r30, 0x43	; 67
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	89 81       	ldd	r24, Y+1	; 0x01
    185e:	80 83       	st	Z, r24
	}
}
    1860:	0f 90       	pop	r0
    1862:	0f 90       	pop	r0
    1864:	0f 90       	pop	r0
    1866:	0f 90       	pop	r0
    1868:	0f 90       	pop	r0
    186a:	cf 91       	pop	r28
    186c:	df 91       	pop	r29
    186e:	08 95       	ret

00001870 <Timer_0_VidOverflow_Inturrept>:
/*							Timer 0 							*/
/****************************************************************/
/*------------------ Over_flow_ISR --------------------*/
static void (*Timer_0_Overflow_Inturrept_Function)(void)=0;
void Timer_0_VidOverflow_Inturrept(void(*Copy_VidInturrept)(void))
{
    1870:	df 93       	push	r29
    1872:	cf 93       	push	r28
    1874:	00 d0       	rcall	.+0      	; 0x1876 <Timer_0_VidOverflow_Inturrept+0x6>
    1876:	cd b7       	in	r28, 0x3d	; 61
    1878:	de b7       	in	r29, 0x3e	; 62
    187a:	9a 83       	std	Y+2, r25	; 0x02
    187c:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    187e:	89 81       	ldd	r24, Y+1	; 0x01
    1880:	9a 81       	ldd	r25, Y+2	; 0x02
    1882:	00 97       	sbiw	r24, 0x00	; 0
    1884:	31 f0       	breq	.+12     	; 0x1892 <Timer_0_VidOverflow_Inturrept+0x22>
	{
		Timer_0_Overflow_Inturrept_Function = Copy_VidInturrept;
    1886:	89 81       	ldd	r24, Y+1	; 0x01
    1888:	9a 81       	ldd	r25, Y+2	; 0x02
    188a:	90 93 69 01 	sts	0x0169, r25
    188e:	80 93 68 01 	sts	0x0168, r24
	}
}
    1892:	0f 90       	pop	r0
    1894:	0f 90       	pop	r0
    1896:	cf 91       	pop	r28
    1898:	df 91       	pop	r29
    189a:	08 95       	ret

0000189c <__vector_11>:
void __vector_11(void) __attribute__((signal,used));
void __vector_11(void)
{
    189c:	1f 92       	push	r1
    189e:	0f 92       	push	r0
    18a0:	0f b6       	in	r0, 0x3f	; 63
    18a2:	0f 92       	push	r0
    18a4:	11 24       	eor	r1, r1
    18a6:	0f 93       	push	r16
    18a8:	2f 93       	push	r18
    18aa:	3f 93       	push	r19
    18ac:	4f 93       	push	r20
    18ae:	5f 93       	push	r21
    18b0:	6f 93       	push	r22
    18b2:	7f 93       	push	r23
    18b4:	8f 93       	push	r24
    18b6:	9f 93       	push	r25
    18b8:	af 93       	push	r26
    18ba:	bf 93       	push	r27
    18bc:	ef 93       	push	r30
    18be:	ff 93       	push	r31
    18c0:	df 93       	push	r29
    18c2:	cf 93       	push	r28
    18c4:	cd b7       	in	r28, 0x3d	; 61
    18c6:	de b7       	in	r29, 0x3e	; 62
	Global_Timer_0_u16Flag--;
    18c8:	80 91 7d 01 	lds	r24, 0x017D
    18cc:	90 91 7e 01 	lds	r25, 0x017E
    18d0:	a0 91 7f 01 	lds	r26, 0x017F
    18d4:	b0 91 80 01 	lds	r27, 0x0180
    18d8:	01 97       	sbiw	r24, 0x01	; 1
    18da:	a1 09       	sbc	r26, r1
    18dc:	b1 09       	sbc	r27, r1
    18de:	80 93 7d 01 	sts	0x017D, r24
    18e2:	90 93 7e 01 	sts	0x017E, r25
    18e6:	a0 93 7f 01 	sts	0x017F, r26
    18ea:	b0 93 80 01 	sts	0x0180, r27
	if(Timer_0_Overflow_Inturrept_Function!=0 && !Global_Timer_0_u16Flag)
    18ee:	80 91 68 01 	lds	r24, 0x0168
    18f2:	90 91 69 01 	lds	r25, 0x0169
    18f6:	00 97       	sbiw	r24, 0x00	; 0
    18f8:	c1 f0       	breq	.+48     	; 0x192a <__vector_11+0x8e>
    18fa:	80 91 7d 01 	lds	r24, 0x017D
    18fe:	90 91 7e 01 	lds	r25, 0x017E
    1902:	a0 91 7f 01 	lds	r26, 0x017F
    1906:	b0 91 80 01 	lds	r27, 0x0180
    190a:	00 97       	sbiw	r24, 0x00	; 0
    190c:	a1 05       	cpc	r26, r1
    190e:	b1 05       	cpc	r27, r1
    1910:	61 f4       	brne	.+24     	; 0x192a <__vector_11+0x8e>
	{
		Timer_0_VidInitialization(Normal,0,Disable_CM,Disable_OF,0);
    1912:	81 e0       	ldi	r24, 0x01	; 1
    1914:	60 e0       	ldi	r22, 0x00	; 0
    1916:	43 e0       	ldi	r20, 0x03	; 3
    1918:	21 e0       	ldi	r18, 0x01	; 1
    191a:	00 e0       	ldi	r16, 0x00	; 0
    191c:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Timer_0_VidInitialization>
		Timer_0_Overflow_Inturrept_Function();
    1920:	e0 91 68 01 	lds	r30, 0x0168
    1924:	f0 91 69 01 	lds	r31, 0x0169
    1928:	09 95       	icall
	}
}
    192a:	cf 91       	pop	r28
    192c:	df 91       	pop	r29
    192e:	ff 91       	pop	r31
    1930:	ef 91       	pop	r30
    1932:	bf 91       	pop	r27
    1934:	af 91       	pop	r26
    1936:	9f 91       	pop	r25
    1938:	8f 91       	pop	r24
    193a:	7f 91       	pop	r23
    193c:	6f 91       	pop	r22
    193e:	5f 91       	pop	r21
    1940:	4f 91       	pop	r20
    1942:	3f 91       	pop	r19
    1944:	2f 91       	pop	r18
    1946:	0f 91       	pop	r16
    1948:	0f 90       	pop	r0
    194a:	0f be       	out	0x3f, r0	; 63
    194c:	0f 90       	pop	r0
    194e:	1f 90       	pop	r1
    1950:	18 95       	reti

00001952 <Timer_0_VidCompare_Match_Inturrept>:
/*-------------------- Compare_Match_ISR ------------------*/
static void (*Timer_0_Compare_Match_Inturrept_Function)(void)=0;
void Timer_0_VidCompare_Match_Inturrept(void(*Copy_VidInturrept)(void))
{
    1952:	df 93       	push	r29
    1954:	cf 93       	push	r28
    1956:	00 d0       	rcall	.+0      	; 0x1958 <Timer_0_VidCompare_Match_Inturrept+0x6>
    1958:	cd b7       	in	r28, 0x3d	; 61
    195a:	de b7       	in	r29, 0x3e	; 62
    195c:	9a 83       	std	Y+2, r25	; 0x02
    195e:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    1960:	89 81       	ldd	r24, Y+1	; 0x01
    1962:	9a 81       	ldd	r25, Y+2	; 0x02
    1964:	00 97       	sbiw	r24, 0x00	; 0
    1966:	31 f0       	breq	.+12     	; 0x1974 <Timer_0_VidCompare_Match_Inturrept+0x22>
	{
		Timer_0_Compare_Match_Inturrept_Function = Copy_VidInturrept;
    1968:	89 81       	ldd	r24, Y+1	; 0x01
    196a:	9a 81       	ldd	r25, Y+2	; 0x02
    196c:	90 93 6b 01 	sts	0x016B, r25
    1970:	80 93 6a 01 	sts	0x016A, r24
	}
}
    1974:	0f 90       	pop	r0
    1976:	0f 90       	pop	r0
    1978:	cf 91       	pop	r28
    197a:	df 91       	pop	r29
    197c:	08 95       	ret

0000197e <__vector_10>:
void __vector_10(void) __attribute__((signal,used));
void __vector_10(void)
{
    197e:	1f 92       	push	r1
    1980:	0f 92       	push	r0
    1982:	0f b6       	in	r0, 0x3f	; 63
    1984:	0f 92       	push	r0
    1986:	11 24       	eor	r1, r1
    1988:	0f 93       	push	r16
    198a:	2f 93       	push	r18
    198c:	3f 93       	push	r19
    198e:	4f 93       	push	r20
    1990:	5f 93       	push	r21
    1992:	6f 93       	push	r22
    1994:	7f 93       	push	r23
    1996:	8f 93       	push	r24
    1998:	9f 93       	push	r25
    199a:	af 93       	push	r26
    199c:	bf 93       	push	r27
    199e:	ef 93       	push	r30
    19a0:	ff 93       	push	r31
    19a2:	df 93       	push	r29
    19a4:	cf 93       	push	r28
    19a6:	cd b7       	in	r28, 0x3d	; 61
    19a8:	de b7       	in	r29, 0x3e	; 62
	if(Timer_0_Compare_Match_Inturrept_Function!=0)
    19aa:	80 91 6a 01 	lds	r24, 0x016A
    19ae:	90 91 6b 01 	lds	r25, 0x016B
    19b2:	00 97       	sbiw	r24, 0x00	; 0
    19b4:	61 f0       	breq	.+24     	; 0x19ce <__vector_10+0x50>
	{
		Timer_0_VidInitialization(Normal,0,Disable_CM,Disable_OF,0);
    19b6:	81 e0       	ldi	r24, 0x01	; 1
    19b8:	60 e0       	ldi	r22, 0x00	; 0
    19ba:	43 e0       	ldi	r20, 0x03	; 3
    19bc:	21 e0       	ldi	r18, 0x01	; 1
    19be:	00 e0       	ldi	r16, 0x00	; 0
    19c0:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Timer_0_VidInitialization>
		Timer_0_Compare_Match_Inturrept_Function();
    19c4:	e0 91 6a 01 	lds	r30, 0x016A
    19c8:	f0 91 6b 01 	lds	r31, 0x016B
    19cc:	09 95       	icall
	}
}
    19ce:	cf 91       	pop	r28
    19d0:	df 91       	pop	r29
    19d2:	ff 91       	pop	r31
    19d4:	ef 91       	pop	r30
    19d6:	bf 91       	pop	r27
    19d8:	af 91       	pop	r26
    19da:	9f 91       	pop	r25
    19dc:	8f 91       	pop	r24
    19de:	7f 91       	pop	r23
    19e0:	6f 91       	pop	r22
    19e2:	5f 91       	pop	r21
    19e4:	4f 91       	pop	r20
    19e6:	3f 91       	pop	r19
    19e8:	2f 91       	pop	r18
    19ea:	0f 91       	pop	r16
    19ec:	0f 90       	pop	r0
    19ee:	0f be       	out	0x3f, r0	; 63
    19f0:	0f 90       	pop	r0
    19f2:	1f 90       	pop	r1
    19f4:	18 95       	reti

000019f6 <Timer_2_VidOverflow_Inturrept>:
/****************************************************************/

/*------------------ Over_flow_ISR --------------------*/
static void (*Timer_2_Overflow_Inturrept_Function)(void)=0;
void Timer_2_VidOverflow_Inturrept(void(*Copy_VidInturrept)(void))
{
    19f6:	df 93       	push	r29
    19f8:	cf 93       	push	r28
    19fa:	00 d0       	rcall	.+0      	; 0x19fc <Timer_2_VidOverflow_Inturrept+0x6>
    19fc:	cd b7       	in	r28, 0x3d	; 61
    19fe:	de b7       	in	r29, 0x3e	; 62
    1a00:	9a 83       	std	Y+2, r25	; 0x02
    1a02:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    1a04:	89 81       	ldd	r24, Y+1	; 0x01
    1a06:	9a 81       	ldd	r25, Y+2	; 0x02
    1a08:	00 97       	sbiw	r24, 0x00	; 0
    1a0a:	31 f0       	breq	.+12     	; 0x1a18 <Timer_2_VidOverflow_Inturrept+0x22>
	{
		Timer_2_Overflow_Inturrept_Function = Copy_VidInturrept;
    1a0c:	89 81       	ldd	r24, Y+1	; 0x01
    1a0e:	9a 81       	ldd	r25, Y+2	; 0x02
    1a10:	90 93 6d 01 	sts	0x016D, r25
    1a14:	80 93 6c 01 	sts	0x016C, r24
	}
}
    1a18:	0f 90       	pop	r0
    1a1a:	0f 90       	pop	r0
    1a1c:	cf 91       	pop	r28
    1a1e:	df 91       	pop	r29
    1a20:	08 95       	ret

00001a22 <__vector_5>:
void __vector_5(void) __attribute__((signal,used));
void __vector_5(void)
{
    1a22:	1f 92       	push	r1
    1a24:	0f 92       	push	r0
    1a26:	0f b6       	in	r0, 0x3f	; 63
    1a28:	0f 92       	push	r0
    1a2a:	11 24       	eor	r1, r1
    1a2c:	0f 93       	push	r16
    1a2e:	2f 93       	push	r18
    1a30:	3f 93       	push	r19
    1a32:	4f 93       	push	r20
    1a34:	5f 93       	push	r21
    1a36:	6f 93       	push	r22
    1a38:	7f 93       	push	r23
    1a3a:	8f 93       	push	r24
    1a3c:	9f 93       	push	r25
    1a3e:	af 93       	push	r26
    1a40:	bf 93       	push	r27
    1a42:	ef 93       	push	r30
    1a44:	ff 93       	push	r31
    1a46:	df 93       	push	r29
    1a48:	cf 93       	push	r28
    1a4a:	cd b7       	in	r28, 0x3d	; 61
    1a4c:	de b7       	in	r29, 0x3e	; 62
	Global_Timer_2_u16Flag--;
    1a4e:	80 91 79 01 	lds	r24, 0x0179
    1a52:	90 91 7a 01 	lds	r25, 0x017A
    1a56:	a0 91 7b 01 	lds	r26, 0x017B
    1a5a:	b0 91 7c 01 	lds	r27, 0x017C
    1a5e:	01 97       	sbiw	r24, 0x01	; 1
    1a60:	a1 09       	sbc	r26, r1
    1a62:	b1 09       	sbc	r27, r1
    1a64:	80 93 79 01 	sts	0x0179, r24
    1a68:	90 93 7a 01 	sts	0x017A, r25
    1a6c:	a0 93 7b 01 	sts	0x017B, r26
    1a70:	b0 93 7c 01 	sts	0x017C, r27
	if(Timer_2_Overflow_Inturrept_Function!=0 && !Global_Timer_2_u16Flag)
    1a74:	80 91 6c 01 	lds	r24, 0x016C
    1a78:	90 91 6d 01 	lds	r25, 0x016D
    1a7c:	00 97       	sbiw	r24, 0x00	; 0
    1a7e:	99 f0       	breq	.+38     	; 0x1aa6 <__vector_5+0x84>
    1a80:	80 91 79 01 	lds	r24, 0x0179
    1a84:	90 91 7a 01 	lds	r25, 0x017A
    1a88:	a0 91 7b 01 	lds	r26, 0x017B
    1a8c:	b0 91 7c 01 	lds	r27, 0x017C
    1a90:	00 97       	sbiw	r24, 0x00	; 0
    1a92:	a1 05       	cpc	r26, r1
    1a94:	b1 05       	cpc	r27, r1
    1a96:	39 f4       	brne	.+14     	; 0x1aa6 <__vector_5+0x84>
	{
		Timer_2_VidInitialization(Normal,0,Disable_CM,Disable_OF,0);
    1a98:	81 e0       	ldi	r24, 0x01	; 1
    1a9a:	60 e0       	ldi	r22, 0x00	; 0
    1a9c:	43 e0       	ldi	r20, 0x03	; 3
    1a9e:	21 e0       	ldi	r18, 0x01	; 1
    1aa0:	00 e0       	ldi	r16, 0x00	; 0
    1aa2:	0e 94 35 0a 	call	0x146a	; 0x146a <Timer_2_VidInitialization>
	}
}
    1aa6:	cf 91       	pop	r28
    1aa8:	df 91       	pop	r29
    1aaa:	ff 91       	pop	r31
    1aac:	ef 91       	pop	r30
    1aae:	bf 91       	pop	r27
    1ab0:	af 91       	pop	r26
    1ab2:	9f 91       	pop	r25
    1ab4:	8f 91       	pop	r24
    1ab6:	7f 91       	pop	r23
    1ab8:	6f 91       	pop	r22
    1aba:	5f 91       	pop	r21
    1abc:	4f 91       	pop	r20
    1abe:	3f 91       	pop	r19
    1ac0:	2f 91       	pop	r18
    1ac2:	0f 91       	pop	r16
    1ac4:	0f 90       	pop	r0
    1ac6:	0f be       	out	0x3f, r0	; 63
    1ac8:	0f 90       	pop	r0
    1aca:	1f 90       	pop	r1
    1acc:	18 95       	reti

00001ace <Timer_2_VidCompare_Match_Inturrept>:
/*-------------------- Compare_Match_ISR ------------------*/
static void (*Timer_2_Compare_Match_Inturrept_Function)(void)=0;
void Timer_2_VidCompare_Match_Inturrept(void(*Copy_VidInturrept)(void))
{
    1ace:	df 93       	push	r29
    1ad0:	cf 93       	push	r28
    1ad2:	00 d0       	rcall	.+0      	; 0x1ad4 <Timer_2_VidCompare_Match_Inturrept+0x6>
    1ad4:	cd b7       	in	r28, 0x3d	; 61
    1ad6:	de b7       	in	r29, 0x3e	; 62
    1ad8:	9a 83       	std	Y+2, r25	; 0x02
    1ada:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    1adc:	89 81       	ldd	r24, Y+1	; 0x01
    1ade:	9a 81       	ldd	r25, Y+2	; 0x02
    1ae0:	00 97       	sbiw	r24, 0x00	; 0
    1ae2:	31 f0       	breq	.+12     	; 0x1af0 <Timer_2_VidCompare_Match_Inturrept+0x22>
	{
		Timer_2_Compare_Match_Inturrept_Function = Copy_VidInturrept;
    1ae4:	89 81       	ldd	r24, Y+1	; 0x01
    1ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ae8:	90 93 6f 01 	sts	0x016F, r25
    1aec:	80 93 6e 01 	sts	0x016E, r24
	}
}
    1af0:	0f 90       	pop	r0
    1af2:	0f 90       	pop	r0
    1af4:	cf 91       	pop	r28
    1af6:	df 91       	pop	r29
    1af8:	08 95       	ret

00001afa <__vector_4>:
void __vector_4(void) __attribute__((signal,used));
void __vector_4(void)
{
    1afa:	1f 92       	push	r1
    1afc:	0f 92       	push	r0
    1afe:	0f b6       	in	r0, 0x3f	; 63
    1b00:	0f 92       	push	r0
    1b02:	11 24       	eor	r1, r1
    1b04:	0f 93       	push	r16
    1b06:	2f 93       	push	r18
    1b08:	3f 93       	push	r19
    1b0a:	4f 93       	push	r20
    1b0c:	5f 93       	push	r21
    1b0e:	6f 93       	push	r22
    1b10:	7f 93       	push	r23
    1b12:	8f 93       	push	r24
    1b14:	9f 93       	push	r25
    1b16:	af 93       	push	r26
    1b18:	bf 93       	push	r27
    1b1a:	ef 93       	push	r30
    1b1c:	ff 93       	push	r31
    1b1e:	df 93       	push	r29
    1b20:	cf 93       	push	r28
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
	if(Timer_2_Compare_Match_Inturrept_Function!=0)
    1b26:	80 91 6e 01 	lds	r24, 0x016E
    1b2a:	90 91 6f 01 	lds	r25, 0x016F
    1b2e:	00 97       	sbiw	r24, 0x00	; 0
    1b30:	61 f0       	breq	.+24     	; 0x1b4a <__vector_4+0x50>
	{
		Timer_2_Compare_Match_Inturrept_Function();
    1b32:	e0 91 6e 01 	lds	r30, 0x016E
    1b36:	f0 91 6f 01 	lds	r31, 0x016F
    1b3a:	09 95       	icall
		Timer_2_VidInitialization(Normal,0,Disable_CM,Disable_OF,0);
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	60 e0       	ldi	r22, 0x00	; 0
    1b40:	43 e0       	ldi	r20, 0x03	; 3
    1b42:	21 e0       	ldi	r18, 0x01	; 1
    1b44:	00 e0       	ldi	r16, 0x00	; 0
    1b46:	0e 94 35 0a 	call	0x146a	; 0x146a <Timer_2_VidInitialization>
	}
}
    1b4a:	cf 91       	pop	r28
    1b4c:	df 91       	pop	r29
    1b4e:	ff 91       	pop	r31
    1b50:	ef 91       	pop	r30
    1b52:	bf 91       	pop	r27
    1b54:	af 91       	pop	r26
    1b56:	9f 91       	pop	r25
    1b58:	8f 91       	pop	r24
    1b5a:	7f 91       	pop	r23
    1b5c:	6f 91       	pop	r22
    1b5e:	5f 91       	pop	r21
    1b60:	4f 91       	pop	r20
    1b62:	3f 91       	pop	r19
    1b64:	2f 91       	pop	r18
    1b66:	0f 91       	pop	r16
    1b68:	0f 90       	pop	r0
    1b6a:	0f be       	out	0x3f, r0	; 63
    1b6c:	0f 90       	pop	r0
    1b6e:	1f 90       	pop	r1
    1b70:	18 95       	reti

00001b72 <External_Interrupt_VidInitialization>:
/*-------------------------------------------------------------------------------------------------*/
/*------------------------------------------ Main Functions ---------------------------------------*/
/*-------------------------------------------------------------------------------------------------*/
/*------------------ Interrupt INIT --------------------*/
void External_Interrupt_VidInitialization(u8 Copy_u8Interrupt,u8 Copy_u8Mode)
{
    1b72:	df 93       	push	r29
    1b74:	cf 93       	push	r28
    1b76:	cd b7       	in	r28, 0x3d	; 61
    1b78:	de b7       	in	r29, 0x3e	; 62
    1b7a:	2a 97       	sbiw	r28, 0x0a	; 10
    1b7c:	0f b6       	in	r0, 0x3f	; 63
    1b7e:	f8 94       	cli
    1b80:	de bf       	out	0x3e, r29	; 62
    1b82:	0f be       	out	0x3f, r0	; 63
    1b84:	cd bf       	out	0x3d, r28	; 61
    1b86:	89 83       	std	Y+1, r24	; 0x01
    1b88:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Interrupt)
    1b8a:	89 81       	ldd	r24, Y+1	; 0x01
    1b8c:	28 2f       	mov	r18, r24
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	3a 87       	std	Y+10, r19	; 0x0a
    1b92:	29 87       	std	Y+9, r18	; 0x09
    1b94:	89 85       	ldd	r24, Y+9	; 0x09
    1b96:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b98:	81 30       	cpi	r24, 0x01	; 1
    1b9a:	91 05       	cpc	r25, r1
    1b9c:	09 f4       	brne	.+2      	; 0x1ba0 <External_Interrupt_VidInitialization+0x2e>
    1b9e:	a8 c0       	rjmp	.+336    	; 0x1cf0 <External_Interrupt_VidInitialization+0x17e>
    1ba0:	29 85       	ldd	r18, Y+9	; 0x09
    1ba2:	3a 85       	ldd	r19, Y+10	; 0x0a
    1ba4:	22 30       	cpi	r18, 0x02	; 2
    1ba6:	31 05       	cpc	r19, r1
    1ba8:	09 f4       	brne	.+2      	; 0x1bac <External_Interrupt_VidInitialization+0x3a>
    1baa:	3f c1       	rjmp	.+638    	; 0x1e2a <External_Interrupt_VidInitialization+0x2b8>
    1bac:	89 85       	ldd	r24, Y+9	; 0x09
    1bae:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bb0:	00 97       	sbiw	r24, 0x00	; 0
    1bb2:	09 f0       	breq	.+2      	; 0x1bb6 <External_Interrupt_VidInitialization+0x44>
    1bb4:	90 c1       	rjmp	.+800    	; 0x1ed6 <External_Interrupt_VidInitialization+0x364>
	{
		case(Interrupt_0):
				switch(Copy_u8Mode)
    1bb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb8:	28 2f       	mov	r18, r24
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	38 87       	std	Y+8, r19	; 0x08
    1bbe:	2f 83       	std	Y+7, r18	; 0x07
    1bc0:	8f 81       	ldd	r24, Y+7	; 0x07
    1bc2:	98 85       	ldd	r25, Y+8	; 0x08
    1bc4:	82 30       	cpi	r24, 0x02	; 2
    1bc6:	91 05       	cpc	r25, r1
    1bc8:	09 f4       	brne	.+2      	; 0x1bcc <External_Interrupt_VidInitialization+0x5a>
    1bca:	4e c0       	rjmp	.+156    	; 0x1c68 <External_Interrupt_VidInitialization+0xf6>
    1bcc:	2f 81       	ldd	r18, Y+7	; 0x07
    1bce:	38 85       	ldd	r19, Y+8	; 0x08
    1bd0:	23 30       	cpi	r18, 0x03	; 3
    1bd2:	31 05       	cpc	r19, r1
    1bd4:	54 f4       	brge	.+20     	; 0x1bea <External_Interrupt_VidInitialization+0x78>
    1bd6:	8f 81       	ldd	r24, Y+7	; 0x07
    1bd8:	98 85       	ldd	r25, Y+8	; 0x08
    1bda:	00 97       	sbiw	r24, 0x00	; 0
    1bdc:	c9 f0       	breq	.+50     	; 0x1c10 <External_Interrupt_VidInitialization+0x9e>
    1bde:	2f 81       	ldd	r18, Y+7	; 0x07
    1be0:	38 85       	ldd	r19, Y+8	; 0x08
    1be2:	21 30       	cpi	r18, 0x01	; 1
    1be4:	31 05       	cpc	r19, r1
    1be6:	51 f1       	breq	.+84     	; 0x1c3c <External_Interrupt_VidInitialization+0xca>
    1be8:	7b c0       	rjmp	.+246    	; 0x1ce0 <External_Interrupt_VidInitialization+0x16e>
    1bea:	8f 81       	ldd	r24, Y+7	; 0x07
    1bec:	98 85       	ldd	r25, Y+8	; 0x08
    1bee:	84 30       	cpi	r24, 0x04	; 4
    1bf0:	91 05       	cpc	r25, r1
    1bf2:	09 f4       	brne	.+2      	; 0x1bf6 <External_Interrupt_VidInitialization+0x84>
    1bf4:	6d c0       	rjmp	.+218    	; 0x1cd0 <External_Interrupt_VidInitialization+0x15e>
    1bf6:	2f 81       	ldd	r18, Y+7	; 0x07
    1bf8:	38 85       	ldd	r19, Y+8	; 0x08
    1bfa:	24 30       	cpi	r18, 0x04	; 4
    1bfc:	31 05       	cpc	r19, r1
    1bfe:	0c f4       	brge	.+2      	; 0x1c02 <External_Interrupt_VidInitialization+0x90>
    1c00:	49 c0       	rjmp	.+146    	; 0x1c94 <External_Interrupt_VidInitialization+0x122>
    1c02:	8f 81       	ldd	r24, Y+7	; 0x07
    1c04:	98 85       	ldd	r25, Y+8	; 0x08
    1c06:	85 30       	cpi	r24, 0x05	; 5
    1c08:	91 05       	cpc	r25, r1
    1c0a:	09 f4       	brne	.+2      	; 0x1c0e <External_Interrupt_VidInitialization+0x9c>
    1c0c:	59 c0       	rjmp	.+178    	; 0x1cc0 <External_Interrupt_VidInitialization+0x14e>
    1c0e:	68 c0       	rjmp	.+208    	; 0x1ce0 <External_Interrupt_VidInitialization+0x16e>
				{
					case(Low_Level):Clear_Bit(MCUCR,MCUCR_ISC01);Clear_Bit(MCUCR,MCUCR_ISC00);Set_Bit(GICR,GICR_INT0);break;
    1c10:	a5 e5       	ldi	r26, 0x55	; 85
    1c12:	b0 e0       	ldi	r27, 0x00	; 0
    1c14:	e5 e5       	ldi	r30, 0x55	; 85
    1c16:	f0 e0       	ldi	r31, 0x00	; 0
    1c18:	80 81       	ld	r24, Z
    1c1a:	8d 7f       	andi	r24, 0xFD	; 253
    1c1c:	8c 93       	st	X, r24
    1c1e:	a5 e5       	ldi	r26, 0x55	; 85
    1c20:	b0 e0       	ldi	r27, 0x00	; 0
    1c22:	e5 e5       	ldi	r30, 0x55	; 85
    1c24:	f0 e0       	ldi	r31, 0x00	; 0
    1c26:	80 81       	ld	r24, Z
    1c28:	8e 7f       	andi	r24, 0xFE	; 254
    1c2a:	8c 93       	st	X, r24
    1c2c:	ab e5       	ldi	r26, 0x5B	; 91
    1c2e:	b0 e0       	ldi	r27, 0x00	; 0
    1c30:	eb e5       	ldi	r30, 0x5B	; 91
    1c32:	f0 e0       	ldi	r31, 0x00	; 0
    1c34:	80 81       	ld	r24, Z
    1c36:	80 64       	ori	r24, 0x40	; 64
    1c38:	8c 93       	st	X, r24
    1c3a:	62 c1       	rjmp	.+708    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(On_Change):Set_Bit(MCUCR,MCUCR_ISC00);Clear_Bit(MCUCR,MCUCR_ISC01);Set_Bit(GICR,GICR_INT0);break;
    1c3c:	a5 e5       	ldi	r26, 0x55	; 85
    1c3e:	b0 e0       	ldi	r27, 0x00	; 0
    1c40:	e5 e5       	ldi	r30, 0x55	; 85
    1c42:	f0 e0       	ldi	r31, 0x00	; 0
    1c44:	80 81       	ld	r24, Z
    1c46:	81 60       	ori	r24, 0x01	; 1
    1c48:	8c 93       	st	X, r24
    1c4a:	a5 e5       	ldi	r26, 0x55	; 85
    1c4c:	b0 e0       	ldi	r27, 0x00	; 0
    1c4e:	e5 e5       	ldi	r30, 0x55	; 85
    1c50:	f0 e0       	ldi	r31, 0x00	; 0
    1c52:	80 81       	ld	r24, Z
    1c54:	8d 7f       	andi	r24, 0xFD	; 253
    1c56:	8c 93       	st	X, r24
    1c58:	ab e5       	ldi	r26, 0x5B	; 91
    1c5a:	b0 e0       	ldi	r27, 0x00	; 0
    1c5c:	eb e5       	ldi	r30, 0x5B	; 91
    1c5e:	f0 e0       	ldi	r31, 0x00	; 0
    1c60:	80 81       	ld	r24, Z
    1c62:	80 64       	ori	r24, 0x40	; 64
    1c64:	8c 93       	st	X, r24
    1c66:	4c c1       	rjmp	.+664    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Falling_Edge):Clear_Bit(MCUCR,MCUCR_ISC00);Set_Bit(MCUCR,MCUCR_ISC01);Set_Bit(GICR,GICR_INT0);break;
    1c68:	a5 e5       	ldi	r26, 0x55	; 85
    1c6a:	b0 e0       	ldi	r27, 0x00	; 0
    1c6c:	e5 e5       	ldi	r30, 0x55	; 85
    1c6e:	f0 e0       	ldi	r31, 0x00	; 0
    1c70:	80 81       	ld	r24, Z
    1c72:	8e 7f       	andi	r24, 0xFE	; 254
    1c74:	8c 93       	st	X, r24
    1c76:	a5 e5       	ldi	r26, 0x55	; 85
    1c78:	b0 e0       	ldi	r27, 0x00	; 0
    1c7a:	e5 e5       	ldi	r30, 0x55	; 85
    1c7c:	f0 e0       	ldi	r31, 0x00	; 0
    1c7e:	80 81       	ld	r24, Z
    1c80:	82 60       	ori	r24, 0x02	; 2
    1c82:	8c 93       	st	X, r24
    1c84:	ab e5       	ldi	r26, 0x5B	; 91
    1c86:	b0 e0       	ldi	r27, 0x00	; 0
    1c88:	eb e5       	ldi	r30, 0x5B	; 91
    1c8a:	f0 e0       	ldi	r31, 0x00	; 0
    1c8c:	80 81       	ld	r24, Z
    1c8e:	80 64       	ori	r24, 0x40	; 64
    1c90:	8c 93       	st	X, r24
    1c92:	36 c1       	rjmp	.+620    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Rising_Edge):Set_Bit(MCUCR,MCUCR_ISC01);Set_Bit(MCUCR,MCUCR_ISC00);Set_Bit(GICR,GICR_INT0);break;
    1c94:	a5 e5       	ldi	r26, 0x55	; 85
    1c96:	b0 e0       	ldi	r27, 0x00	; 0
    1c98:	e5 e5       	ldi	r30, 0x55	; 85
    1c9a:	f0 e0       	ldi	r31, 0x00	; 0
    1c9c:	80 81       	ld	r24, Z
    1c9e:	82 60       	ori	r24, 0x02	; 2
    1ca0:	8c 93       	st	X, r24
    1ca2:	a5 e5       	ldi	r26, 0x55	; 85
    1ca4:	b0 e0       	ldi	r27, 0x00	; 0
    1ca6:	e5 e5       	ldi	r30, 0x55	; 85
    1ca8:	f0 e0       	ldi	r31, 0x00	; 0
    1caa:	80 81       	ld	r24, Z
    1cac:	81 60       	ori	r24, 0x01	; 1
    1cae:	8c 93       	st	X, r24
    1cb0:	ab e5       	ldi	r26, 0x5B	; 91
    1cb2:	b0 e0       	ldi	r27, 0x00	; 0
    1cb4:	eb e5       	ldi	r30, 0x5B	; 91
    1cb6:	f0 e0       	ldi	r31, 0x00	; 0
    1cb8:	80 81       	ld	r24, Z
    1cba:	80 64       	ori	r24, 0x40	; 64
    1cbc:	8c 93       	st	X, r24
    1cbe:	20 c1       	rjmp	.+576    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Disable):Clear_Bit(GICR,GICR_INT0);break;
    1cc0:	ab e5       	ldi	r26, 0x5B	; 91
    1cc2:	b0 e0       	ldi	r27, 0x00	; 0
    1cc4:	eb e5       	ldi	r30, 0x5B	; 91
    1cc6:	f0 e0       	ldi	r31, 0x00	; 0
    1cc8:	80 81       	ld	r24, Z
    1cca:	8f 7b       	andi	r24, 0xBF	; 191
    1ccc:	8c 93       	st	X, r24
    1cce:	18 c1       	rjmp	.+560    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Enable):Set_Bit(GICR,GICR_INT0);break;
    1cd0:	ab e5       	ldi	r26, 0x5B	; 91
    1cd2:	b0 e0       	ldi	r27, 0x00	; 0
    1cd4:	eb e5       	ldi	r30, 0x5B	; 91
    1cd6:	f0 e0       	ldi	r31, 0x00	; 0
    1cd8:	80 81       	ld	r24, Z
    1cda:	80 64       	ori	r24, 0x40	; 64
    1cdc:	8c 93       	st	X, r24
    1cde:	10 c1       	rjmp	.+544    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					default:Clear_Bit(GICR,GICR_INT0);break;
    1ce0:	ab e5       	ldi	r26, 0x5B	; 91
    1ce2:	b0 e0       	ldi	r27, 0x00	; 0
    1ce4:	eb e5       	ldi	r30, 0x5B	; 91
    1ce6:	f0 e0       	ldi	r31, 0x00	; 0
    1ce8:	80 81       	ld	r24, Z
    1cea:	8f 7b       	andi	r24, 0xBF	; 191
    1cec:	8c 93       	st	X, r24
    1cee:	08 c1       	rjmp	.+528    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
				}
		break;
		case(Interrupt_1):
				switch(Copy_u8Mode)
    1cf0:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf2:	28 2f       	mov	r18, r24
    1cf4:	30 e0       	ldi	r19, 0x00	; 0
    1cf6:	3e 83       	std	Y+6, r19	; 0x06
    1cf8:	2d 83       	std	Y+5, r18	; 0x05
    1cfa:	8d 81       	ldd	r24, Y+5	; 0x05
    1cfc:	9e 81       	ldd	r25, Y+6	; 0x06
    1cfe:	82 30       	cpi	r24, 0x02	; 2
    1d00:	91 05       	cpc	r25, r1
    1d02:	09 f4       	brne	.+2      	; 0x1d06 <External_Interrupt_VidInitialization+0x194>
    1d04:	4e c0       	rjmp	.+156    	; 0x1da2 <External_Interrupt_VidInitialization+0x230>
    1d06:	2d 81       	ldd	r18, Y+5	; 0x05
    1d08:	3e 81       	ldd	r19, Y+6	; 0x06
    1d0a:	23 30       	cpi	r18, 0x03	; 3
    1d0c:	31 05       	cpc	r19, r1
    1d0e:	54 f4       	brge	.+20     	; 0x1d24 <External_Interrupt_VidInitialization+0x1b2>
    1d10:	8d 81       	ldd	r24, Y+5	; 0x05
    1d12:	9e 81       	ldd	r25, Y+6	; 0x06
    1d14:	00 97       	sbiw	r24, 0x00	; 0
    1d16:	c9 f0       	breq	.+50     	; 0x1d4a <External_Interrupt_VidInitialization+0x1d8>
    1d18:	2d 81       	ldd	r18, Y+5	; 0x05
    1d1a:	3e 81       	ldd	r19, Y+6	; 0x06
    1d1c:	21 30       	cpi	r18, 0x01	; 1
    1d1e:	31 05       	cpc	r19, r1
    1d20:	51 f1       	breq	.+84     	; 0x1d76 <External_Interrupt_VidInitialization+0x204>
    1d22:	7b c0       	rjmp	.+246    	; 0x1e1a <External_Interrupt_VidInitialization+0x2a8>
    1d24:	8d 81       	ldd	r24, Y+5	; 0x05
    1d26:	9e 81       	ldd	r25, Y+6	; 0x06
    1d28:	84 30       	cpi	r24, 0x04	; 4
    1d2a:	91 05       	cpc	r25, r1
    1d2c:	09 f4       	brne	.+2      	; 0x1d30 <External_Interrupt_VidInitialization+0x1be>
    1d2e:	6d c0       	rjmp	.+218    	; 0x1e0a <External_Interrupt_VidInitialization+0x298>
    1d30:	2d 81       	ldd	r18, Y+5	; 0x05
    1d32:	3e 81       	ldd	r19, Y+6	; 0x06
    1d34:	24 30       	cpi	r18, 0x04	; 4
    1d36:	31 05       	cpc	r19, r1
    1d38:	0c f4       	brge	.+2      	; 0x1d3c <External_Interrupt_VidInitialization+0x1ca>
    1d3a:	49 c0       	rjmp	.+146    	; 0x1dce <External_Interrupt_VidInitialization+0x25c>
    1d3c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d3e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d40:	85 30       	cpi	r24, 0x05	; 5
    1d42:	91 05       	cpc	r25, r1
    1d44:	09 f4       	brne	.+2      	; 0x1d48 <External_Interrupt_VidInitialization+0x1d6>
    1d46:	59 c0       	rjmp	.+178    	; 0x1dfa <External_Interrupt_VidInitialization+0x288>
    1d48:	68 c0       	rjmp	.+208    	; 0x1e1a <External_Interrupt_VidInitialization+0x2a8>
				{
					case(Low_Level):Clear_Bit(MCUCR,MCUCR_ISC11);Clear_Bit(MCUCR,MCUCR_ISC10);Set_Bit(GICR,GICR_INT1);break;
    1d4a:	a5 e5       	ldi	r26, 0x55	; 85
    1d4c:	b0 e0       	ldi	r27, 0x00	; 0
    1d4e:	e5 e5       	ldi	r30, 0x55	; 85
    1d50:	f0 e0       	ldi	r31, 0x00	; 0
    1d52:	80 81       	ld	r24, Z
    1d54:	87 7f       	andi	r24, 0xF7	; 247
    1d56:	8c 93       	st	X, r24
    1d58:	a5 e5       	ldi	r26, 0x55	; 85
    1d5a:	b0 e0       	ldi	r27, 0x00	; 0
    1d5c:	e5 e5       	ldi	r30, 0x55	; 85
    1d5e:	f0 e0       	ldi	r31, 0x00	; 0
    1d60:	80 81       	ld	r24, Z
    1d62:	8b 7f       	andi	r24, 0xFB	; 251
    1d64:	8c 93       	st	X, r24
    1d66:	ab e5       	ldi	r26, 0x5B	; 91
    1d68:	b0 e0       	ldi	r27, 0x00	; 0
    1d6a:	eb e5       	ldi	r30, 0x5B	; 91
    1d6c:	f0 e0       	ldi	r31, 0x00	; 0
    1d6e:	80 81       	ld	r24, Z
    1d70:	80 68       	ori	r24, 0x80	; 128
    1d72:	8c 93       	st	X, r24
    1d74:	c5 c0       	rjmp	.+394    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(On_Change):Set_Bit(MCUCR,MCUCR_ISC10);Clear_Bit(MCUCR,MCUCR_ISC11);Set_Bit(GICR,GICR_INT1);break;
    1d76:	a5 e5       	ldi	r26, 0x55	; 85
    1d78:	b0 e0       	ldi	r27, 0x00	; 0
    1d7a:	e5 e5       	ldi	r30, 0x55	; 85
    1d7c:	f0 e0       	ldi	r31, 0x00	; 0
    1d7e:	80 81       	ld	r24, Z
    1d80:	84 60       	ori	r24, 0x04	; 4
    1d82:	8c 93       	st	X, r24
    1d84:	a5 e5       	ldi	r26, 0x55	; 85
    1d86:	b0 e0       	ldi	r27, 0x00	; 0
    1d88:	e5 e5       	ldi	r30, 0x55	; 85
    1d8a:	f0 e0       	ldi	r31, 0x00	; 0
    1d8c:	80 81       	ld	r24, Z
    1d8e:	87 7f       	andi	r24, 0xF7	; 247
    1d90:	8c 93       	st	X, r24
    1d92:	ab e5       	ldi	r26, 0x5B	; 91
    1d94:	b0 e0       	ldi	r27, 0x00	; 0
    1d96:	eb e5       	ldi	r30, 0x5B	; 91
    1d98:	f0 e0       	ldi	r31, 0x00	; 0
    1d9a:	80 81       	ld	r24, Z
    1d9c:	80 68       	ori	r24, 0x80	; 128
    1d9e:	8c 93       	st	X, r24
    1da0:	af c0       	rjmp	.+350    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Falling_Edge):Clear_Bit(MCUCR,MCUCR_ISC10);Set_Bit(MCUCR,MCUCR_ISC11);Set_Bit(GICR,GICR_INT1);break;
    1da2:	a5 e5       	ldi	r26, 0x55	; 85
    1da4:	b0 e0       	ldi	r27, 0x00	; 0
    1da6:	e5 e5       	ldi	r30, 0x55	; 85
    1da8:	f0 e0       	ldi	r31, 0x00	; 0
    1daa:	80 81       	ld	r24, Z
    1dac:	8b 7f       	andi	r24, 0xFB	; 251
    1dae:	8c 93       	st	X, r24
    1db0:	a5 e5       	ldi	r26, 0x55	; 85
    1db2:	b0 e0       	ldi	r27, 0x00	; 0
    1db4:	e5 e5       	ldi	r30, 0x55	; 85
    1db6:	f0 e0       	ldi	r31, 0x00	; 0
    1db8:	80 81       	ld	r24, Z
    1dba:	88 60       	ori	r24, 0x08	; 8
    1dbc:	8c 93       	st	X, r24
    1dbe:	ab e5       	ldi	r26, 0x5B	; 91
    1dc0:	b0 e0       	ldi	r27, 0x00	; 0
    1dc2:	eb e5       	ldi	r30, 0x5B	; 91
    1dc4:	f0 e0       	ldi	r31, 0x00	; 0
    1dc6:	80 81       	ld	r24, Z
    1dc8:	80 68       	ori	r24, 0x80	; 128
    1dca:	8c 93       	st	X, r24
    1dcc:	99 c0       	rjmp	.+306    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Rising_Edge):Set_Bit(MCUCR,MCUCR_ISC10);Set_Bit(MCUCR,MCUCR_ISC11);Set_Bit(GICR,GICR_INT1);break;
    1dce:	a5 e5       	ldi	r26, 0x55	; 85
    1dd0:	b0 e0       	ldi	r27, 0x00	; 0
    1dd2:	e5 e5       	ldi	r30, 0x55	; 85
    1dd4:	f0 e0       	ldi	r31, 0x00	; 0
    1dd6:	80 81       	ld	r24, Z
    1dd8:	84 60       	ori	r24, 0x04	; 4
    1dda:	8c 93       	st	X, r24
    1ddc:	a5 e5       	ldi	r26, 0x55	; 85
    1dde:	b0 e0       	ldi	r27, 0x00	; 0
    1de0:	e5 e5       	ldi	r30, 0x55	; 85
    1de2:	f0 e0       	ldi	r31, 0x00	; 0
    1de4:	80 81       	ld	r24, Z
    1de6:	88 60       	ori	r24, 0x08	; 8
    1de8:	8c 93       	st	X, r24
    1dea:	ab e5       	ldi	r26, 0x5B	; 91
    1dec:	b0 e0       	ldi	r27, 0x00	; 0
    1dee:	eb e5       	ldi	r30, 0x5B	; 91
    1df0:	f0 e0       	ldi	r31, 0x00	; 0
    1df2:	80 81       	ld	r24, Z
    1df4:	80 68       	ori	r24, 0x80	; 128
    1df6:	8c 93       	st	X, r24
    1df8:	83 c0       	rjmp	.+262    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Disable):Clear_Bit(GICR,GICR_INT1);break;
    1dfa:	ab e5       	ldi	r26, 0x5B	; 91
    1dfc:	b0 e0       	ldi	r27, 0x00	; 0
    1dfe:	eb e5       	ldi	r30, 0x5B	; 91
    1e00:	f0 e0       	ldi	r31, 0x00	; 0
    1e02:	80 81       	ld	r24, Z
    1e04:	8f 77       	andi	r24, 0x7F	; 127
    1e06:	8c 93       	st	X, r24
    1e08:	7b c0       	rjmp	.+246    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					case(Enable):Set_Bit(GICR,GICR_INT1);break;
    1e0a:	ab e5       	ldi	r26, 0x5B	; 91
    1e0c:	b0 e0       	ldi	r27, 0x00	; 0
    1e0e:	eb e5       	ldi	r30, 0x5B	; 91
    1e10:	f0 e0       	ldi	r31, 0x00	; 0
    1e12:	80 81       	ld	r24, Z
    1e14:	80 68       	ori	r24, 0x80	; 128
    1e16:	8c 93       	st	X, r24
    1e18:	73 c0       	rjmp	.+230    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
					default:Clear_Bit(GICR,GICR_INT1);break;
    1e1a:	ab e5       	ldi	r26, 0x5B	; 91
    1e1c:	b0 e0       	ldi	r27, 0x00	; 0
    1e1e:	eb e5       	ldi	r30, 0x5B	; 91
    1e20:	f0 e0       	ldi	r31, 0x00	; 0
    1e22:	80 81       	ld	r24, Z
    1e24:	8f 77       	andi	r24, 0x7F	; 127
    1e26:	8c 93       	st	X, r24
    1e28:	6b c0       	rjmp	.+214    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
				}
		break;
		case(Interrupt_2):
			switch(Copy_u8Mode)
    1e2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2c:	28 2f       	mov	r18, r24
    1e2e:	30 e0       	ldi	r19, 0x00	; 0
    1e30:	3c 83       	std	Y+4, r19	; 0x04
    1e32:	2b 83       	std	Y+3, r18	; 0x03
    1e34:	8b 81       	ldd	r24, Y+3	; 0x03
    1e36:	9c 81       	ldd	r25, Y+4	; 0x04
    1e38:	83 30       	cpi	r24, 0x03	; 3
    1e3a:	91 05       	cpc	r25, r1
    1e3c:	29 f1       	breq	.+74     	; 0x1e88 <External_Interrupt_VidInitialization+0x316>
    1e3e:	2b 81       	ldd	r18, Y+3	; 0x03
    1e40:	3c 81       	ldd	r19, Y+4	; 0x04
    1e42:	24 30       	cpi	r18, 0x04	; 4
    1e44:	31 05       	cpc	r19, r1
    1e46:	34 f4       	brge	.+12     	; 0x1e54 <External_Interrupt_VidInitialization+0x2e2>
    1e48:	8b 81       	ldd	r24, Y+3	; 0x03
    1e4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e4c:	82 30       	cpi	r24, 0x02	; 2
    1e4e:	91 05       	cpc	r25, r1
    1e50:	61 f0       	breq	.+24     	; 0x1e6a <External_Interrupt_VidInitialization+0x2f8>
    1e52:	39 c0       	rjmp	.+114    	; 0x1ec6 <External_Interrupt_VidInitialization+0x354>
    1e54:	2b 81       	ldd	r18, Y+3	; 0x03
    1e56:	3c 81       	ldd	r19, Y+4	; 0x04
    1e58:	24 30       	cpi	r18, 0x04	; 4
    1e5a:	31 05       	cpc	r19, r1
    1e5c:	61 f1       	breq	.+88     	; 0x1eb6 <External_Interrupt_VidInitialization+0x344>
    1e5e:	8b 81       	ldd	r24, Y+3	; 0x03
    1e60:	9c 81       	ldd	r25, Y+4	; 0x04
    1e62:	85 30       	cpi	r24, 0x05	; 5
    1e64:	91 05       	cpc	r25, r1
    1e66:	f9 f0       	breq	.+62     	; 0x1ea6 <External_Interrupt_VidInitialization+0x334>
    1e68:	2e c0       	rjmp	.+92     	; 0x1ec6 <External_Interrupt_VidInitialization+0x354>
			{
				case(Falling_Edge):Clear_Bit(MCUCSR,MCUCSR_ISC2);Set_Bit(GICR,GICR_INT2);break;
    1e6a:	a4 e5       	ldi	r26, 0x54	; 84
    1e6c:	b0 e0       	ldi	r27, 0x00	; 0
    1e6e:	e4 e5       	ldi	r30, 0x54	; 84
    1e70:	f0 e0       	ldi	r31, 0x00	; 0
    1e72:	80 81       	ld	r24, Z
    1e74:	8f 7b       	andi	r24, 0xBF	; 191
    1e76:	8c 93       	st	X, r24
    1e78:	ab e5       	ldi	r26, 0x5B	; 91
    1e7a:	b0 e0       	ldi	r27, 0x00	; 0
    1e7c:	eb e5       	ldi	r30, 0x5B	; 91
    1e7e:	f0 e0       	ldi	r31, 0x00	; 0
    1e80:	80 81       	ld	r24, Z
    1e82:	80 62       	ori	r24, 0x20	; 32
    1e84:	8c 93       	st	X, r24
    1e86:	3c c0       	rjmp	.+120    	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
				case(Rising_Edge):Set_Bit(MCUCSR,MCUCR_ISC00);Set_Bit(GICR,GICR_INT2);break;
    1e88:	a4 e5       	ldi	r26, 0x54	; 84
    1e8a:	b0 e0       	ldi	r27, 0x00	; 0
    1e8c:	e4 e5       	ldi	r30, 0x54	; 84
    1e8e:	f0 e0       	ldi	r31, 0x00	; 0
    1e90:	80 81       	ld	r24, Z
    1e92:	81 60       	ori	r24, 0x01	; 1
    1e94:	8c 93       	st	X, r24
    1e96:	ab e5       	ldi	r26, 0x5B	; 91
    1e98:	b0 e0       	ldi	r27, 0x00	; 0
    1e9a:	eb e5       	ldi	r30, 0x5B	; 91
    1e9c:	f0 e0       	ldi	r31, 0x00	; 0
    1e9e:	80 81       	ld	r24, Z
    1ea0:	80 62       	ori	r24, 0x20	; 32
    1ea2:	8c 93       	st	X, r24
    1ea4:	2d c0       	rjmp	.+90     	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
				case(Disable):Clear_Bit(GICR,GICR_INT2);break;
    1ea6:	ab e5       	ldi	r26, 0x5B	; 91
    1ea8:	b0 e0       	ldi	r27, 0x00	; 0
    1eaa:	eb e5       	ldi	r30, 0x5B	; 91
    1eac:	f0 e0       	ldi	r31, 0x00	; 0
    1eae:	80 81       	ld	r24, Z
    1eb0:	8f 7d       	andi	r24, 0xDF	; 223
    1eb2:	8c 93       	st	X, r24
    1eb4:	25 c0       	rjmp	.+74     	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
				case(Enable):Set_Bit(GICR,GICR_INT2);break;
    1eb6:	ab e5       	ldi	r26, 0x5B	; 91
    1eb8:	b0 e0       	ldi	r27, 0x00	; 0
    1eba:	eb e5       	ldi	r30, 0x5B	; 91
    1ebc:	f0 e0       	ldi	r31, 0x00	; 0
    1ebe:	80 81       	ld	r24, Z
    1ec0:	80 62       	ori	r24, 0x20	; 32
    1ec2:	8c 93       	st	X, r24
    1ec4:	1d c0       	rjmp	.+58     	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
				default:Clear_Bit(GICR,GICR_INT2);break;
    1ec6:	ab e5       	ldi	r26, 0x5B	; 91
    1ec8:	b0 e0       	ldi	r27, 0x00	; 0
    1eca:	eb e5       	ldi	r30, 0x5B	; 91
    1ecc:	f0 e0       	ldi	r31, 0x00	; 0
    1ece:	80 81       	ld	r24, Z
    1ed0:	8f 7d       	andi	r24, 0xDF	; 223
    1ed2:	8c 93       	st	X, r24
    1ed4:	15 c0       	rjmp	.+42     	; 0x1f00 <External_Interrupt_VidInitialization+0x38e>
			}
		break;
		default:Clear_Bit(GICR,GICR_INT0);Clear_Bit(GICR,GICR_INT1);Clear_Bit(GICR,GICR_INT2);break;
    1ed6:	ab e5       	ldi	r26, 0x5B	; 91
    1ed8:	b0 e0       	ldi	r27, 0x00	; 0
    1eda:	eb e5       	ldi	r30, 0x5B	; 91
    1edc:	f0 e0       	ldi	r31, 0x00	; 0
    1ede:	80 81       	ld	r24, Z
    1ee0:	8f 7b       	andi	r24, 0xBF	; 191
    1ee2:	8c 93       	st	X, r24
    1ee4:	ab e5       	ldi	r26, 0x5B	; 91
    1ee6:	b0 e0       	ldi	r27, 0x00	; 0
    1ee8:	eb e5       	ldi	r30, 0x5B	; 91
    1eea:	f0 e0       	ldi	r31, 0x00	; 0
    1eec:	80 81       	ld	r24, Z
    1eee:	8f 77       	andi	r24, 0x7F	; 127
    1ef0:	8c 93       	st	X, r24
    1ef2:	ab e5       	ldi	r26, 0x5B	; 91
    1ef4:	b0 e0       	ldi	r27, 0x00	; 0
    1ef6:	eb e5       	ldi	r30, 0x5B	; 91
    1ef8:	f0 e0       	ldi	r31, 0x00	; 0
    1efa:	80 81       	ld	r24, Z
    1efc:	8f 7d       	andi	r24, 0xDF	; 223
    1efe:	8c 93       	st	X, r24
	}
}
    1f00:	2a 96       	adiw	r28, 0x0a	; 10
    1f02:	0f b6       	in	r0, 0x3f	; 63
    1f04:	f8 94       	cli
    1f06:	de bf       	out	0x3e, r29	; 62
    1f08:	0f be       	out	0x3f, r0	; 63
    1f0a:	cd bf       	out	0x3d, r28	; 61
    1f0c:	cf 91       	pop	r28
    1f0e:	df 91       	pop	r29
    1f10:	08 95       	ret

00001f12 <External_Interrupt_0>:

/*------------------ ISR Interrupt_0 --------------------*/
static void (*External_Interrupt_0_Function)(void)=0;
void External_Interrupt_0(void(*Copy_VidInturrept)(void))
{
    1f12:	df 93       	push	r29
    1f14:	cf 93       	push	r28
    1f16:	00 d0       	rcall	.+0      	; 0x1f18 <External_Interrupt_0+0x6>
    1f18:	cd b7       	in	r28, 0x3d	; 61
    1f1a:	de b7       	in	r29, 0x3e	; 62
    1f1c:	9a 83       	std	Y+2, r25	; 0x02
    1f1e:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    1f20:	89 81       	ldd	r24, Y+1	; 0x01
    1f22:	9a 81       	ldd	r25, Y+2	; 0x02
    1f24:	00 97       	sbiw	r24, 0x00	; 0
    1f26:	31 f0       	breq	.+12     	; 0x1f34 <External_Interrupt_0+0x22>
	{
		External_Interrupt_0_Function = Copy_VidInturrept;
    1f28:	89 81       	ldd	r24, Y+1	; 0x01
    1f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f2c:	90 93 71 01 	sts	0x0171, r25
    1f30:	80 93 70 01 	sts	0x0170, r24
	}
}
    1f34:	0f 90       	pop	r0
    1f36:	0f 90       	pop	r0
    1f38:	cf 91       	pop	r28
    1f3a:	df 91       	pop	r29
    1f3c:	08 95       	ret

00001f3e <__vector_1>:
void __vector_1(void) __attribute__((signal,used));
void __vector_1(void)
{
    1f3e:	1f 92       	push	r1
    1f40:	0f 92       	push	r0
    1f42:	0f b6       	in	r0, 0x3f	; 63
    1f44:	0f 92       	push	r0
    1f46:	11 24       	eor	r1, r1
    1f48:	2f 93       	push	r18
    1f4a:	3f 93       	push	r19
    1f4c:	4f 93       	push	r20
    1f4e:	5f 93       	push	r21
    1f50:	6f 93       	push	r22
    1f52:	7f 93       	push	r23
    1f54:	8f 93       	push	r24
    1f56:	9f 93       	push	r25
    1f58:	af 93       	push	r26
    1f5a:	bf 93       	push	r27
    1f5c:	ef 93       	push	r30
    1f5e:	ff 93       	push	r31
    1f60:	df 93       	push	r29
    1f62:	cf 93       	push	r28
    1f64:	cd b7       	in	r28, 0x3d	; 61
    1f66:	de b7       	in	r29, 0x3e	; 62
	if(External_Interrupt_0_Function!=0)
    1f68:	80 91 70 01 	lds	r24, 0x0170
    1f6c:	90 91 71 01 	lds	r25, 0x0171
    1f70:	00 97       	sbiw	r24, 0x00	; 0
    1f72:	69 f0       	breq	.+26     	; 0x1f8e <__vector_1+0x50>
	{
		External_Interrupt_VidInitialization(Interrupt_0,Disable);
    1f74:	80 e0       	ldi	r24, 0x00	; 0
    1f76:	65 e0       	ldi	r22, 0x05	; 5
    1f78:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
		External_Interrupt_0_Function();
    1f7c:	e0 91 70 01 	lds	r30, 0x0170
    1f80:	f0 91 71 01 	lds	r31, 0x0171
    1f84:	09 95       	icall
		External_Interrupt_VidInitialization(Interrupt_0,Enable);
    1f86:	80 e0       	ldi	r24, 0x00	; 0
    1f88:	64 e0       	ldi	r22, 0x04	; 4
    1f8a:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
	}
}
    1f8e:	cf 91       	pop	r28
    1f90:	df 91       	pop	r29
    1f92:	ff 91       	pop	r31
    1f94:	ef 91       	pop	r30
    1f96:	bf 91       	pop	r27
    1f98:	af 91       	pop	r26
    1f9a:	9f 91       	pop	r25
    1f9c:	8f 91       	pop	r24
    1f9e:	7f 91       	pop	r23
    1fa0:	6f 91       	pop	r22
    1fa2:	5f 91       	pop	r21
    1fa4:	4f 91       	pop	r20
    1fa6:	3f 91       	pop	r19
    1fa8:	2f 91       	pop	r18
    1faa:	0f 90       	pop	r0
    1fac:	0f be       	out	0x3f, r0	; 63
    1fae:	0f 90       	pop	r0
    1fb0:	1f 90       	pop	r1
    1fb2:	18 95       	reti

00001fb4 <External_Interrupt_1>:
/*------------------ ISR Interrupt_1 --------------------*/
static void (*External_Interrupt_1_Function)(void)=0;
void External_Interrupt_1(void(*Copy_VidInturrept)(void))
{
    1fb4:	df 93       	push	r29
    1fb6:	cf 93       	push	r28
    1fb8:	00 d0       	rcall	.+0      	; 0x1fba <External_Interrupt_1+0x6>
    1fba:	cd b7       	in	r28, 0x3d	; 61
    1fbc:	de b7       	in	r29, 0x3e	; 62
    1fbe:	9a 83       	std	Y+2, r25	; 0x02
    1fc0:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    1fc2:	89 81       	ldd	r24, Y+1	; 0x01
    1fc4:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc6:	00 97       	sbiw	r24, 0x00	; 0
    1fc8:	31 f0       	breq	.+12     	; 0x1fd6 <External_Interrupt_1+0x22>
	{
		External_Interrupt_1_Function = Copy_VidInturrept;
    1fca:	89 81       	ldd	r24, Y+1	; 0x01
    1fcc:	9a 81       	ldd	r25, Y+2	; 0x02
    1fce:	90 93 73 01 	sts	0x0173, r25
    1fd2:	80 93 72 01 	sts	0x0172, r24
	}
}
    1fd6:	0f 90       	pop	r0
    1fd8:	0f 90       	pop	r0
    1fda:	cf 91       	pop	r28
    1fdc:	df 91       	pop	r29
    1fde:	08 95       	ret

00001fe0 <__vector_2>:
void __vector_2(void) __attribute__((signal,used));
void __vector_2(void)
{
    1fe0:	1f 92       	push	r1
    1fe2:	0f 92       	push	r0
    1fe4:	0f b6       	in	r0, 0x3f	; 63
    1fe6:	0f 92       	push	r0
    1fe8:	11 24       	eor	r1, r1
    1fea:	2f 93       	push	r18
    1fec:	3f 93       	push	r19
    1fee:	4f 93       	push	r20
    1ff0:	5f 93       	push	r21
    1ff2:	6f 93       	push	r22
    1ff4:	7f 93       	push	r23
    1ff6:	8f 93       	push	r24
    1ff8:	9f 93       	push	r25
    1ffa:	af 93       	push	r26
    1ffc:	bf 93       	push	r27
    1ffe:	ef 93       	push	r30
    2000:	ff 93       	push	r31
    2002:	df 93       	push	r29
    2004:	cf 93       	push	r28
    2006:	cd b7       	in	r28, 0x3d	; 61
    2008:	de b7       	in	r29, 0x3e	; 62
	if(External_Interrupt_1_Function!=0)
    200a:	80 91 72 01 	lds	r24, 0x0172
    200e:	90 91 73 01 	lds	r25, 0x0173
    2012:	00 97       	sbiw	r24, 0x00	; 0
    2014:	69 f0       	breq	.+26     	; 0x2030 <__vector_2+0x50>
	{
		External_Interrupt_VidInitialization(Interrupt_1,Disable);
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	65 e0       	ldi	r22, 0x05	; 5
    201a:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
		External_Interrupt_1_Function();
    201e:	e0 91 72 01 	lds	r30, 0x0172
    2022:	f0 91 73 01 	lds	r31, 0x0173
    2026:	09 95       	icall
		External_Interrupt_VidInitialization(Interrupt_1,Enable);
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	64 e0       	ldi	r22, 0x04	; 4
    202c:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
	}
}
    2030:	cf 91       	pop	r28
    2032:	df 91       	pop	r29
    2034:	ff 91       	pop	r31
    2036:	ef 91       	pop	r30
    2038:	bf 91       	pop	r27
    203a:	af 91       	pop	r26
    203c:	9f 91       	pop	r25
    203e:	8f 91       	pop	r24
    2040:	7f 91       	pop	r23
    2042:	6f 91       	pop	r22
    2044:	5f 91       	pop	r21
    2046:	4f 91       	pop	r20
    2048:	3f 91       	pop	r19
    204a:	2f 91       	pop	r18
    204c:	0f 90       	pop	r0
    204e:	0f be       	out	0x3f, r0	; 63
    2050:	0f 90       	pop	r0
    2052:	1f 90       	pop	r1
    2054:	18 95       	reti

00002056 <External_Interrupt_2>:
/*------------------ ISR Interrupt_2 --------------------*/
static void (*External_Interrupt_2_Function)(void)=0;
void External_Interrupt_2(void(*Copy_VidInturrept)(void))
{
    2056:	df 93       	push	r29
    2058:	cf 93       	push	r28
    205a:	00 d0       	rcall	.+0      	; 0x205c <External_Interrupt_2+0x6>
    205c:	cd b7       	in	r28, 0x3d	; 61
    205e:	de b7       	in	r29, 0x3e	; 62
    2060:	9a 83       	std	Y+2, r25	; 0x02
    2062:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_VidInturrept!=0)
    2064:	89 81       	ldd	r24, Y+1	; 0x01
    2066:	9a 81       	ldd	r25, Y+2	; 0x02
    2068:	00 97       	sbiw	r24, 0x00	; 0
    206a:	31 f0       	breq	.+12     	; 0x2078 <External_Interrupt_2+0x22>
	{
		External_Interrupt_2_Function = Copy_VidInturrept;
    206c:	89 81       	ldd	r24, Y+1	; 0x01
    206e:	9a 81       	ldd	r25, Y+2	; 0x02
    2070:	90 93 75 01 	sts	0x0175, r25
    2074:	80 93 74 01 	sts	0x0174, r24
	}
}
    2078:	0f 90       	pop	r0
    207a:	0f 90       	pop	r0
    207c:	cf 91       	pop	r28
    207e:	df 91       	pop	r29
    2080:	08 95       	ret

00002082 <__vector_3>:
void __vector_3(void) __attribute__((signal,used));
void __vector_3(void)
{
    2082:	1f 92       	push	r1
    2084:	0f 92       	push	r0
    2086:	0f b6       	in	r0, 0x3f	; 63
    2088:	0f 92       	push	r0
    208a:	11 24       	eor	r1, r1
    208c:	2f 93       	push	r18
    208e:	3f 93       	push	r19
    2090:	4f 93       	push	r20
    2092:	5f 93       	push	r21
    2094:	6f 93       	push	r22
    2096:	7f 93       	push	r23
    2098:	8f 93       	push	r24
    209a:	9f 93       	push	r25
    209c:	af 93       	push	r26
    209e:	bf 93       	push	r27
    20a0:	ef 93       	push	r30
    20a2:	ff 93       	push	r31
    20a4:	df 93       	push	r29
    20a6:	cf 93       	push	r28
    20a8:	cd b7       	in	r28, 0x3d	; 61
    20aa:	de b7       	in	r29, 0x3e	; 62
	if(External_Interrupt_2_Function!=0)
    20ac:	80 91 74 01 	lds	r24, 0x0174
    20b0:	90 91 75 01 	lds	r25, 0x0175
    20b4:	00 97       	sbiw	r24, 0x00	; 0
    20b6:	69 f0       	breq	.+26     	; 0x20d2 <__vector_3+0x50>
	{
		External_Interrupt_VidInitialization(Interrupt_2,Disable);
    20b8:	82 e0       	ldi	r24, 0x02	; 2
    20ba:	65 e0       	ldi	r22, 0x05	; 5
    20bc:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
		External_Interrupt_2_Function();
    20c0:	e0 91 74 01 	lds	r30, 0x0174
    20c4:	f0 91 75 01 	lds	r31, 0x0175
    20c8:	09 95       	icall
		External_Interrupt_VidInitialization(Interrupt_2,Enable);
    20ca:	82 e0       	ldi	r24, 0x02	; 2
    20cc:	64 e0       	ldi	r22, 0x04	; 4
    20ce:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
	}
}
    20d2:	cf 91       	pop	r28
    20d4:	df 91       	pop	r29
    20d6:	ff 91       	pop	r31
    20d8:	ef 91       	pop	r30
    20da:	bf 91       	pop	r27
    20dc:	af 91       	pop	r26
    20de:	9f 91       	pop	r25
    20e0:	8f 91       	pop	r24
    20e2:	7f 91       	pop	r23
    20e4:	6f 91       	pop	r22
    20e6:	5f 91       	pop	r21
    20e8:	4f 91       	pop	r20
    20ea:	3f 91       	pop	r19
    20ec:	2f 91       	pop	r18
    20ee:	0f 90       	pop	r0
    20f0:	0f be       	out	0x3f, r0	; 63
    20f2:	0f 90       	pop	r0
    20f4:	1f 90       	pop	r1
    20f6:	18 95       	reti

000020f8 <DIO_VidSet_Pin_Direction>:
/*------------------------------- INCLUDE -------------------------------*/
#include "DIO_Interface.h"
/*------------------------- OPTIONS FOR SINGLE BIN -------------------------*/
void DIO_VidSet_Pin_Direction(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Direction)		/*SET PIN Direction*/
{
    20f8:	df 93       	push	r29
    20fa:	cf 93       	push	r28
    20fc:	cd b7       	in	r28, 0x3d	; 61
    20fe:	de b7       	in	r29, 0x3e	; 62
    2100:	27 97       	sbiw	r28, 0x07	; 7
    2102:	0f b6       	in	r0, 0x3f	; 63
    2104:	f8 94       	cli
    2106:	de bf       	out	0x3e, r29	; 62
    2108:	0f be       	out	0x3f, r0	; 63
    210a:	cd bf       	out	0x3d, r28	; 61
    210c:	89 83       	std	Y+1, r24	; 0x01
    210e:	6a 83       	std	Y+2, r22	; 0x02
    2110:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Direction==INPUT)
    2112:	8b 81       	ldd	r24, Y+3	; 0x03
    2114:	88 23       	and	r24, r24
    2116:	09 f0       	breq	.+2      	; 0x211a <DIO_VidSet_Pin_Direction+0x22>
    2118:	74 c0       	rjmp	.+232    	; 0x2202 <DIO_VidSet_Pin_Direction+0x10a>
	{
		switch(Copy_u8Port)
    211a:	89 81       	ldd	r24, Y+1	; 0x01
    211c:	28 2f       	mov	r18, r24
    211e:	30 e0       	ldi	r19, 0x00	; 0
    2120:	3f 83       	std	Y+7, r19	; 0x07
    2122:	2e 83       	std	Y+6, r18	; 0x06
    2124:	8e 81       	ldd	r24, Y+6	; 0x06
    2126:	9f 81       	ldd	r25, Y+7	; 0x07
    2128:	81 30       	cpi	r24, 0x01	; 1
    212a:	91 05       	cpc	r25, r1
    212c:	59 f1       	breq	.+86     	; 0x2184 <DIO_VidSet_Pin_Direction+0x8c>
    212e:	2e 81       	ldd	r18, Y+6	; 0x06
    2130:	3f 81       	ldd	r19, Y+7	; 0x07
    2132:	22 30       	cpi	r18, 0x02	; 2
    2134:	31 05       	cpc	r19, r1
    2136:	2c f4       	brge	.+10     	; 0x2142 <DIO_VidSet_Pin_Direction+0x4a>
    2138:	8e 81       	ldd	r24, Y+6	; 0x06
    213a:	9f 81       	ldd	r25, Y+7	; 0x07
    213c:	00 97       	sbiw	r24, 0x00	; 0
    213e:	69 f0       	breq	.+26     	; 0x215a <DIO_VidSet_Pin_Direction+0x62>
    2140:	d2 c0       	rjmp	.+420    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
    2142:	2e 81       	ldd	r18, Y+6	; 0x06
    2144:	3f 81       	ldd	r19, Y+7	; 0x07
    2146:	22 30       	cpi	r18, 0x02	; 2
    2148:	31 05       	cpc	r19, r1
    214a:	89 f1       	breq	.+98     	; 0x21ae <DIO_VidSet_Pin_Direction+0xb6>
    214c:	8e 81       	ldd	r24, Y+6	; 0x06
    214e:	9f 81       	ldd	r25, Y+7	; 0x07
    2150:	83 30       	cpi	r24, 0x03	; 3
    2152:	91 05       	cpc	r25, r1
    2154:	09 f4       	brne	.+2      	; 0x2158 <DIO_VidSet_Pin_Direction+0x60>
    2156:	40 c0       	rjmp	.+128    	; 0x21d8 <DIO_VidSet_Pin_Direction+0xe0>
    2158:	c6 c0       	rjmp	.+396    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
		{
			case(Port_A):Clear_Bit(DDRA,Copy_u8Pin);break;
    215a:	aa e3       	ldi	r26, 0x3A	; 58
    215c:	b0 e0       	ldi	r27, 0x00	; 0
    215e:	ea e3       	ldi	r30, 0x3A	; 58
    2160:	f0 e0       	ldi	r31, 0x00	; 0
    2162:	80 81       	ld	r24, Z
    2164:	48 2f       	mov	r20, r24
    2166:	8a 81       	ldd	r24, Y+2	; 0x02
    2168:	28 2f       	mov	r18, r24
    216a:	30 e0       	ldi	r19, 0x00	; 0
    216c:	81 e0       	ldi	r24, 0x01	; 1
    216e:	90 e0       	ldi	r25, 0x00	; 0
    2170:	02 2e       	mov	r0, r18
    2172:	02 c0       	rjmp	.+4      	; 0x2178 <DIO_VidSet_Pin_Direction+0x80>
    2174:	88 0f       	add	r24, r24
    2176:	99 1f       	adc	r25, r25
    2178:	0a 94       	dec	r0
    217a:	e2 f7       	brpl	.-8      	; 0x2174 <DIO_VidSet_Pin_Direction+0x7c>
    217c:	80 95       	com	r24
    217e:	84 23       	and	r24, r20
    2180:	8c 93       	st	X, r24
    2182:	b1 c0       	rjmp	.+354    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
			case(Port_B):Clear_Bit(DDRB,Copy_u8Pin);break;
    2184:	a7 e3       	ldi	r26, 0x37	; 55
    2186:	b0 e0       	ldi	r27, 0x00	; 0
    2188:	e7 e3       	ldi	r30, 0x37	; 55
    218a:	f0 e0       	ldi	r31, 0x00	; 0
    218c:	80 81       	ld	r24, Z
    218e:	48 2f       	mov	r20, r24
    2190:	8a 81       	ldd	r24, Y+2	; 0x02
    2192:	28 2f       	mov	r18, r24
    2194:	30 e0       	ldi	r19, 0x00	; 0
    2196:	81 e0       	ldi	r24, 0x01	; 1
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	02 2e       	mov	r0, r18
    219c:	02 c0       	rjmp	.+4      	; 0x21a2 <DIO_VidSet_Pin_Direction+0xaa>
    219e:	88 0f       	add	r24, r24
    21a0:	99 1f       	adc	r25, r25
    21a2:	0a 94       	dec	r0
    21a4:	e2 f7       	brpl	.-8      	; 0x219e <DIO_VidSet_Pin_Direction+0xa6>
    21a6:	80 95       	com	r24
    21a8:	84 23       	and	r24, r20
    21aa:	8c 93       	st	X, r24
    21ac:	9c c0       	rjmp	.+312    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
			case(Port_C):Clear_Bit(DDRC,Copy_u8Pin);break;
    21ae:	a4 e3       	ldi	r26, 0x34	; 52
    21b0:	b0 e0       	ldi	r27, 0x00	; 0
    21b2:	e4 e3       	ldi	r30, 0x34	; 52
    21b4:	f0 e0       	ldi	r31, 0x00	; 0
    21b6:	80 81       	ld	r24, Z
    21b8:	48 2f       	mov	r20, r24
    21ba:	8a 81       	ldd	r24, Y+2	; 0x02
    21bc:	28 2f       	mov	r18, r24
    21be:	30 e0       	ldi	r19, 0x00	; 0
    21c0:	81 e0       	ldi	r24, 0x01	; 1
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	02 2e       	mov	r0, r18
    21c6:	02 c0       	rjmp	.+4      	; 0x21cc <DIO_VidSet_Pin_Direction+0xd4>
    21c8:	88 0f       	add	r24, r24
    21ca:	99 1f       	adc	r25, r25
    21cc:	0a 94       	dec	r0
    21ce:	e2 f7       	brpl	.-8      	; 0x21c8 <DIO_VidSet_Pin_Direction+0xd0>
    21d0:	80 95       	com	r24
    21d2:	84 23       	and	r24, r20
    21d4:	8c 93       	st	X, r24
    21d6:	87 c0       	rjmp	.+270    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
			case(Port_D):Clear_Bit(DDRD,Copy_u8Pin);break;
    21d8:	a1 e3       	ldi	r26, 0x31	; 49
    21da:	b0 e0       	ldi	r27, 0x00	; 0
    21dc:	e1 e3       	ldi	r30, 0x31	; 49
    21de:	f0 e0       	ldi	r31, 0x00	; 0
    21e0:	80 81       	ld	r24, Z
    21e2:	48 2f       	mov	r20, r24
    21e4:	8a 81       	ldd	r24, Y+2	; 0x02
    21e6:	28 2f       	mov	r18, r24
    21e8:	30 e0       	ldi	r19, 0x00	; 0
    21ea:	81 e0       	ldi	r24, 0x01	; 1
    21ec:	90 e0       	ldi	r25, 0x00	; 0
    21ee:	02 2e       	mov	r0, r18
    21f0:	02 c0       	rjmp	.+4      	; 0x21f6 <DIO_VidSet_Pin_Direction+0xfe>
    21f2:	88 0f       	add	r24, r24
    21f4:	99 1f       	adc	r25, r25
    21f6:	0a 94       	dec	r0
    21f8:	e2 f7       	brpl	.-8      	; 0x21f2 <DIO_VidSet_Pin_Direction+0xfa>
    21fa:	80 95       	com	r24
    21fc:	84 23       	and	r24, r20
    21fe:	8c 93       	st	X, r24
    2200:	72 c0       	rjmp	.+228    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
		}
	}
	else if(Copy_u8Direction==OUTPUT)
    2202:	8b 81       	ldd	r24, Y+3	; 0x03
    2204:	81 30       	cpi	r24, 0x01	; 1
    2206:	09 f0       	breq	.+2      	; 0x220a <DIO_VidSet_Pin_Direction+0x112>
    2208:	6e c0       	rjmp	.+220    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
	{
		switch(Copy_u8Port)
    220a:	89 81       	ldd	r24, Y+1	; 0x01
    220c:	28 2f       	mov	r18, r24
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	3d 83       	std	Y+5, r19	; 0x05
    2212:	2c 83       	std	Y+4, r18	; 0x04
    2214:	8c 81       	ldd	r24, Y+4	; 0x04
    2216:	9d 81       	ldd	r25, Y+5	; 0x05
    2218:	81 30       	cpi	r24, 0x01	; 1
    221a:	91 05       	cpc	r25, r1
    221c:	49 f1       	breq	.+82     	; 0x2270 <DIO_VidSet_Pin_Direction+0x178>
    221e:	2c 81       	ldd	r18, Y+4	; 0x04
    2220:	3d 81       	ldd	r19, Y+5	; 0x05
    2222:	22 30       	cpi	r18, 0x02	; 2
    2224:	31 05       	cpc	r19, r1
    2226:	2c f4       	brge	.+10     	; 0x2232 <DIO_VidSet_Pin_Direction+0x13a>
    2228:	8c 81       	ldd	r24, Y+4	; 0x04
    222a:	9d 81       	ldd	r25, Y+5	; 0x05
    222c:	00 97       	sbiw	r24, 0x00	; 0
    222e:	61 f0       	breq	.+24     	; 0x2248 <DIO_VidSet_Pin_Direction+0x150>
    2230:	5a c0       	rjmp	.+180    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
    2232:	2c 81       	ldd	r18, Y+4	; 0x04
    2234:	3d 81       	ldd	r19, Y+5	; 0x05
    2236:	22 30       	cpi	r18, 0x02	; 2
    2238:	31 05       	cpc	r19, r1
    223a:	71 f1       	breq	.+92     	; 0x2298 <DIO_VidSet_Pin_Direction+0x1a0>
    223c:	8c 81       	ldd	r24, Y+4	; 0x04
    223e:	9d 81       	ldd	r25, Y+5	; 0x05
    2240:	83 30       	cpi	r24, 0x03	; 3
    2242:	91 05       	cpc	r25, r1
    2244:	e9 f1       	breq	.+122    	; 0x22c0 <DIO_VidSet_Pin_Direction+0x1c8>
    2246:	4f c0       	rjmp	.+158    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
		{
			case(Port_A):Set_Bit(DDRA,Copy_u8Pin);break;
    2248:	aa e3       	ldi	r26, 0x3A	; 58
    224a:	b0 e0       	ldi	r27, 0x00	; 0
    224c:	ea e3       	ldi	r30, 0x3A	; 58
    224e:	f0 e0       	ldi	r31, 0x00	; 0
    2250:	80 81       	ld	r24, Z
    2252:	48 2f       	mov	r20, r24
    2254:	8a 81       	ldd	r24, Y+2	; 0x02
    2256:	28 2f       	mov	r18, r24
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	81 e0       	ldi	r24, 0x01	; 1
    225c:	90 e0       	ldi	r25, 0x00	; 0
    225e:	02 2e       	mov	r0, r18
    2260:	02 c0       	rjmp	.+4      	; 0x2266 <DIO_VidSet_Pin_Direction+0x16e>
    2262:	88 0f       	add	r24, r24
    2264:	99 1f       	adc	r25, r25
    2266:	0a 94       	dec	r0
    2268:	e2 f7       	brpl	.-8      	; 0x2262 <DIO_VidSet_Pin_Direction+0x16a>
    226a:	84 2b       	or	r24, r20
    226c:	8c 93       	st	X, r24
    226e:	3b c0       	rjmp	.+118    	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
			case(Port_B):Set_Bit(DDRB,Copy_u8Pin);break;
    2270:	a7 e3       	ldi	r26, 0x37	; 55
    2272:	b0 e0       	ldi	r27, 0x00	; 0
    2274:	e7 e3       	ldi	r30, 0x37	; 55
    2276:	f0 e0       	ldi	r31, 0x00	; 0
    2278:	80 81       	ld	r24, Z
    227a:	48 2f       	mov	r20, r24
    227c:	8a 81       	ldd	r24, Y+2	; 0x02
    227e:	28 2f       	mov	r18, r24
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	81 e0       	ldi	r24, 0x01	; 1
    2284:	90 e0       	ldi	r25, 0x00	; 0
    2286:	02 2e       	mov	r0, r18
    2288:	02 c0       	rjmp	.+4      	; 0x228e <DIO_VidSet_Pin_Direction+0x196>
    228a:	88 0f       	add	r24, r24
    228c:	99 1f       	adc	r25, r25
    228e:	0a 94       	dec	r0
    2290:	e2 f7       	brpl	.-8      	; 0x228a <DIO_VidSet_Pin_Direction+0x192>
    2292:	84 2b       	or	r24, r20
    2294:	8c 93       	st	X, r24
    2296:	27 c0       	rjmp	.+78     	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
			case(Port_C):Set_Bit(DDRC,Copy_u8Pin);break;
    2298:	a4 e3       	ldi	r26, 0x34	; 52
    229a:	b0 e0       	ldi	r27, 0x00	; 0
    229c:	e4 e3       	ldi	r30, 0x34	; 52
    229e:	f0 e0       	ldi	r31, 0x00	; 0
    22a0:	80 81       	ld	r24, Z
    22a2:	48 2f       	mov	r20, r24
    22a4:	8a 81       	ldd	r24, Y+2	; 0x02
    22a6:	28 2f       	mov	r18, r24
    22a8:	30 e0       	ldi	r19, 0x00	; 0
    22aa:	81 e0       	ldi	r24, 0x01	; 1
    22ac:	90 e0       	ldi	r25, 0x00	; 0
    22ae:	02 2e       	mov	r0, r18
    22b0:	02 c0       	rjmp	.+4      	; 0x22b6 <DIO_VidSet_Pin_Direction+0x1be>
    22b2:	88 0f       	add	r24, r24
    22b4:	99 1f       	adc	r25, r25
    22b6:	0a 94       	dec	r0
    22b8:	e2 f7       	brpl	.-8      	; 0x22b2 <DIO_VidSet_Pin_Direction+0x1ba>
    22ba:	84 2b       	or	r24, r20
    22bc:	8c 93       	st	X, r24
    22be:	13 c0       	rjmp	.+38     	; 0x22e6 <DIO_VidSet_Pin_Direction+0x1ee>
			case(Port_D):Set_Bit(DDRD,Copy_u8Pin);break;
    22c0:	a1 e3       	ldi	r26, 0x31	; 49
    22c2:	b0 e0       	ldi	r27, 0x00	; 0
    22c4:	e1 e3       	ldi	r30, 0x31	; 49
    22c6:	f0 e0       	ldi	r31, 0x00	; 0
    22c8:	80 81       	ld	r24, Z
    22ca:	48 2f       	mov	r20, r24
    22cc:	8a 81       	ldd	r24, Y+2	; 0x02
    22ce:	28 2f       	mov	r18, r24
    22d0:	30 e0       	ldi	r19, 0x00	; 0
    22d2:	81 e0       	ldi	r24, 0x01	; 1
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	02 2e       	mov	r0, r18
    22d8:	02 c0       	rjmp	.+4      	; 0x22de <DIO_VidSet_Pin_Direction+0x1e6>
    22da:	88 0f       	add	r24, r24
    22dc:	99 1f       	adc	r25, r25
    22de:	0a 94       	dec	r0
    22e0:	e2 f7       	brpl	.-8      	; 0x22da <DIO_VidSet_Pin_Direction+0x1e2>
    22e2:	84 2b       	or	r24, r20
    22e4:	8c 93       	st	X, r24
		}
	}
}
    22e6:	27 96       	adiw	r28, 0x07	; 7
    22e8:	0f b6       	in	r0, 0x3f	; 63
    22ea:	f8 94       	cli
    22ec:	de bf       	out	0x3e, r29	; 62
    22ee:	0f be       	out	0x3f, r0	; 63
    22f0:	cd bf       	out	0x3d, r28	; 61
    22f2:	cf 91       	pop	r28
    22f4:	df 91       	pop	r29
    22f6:	08 95       	ret

000022f8 <DIO_VidInternal_Pin_Bull_Up>:
/*---------------------------------------------------------------------------*/
void DIO_VidInternal_Pin_Bull_Up(u8 Copy_u8Port,u8 Copy_u8Pin)						/*INTERNAL PIN PULL UP*/
{
    22f8:	df 93       	push	r29
    22fa:	cf 93       	push	r28
    22fc:	00 d0       	rcall	.+0      	; 0x22fe <DIO_VidInternal_Pin_Bull_Up+0x6>
    22fe:	00 d0       	rcall	.+0      	; 0x2300 <DIO_VidInternal_Pin_Bull_Up+0x8>
    2300:	00 d0       	rcall	.+0      	; 0x2302 <DIO_VidInternal_Pin_Bull_Up+0xa>
    2302:	cd b7       	in	r28, 0x3d	; 61
    2304:	de b7       	in	r29, 0x3e	; 62
    2306:	89 83       	std	Y+1, r24	; 0x01
    2308:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)//Set As Output
    230a:	89 81       	ldd	r24, Y+1	; 0x01
    230c:	28 2f       	mov	r18, r24
    230e:	30 e0       	ldi	r19, 0x00	; 0
    2310:	3e 83       	std	Y+6, r19	; 0x06
    2312:	2d 83       	std	Y+5, r18	; 0x05
    2314:	8d 81       	ldd	r24, Y+5	; 0x05
    2316:	9e 81       	ldd	r25, Y+6	; 0x06
    2318:	81 30       	cpi	r24, 0x01	; 1
    231a:	91 05       	cpc	r25, r1
    231c:	49 f1       	breq	.+82     	; 0x2370 <DIO_VidInternal_Pin_Bull_Up+0x78>
    231e:	2d 81       	ldd	r18, Y+5	; 0x05
    2320:	3e 81       	ldd	r19, Y+6	; 0x06
    2322:	22 30       	cpi	r18, 0x02	; 2
    2324:	31 05       	cpc	r19, r1
    2326:	2c f4       	brge	.+10     	; 0x2332 <DIO_VidInternal_Pin_Bull_Up+0x3a>
    2328:	8d 81       	ldd	r24, Y+5	; 0x05
    232a:	9e 81       	ldd	r25, Y+6	; 0x06
    232c:	00 97       	sbiw	r24, 0x00	; 0
    232e:	61 f0       	breq	.+24     	; 0x2348 <DIO_VidInternal_Pin_Bull_Up+0x50>
    2330:	59 c0       	rjmp	.+178    	; 0x23e4 <DIO_VidInternal_Pin_Bull_Up+0xec>
    2332:	2d 81       	ldd	r18, Y+5	; 0x05
    2334:	3e 81       	ldd	r19, Y+6	; 0x06
    2336:	22 30       	cpi	r18, 0x02	; 2
    2338:	31 05       	cpc	r19, r1
    233a:	71 f1       	breq	.+92     	; 0x2398 <DIO_VidInternal_Pin_Bull_Up+0xa0>
    233c:	8d 81       	ldd	r24, Y+5	; 0x05
    233e:	9e 81       	ldd	r25, Y+6	; 0x06
    2340:	83 30       	cpi	r24, 0x03	; 3
    2342:	91 05       	cpc	r25, r1
    2344:	e9 f1       	breq	.+122    	; 0x23c0 <DIO_VidInternal_Pin_Bull_Up+0xc8>
    2346:	4e c0       	rjmp	.+156    	; 0x23e4 <DIO_VidInternal_Pin_Bull_Up+0xec>
	{
		case(Port_A):Set_Bit(DDRA,Copy_u8Pin);break;
    2348:	aa e3       	ldi	r26, 0x3A	; 58
    234a:	b0 e0       	ldi	r27, 0x00	; 0
    234c:	ea e3       	ldi	r30, 0x3A	; 58
    234e:	f0 e0       	ldi	r31, 0x00	; 0
    2350:	80 81       	ld	r24, Z
    2352:	48 2f       	mov	r20, r24
    2354:	8a 81       	ldd	r24, Y+2	; 0x02
    2356:	28 2f       	mov	r18, r24
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	81 e0       	ldi	r24, 0x01	; 1
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	02 2e       	mov	r0, r18
    2360:	02 c0       	rjmp	.+4      	; 0x2366 <DIO_VidInternal_Pin_Bull_Up+0x6e>
    2362:	88 0f       	add	r24, r24
    2364:	99 1f       	adc	r25, r25
    2366:	0a 94       	dec	r0
    2368:	e2 f7       	brpl	.-8      	; 0x2362 <DIO_VidInternal_Pin_Bull_Up+0x6a>
    236a:	84 2b       	or	r24, r20
    236c:	8c 93       	st	X, r24
    236e:	3a c0       	rjmp	.+116    	; 0x23e4 <DIO_VidInternal_Pin_Bull_Up+0xec>
		case(Port_B):Set_Bit(DDRB,Copy_u8Pin);break;
    2370:	a7 e3       	ldi	r26, 0x37	; 55
    2372:	b0 e0       	ldi	r27, 0x00	; 0
    2374:	e7 e3       	ldi	r30, 0x37	; 55
    2376:	f0 e0       	ldi	r31, 0x00	; 0
    2378:	80 81       	ld	r24, Z
    237a:	48 2f       	mov	r20, r24
    237c:	8a 81       	ldd	r24, Y+2	; 0x02
    237e:	28 2f       	mov	r18, r24
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	81 e0       	ldi	r24, 0x01	; 1
    2384:	90 e0       	ldi	r25, 0x00	; 0
    2386:	02 2e       	mov	r0, r18
    2388:	02 c0       	rjmp	.+4      	; 0x238e <DIO_VidInternal_Pin_Bull_Up+0x96>
    238a:	88 0f       	add	r24, r24
    238c:	99 1f       	adc	r25, r25
    238e:	0a 94       	dec	r0
    2390:	e2 f7       	brpl	.-8      	; 0x238a <DIO_VidInternal_Pin_Bull_Up+0x92>
    2392:	84 2b       	or	r24, r20
    2394:	8c 93       	st	X, r24
    2396:	26 c0       	rjmp	.+76     	; 0x23e4 <DIO_VidInternal_Pin_Bull_Up+0xec>
		case(Port_C):Set_Bit(DDRC,Copy_u8Pin);break;
    2398:	a4 e3       	ldi	r26, 0x34	; 52
    239a:	b0 e0       	ldi	r27, 0x00	; 0
    239c:	e4 e3       	ldi	r30, 0x34	; 52
    239e:	f0 e0       	ldi	r31, 0x00	; 0
    23a0:	80 81       	ld	r24, Z
    23a2:	48 2f       	mov	r20, r24
    23a4:	8a 81       	ldd	r24, Y+2	; 0x02
    23a6:	28 2f       	mov	r18, r24
    23a8:	30 e0       	ldi	r19, 0x00	; 0
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	90 e0       	ldi	r25, 0x00	; 0
    23ae:	02 2e       	mov	r0, r18
    23b0:	02 c0       	rjmp	.+4      	; 0x23b6 <DIO_VidInternal_Pin_Bull_Up+0xbe>
    23b2:	88 0f       	add	r24, r24
    23b4:	99 1f       	adc	r25, r25
    23b6:	0a 94       	dec	r0
    23b8:	e2 f7       	brpl	.-8      	; 0x23b2 <DIO_VidInternal_Pin_Bull_Up+0xba>
    23ba:	84 2b       	or	r24, r20
    23bc:	8c 93       	st	X, r24
    23be:	12 c0       	rjmp	.+36     	; 0x23e4 <DIO_VidInternal_Pin_Bull_Up+0xec>
		case(Port_D):Set_Bit(DDRD,Copy_u8Pin);break;
    23c0:	a1 e3       	ldi	r26, 0x31	; 49
    23c2:	b0 e0       	ldi	r27, 0x00	; 0
    23c4:	e1 e3       	ldi	r30, 0x31	; 49
    23c6:	f0 e0       	ldi	r31, 0x00	; 0
    23c8:	80 81       	ld	r24, Z
    23ca:	48 2f       	mov	r20, r24
    23cc:	8a 81       	ldd	r24, Y+2	; 0x02
    23ce:	28 2f       	mov	r18, r24
    23d0:	30 e0       	ldi	r19, 0x00	; 0
    23d2:	81 e0       	ldi	r24, 0x01	; 1
    23d4:	90 e0       	ldi	r25, 0x00	; 0
    23d6:	02 c0       	rjmp	.+4      	; 0x23dc <DIO_VidInternal_Pin_Bull_Up+0xe4>
    23d8:	88 0f       	add	r24, r24
    23da:	99 1f       	adc	r25, r25
    23dc:	2a 95       	dec	r18
    23de:	e2 f7       	brpl	.-8      	; 0x23d8 <DIO_VidInternal_Pin_Bull_Up+0xe0>
    23e0:	84 2b       	or	r24, r20
    23e2:	8c 93       	st	X, r24
	}
	switch(Copy_u8Port)//Activate Internal Bull Up
    23e4:	89 81       	ldd	r24, Y+1	; 0x01
    23e6:	28 2f       	mov	r18, r24
    23e8:	30 e0       	ldi	r19, 0x00	; 0
    23ea:	3c 83       	std	Y+4, r19	; 0x04
    23ec:	2b 83       	std	Y+3, r18	; 0x03
    23ee:	8b 81       	ldd	r24, Y+3	; 0x03
    23f0:	9c 81       	ldd	r25, Y+4	; 0x04
    23f2:	81 30       	cpi	r24, 0x01	; 1
    23f4:	91 05       	cpc	r25, r1
    23f6:	49 f1       	breq	.+82     	; 0x244a <DIO_VidInternal_Pin_Bull_Up+0x152>
    23f8:	2b 81       	ldd	r18, Y+3	; 0x03
    23fa:	3c 81       	ldd	r19, Y+4	; 0x04
    23fc:	22 30       	cpi	r18, 0x02	; 2
    23fe:	31 05       	cpc	r19, r1
    2400:	2c f4       	brge	.+10     	; 0x240c <DIO_VidInternal_Pin_Bull_Up+0x114>
    2402:	8b 81       	ldd	r24, Y+3	; 0x03
    2404:	9c 81       	ldd	r25, Y+4	; 0x04
    2406:	00 97       	sbiw	r24, 0x00	; 0
    2408:	61 f0       	breq	.+24     	; 0x2422 <DIO_VidInternal_Pin_Bull_Up+0x12a>
    240a:	5a c0       	rjmp	.+180    	; 0x24c0 <DIO_VidInternal_Pin_Bull_Up+0x1c8>
    240c:	2b 81       	ldd	r18, Y+3	; 0x03
    240e:	3c 81       	ldd	r19, Y+4	; 0x04
    2410:	22 30       	cpi	r18, 0x02	; 2
    2412:	31 05       	cpc	r19, r1
    2414:	71 f1       	breq	.+92     	; 0x2472 <DIO_VidInternal_Pin_Bull_Up+0x17a>
    2416:	8b 81       	ldd	r24, Y+3	; 0x03
    2418:	9c 81       	ldd	r25, Y+4	; 0x04
    241a:	83 30       	cpi	r24, 0x03	; 3
    241c:	91 05       	cpc	r25, r1
    241e:	e9 f1       	breq	.+122    	; 0x249a <DIO_VidInternal_Pin_Bull_Up+0x1a2>
    2420:	4f c0       	rjmp	.+158    	; 0x24c0 <DIO_VidInternal_Pin_Bull_Up+0x1c8>
	{
		case(Port_A):Set_Bit(PORTA,Copy_u8Pin);break;
    2422:	ab e3       	ldi	r26, 0x3B	; 59
    2424:	b0 e0       	ldi	r27, 0x00	; 0
    2426:	eb e3       	ldi	r30, 0x3B	; 59
    2428:	f0 e0       	ldi	r31, 0x00	; 0
    242a:	80 81       	ld	r24, Z
    242c:	48 2f       	mov	r20, r24
    242e:	8a 81       	ldd	r24, Y+2	; 0x02
    2430:	28 2f       	mov	r18, r24
    2432:	30 e0       	ldi	r19, 0x00	; 0
    2434:	81 e0       	ldi	r24, 0x01	; 1
    2436:	90 e0       	ldi	r25, 0x00	; 0
    2438:	02 2e       	mov	r0, r18
    243a:	02 c0       	rjmp	.+4      	; 0x2440 <DIO_VidInternal_Pin_Bull_Up+0x148>
    243c:	88 0f       	add	r24, r24
    243e:	99 1f       	adc	r25, r25
    2440:	0a 94       	dec	r0
    2442:	e2 f7       	brpl	.-8      	; 0x243c <DIO_VidInternal_Pin_Bull_Up+0x144>
    2444:	84 2b       	or	r24, r20
    2446:	8c 93       	st	X, r24
    2448:	3b c0       	rjmp	.+118    	; 0x24c0 <DIO_VidInternal_Pin_Bull_Up+0x1c8>
		case(Port_B):Set_Bit(PORTB,Copy_u8Pin);break;
    244a:	a8 e3       	ldi	r26, 0x38	; 56
    244c:	b0 e0       	ldi	r27, 0x00	; 0
    244e:	e8 e3       	ldi	r30, 0x38	; 56
    2450:	f0 e0       	ldi	r31, 0x00	; 0
    2452:	80 81       	ld	r24, Z
    2454:	48 2f       	mov	r20, r24
    2456:	8a 81       	ldd	r24, Y+2	; 0x02
    2458:	28 2f       	mov	r18, r24
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	81 e0       	ldi	r24, 0x01	; 1
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	02 2e       	mov	r0, r18
    2462:	02 c0       	rjmp	.+4      	; 0x2468 <DIO_VidInternal_Pin_Bull_Up+0x170>
    2464:	88 0f       	add	r24, r24
    2466:	99 1f       	adc	r25, r25
    2468:	0a 94       	dec	r0
    246a:	e2 f7       	brpl	.-8      	; 0x2464 <DIO_VidInternal_Pin_Bull_Up+0x16c>
    246c:	84 2b       	or	r24, r20
    246e:	8c 93       	st	X, r24
    2470:	27 c0       	rjmp	.+78     	; 0x24c0 <DIO_VidInternal_Pin_Bull_Up+0x1c8>
		case(Port_C):Set_Bit(PORTC,Copy_u8Pin);break;
    2472:	a5 e3       	ldi	r26, 0x35	; 53
    2474:	b0 e0       	ldi	r27, 0x00	; 0
    2476:	e5 e3       	ldi	r30, 0x35	; 53
    2478:	f0 e0       	ldi	r31, 0x00	; 0
    247a:	80 81       	ld	r24, Z
    247c:	48 2f       	mov	r20, r24
    247e:	8a 81       	ldd	r24, Y+2	; 0x02
    2480:	28 2f       	mov	r18, r24
    2482:	30 e0       	ldi	r19, 0x00	; 0
    2484:	81 e0       	ldi	r24, 0x01	; 1
    2486:	90 e0       	ldi	r25, 0x00	; 0
    2488:	02 2e       	mov	r0, r18
    248a:	02 c0       	rjmp	.+4      	; 0x2490 <DIO_VidInternal_Pin_Bull_Up+0x198>
    248c:	88 0f       	add	r24, r24
    248e:	99 1f       	adc	r25, r25
    2490:	0a 94       	dec	r0
    2492:	e2 f7       	brpl	.-8      	; 0x248c <DIO_VidInternal_Pin_Bull_Up+0x194>
    2494:	84 2b       	or	r24, r20
    2496:	8c 93       	st	X, r24
    2498:	13 c0       	rjmp	.+38     	; 0x24c0 <DIO_VidInternal_Pin_Bull_Up+0x1c8>
		case(Port_D):Set_Bit(PORTD,Copy_u8Pin);break;
    249a:	a2 e3       	ldi	r26, 0x32	; 50
    249c:	b0 e0       	ldi	r27, 0x00	; 0
    249e:	e2 e3       	ldi	r30, 0x32	; 50
    24a0:	f0 e0       	ldi	r31, 0x00	; 0
    24a2:	80 81       	ld	r24, Z
    24a4:	48 2f       	mov	r20, r24
    24a6:	8a 81       	ldd	r24, Y+2	; 0x02
    24a8:	28 2f       	mov	r18, r24
    24aa:	30 e0       	ldi	r19, 0x00	; 0
    24ac:	81 e0       	ldi	r24, 0x01	; 1
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	02 2e       	mov	r0, r18
    24b2:	02 c0       	rjmp	.+4      	; 0x24b8 <DIO_VidInternal_Pin_Bull_Up+0x1c0>
    24b4:	88 0f       	add	r24, r24
    24b6:	99 1f       	adc	r25, r25
    24b8:	0a 94       	dec	r0
    24ba:	e2 f7       	brpl	.-8      	; 0x24b4 <DIO_VidInternal_Pin_Bull_Up+0x1bc>
    24bc:	84 2b       	or	r24, r20
    24be:	8c 93       	st	X, r24
	}
}
    24c0:	26 96       	adiw	r28, 0x06	; 6
    24c2:	0f b6       	in	r0, 0x3f	; 63
    24c4:	f8 94       	cli
    24c6:	de bf       	out	0x3e, r29	; 62
    24c8:	0f be       	out	0x3f, r0	; 63
    24ca:	cd bf       	out	0x3d, r28	; 61
    24cc:	cf 91       	pop	r28
    24ce:	df 91       	pop	r29
    24d0:	08 95       	ret

000024d2 <DIO_VidSet_Pin_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidSet_Pin_Value(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)				/*SET PIN Value*/
{
    24d2:	df 93       	push	r29
    24d4:	cf 93       	push	r28
    24d6:	cd b7       	in	r28, 0x3d	; 61
    24d8:	de b7       	in	r29, 0x3e	; 62
    24da:	27 97       	sbiw	r28, 0x07	; 7
    24dc:	0f b6       	in	r0, 0x3f	; 63
    24de:	f8 94       	cli
    24e0:	de bf       	out	0x3e, r29	; 62
    24e2:	0f be       	out	0x3f, r0	; 63
    24e4:	cd bf       	out	0x3d, r28	; 61
    24e6:	89 83       	std	Y+1, r24	; 0x01
    24e8:	6a 83       	std	Y+2, r22	; 0x02
    24ea:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Value==HI)
    24ec:	8b 81       	ldd	r24, Y+3	; 0x03
    24ee:	81 30       	cpi	r24, 0x01	; 1
    24f0:	09 f0       	breq	.+2      	; 0x24f4 <DIO_VidSet_Pin_Value+0x22>
    24f2:	6f c0       	rjmp	.+222    	; 0x25d2 <DIO_VidSet_Pin_Value+0x100>
	{
		switch(Copy_u8Port)
    24f4:	89 81       	ldd	r24, Y+1	; 0x01
    24f6:	28 2f       	mov	r18, r24
    24f8:	30 e0       	ldi	r19, 0x00	; 0
    24fa:	3f 83       	std	Y+7, r19	; 0x07
    24fc:	2e 83       	std	Y+6, r18	; 0x06
    24fe:	8e 81       	ldd	r24, Y+6	; 0x06
    2500:	9f 81       	ldd	r25, Y+7	; 0x07
    2502:	81 30       	cpi	r24, 0x01	; 1
    2504:	91 05       	cpc	r25, r1
    2506:	49 f1       	breq	.+82     	; 0x255a <DIO_VidSet_Pin_Value+0x88>
    2508:	2e 81       	ldd	r18, Y+6	; 0x06
    250a:	3f 81       	ldd	r19, Y+7	; 0x07
    250c:	22 30       	cpi	r18, 0x02	; 2
    250e:	31 05       	cpc	r19, r1
    2510:	2c f4       	brge	.+10     	; 0x251c <DIO_VidSet_Pin_Value+0x4a>
    2512:	8e 81       	ldd	r24, Y+6	; 0x06
    2514:	9f 81       	ldd	r25, Y+7	; 0x07
    2516:	00 97       	sbiw	r24, 0x00	; 0
    2518:	61 f0       	breq	.+24     	; 0x2532 <DIO_VidSet_Pin_Value+0x60>
    251a:	d2 c0       	rjmp	.+420    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
    251c:	2e 81       	ldd	r18, Y+6	; 0x06
    251e:	3f 81       	ldd	r19, Y+7	; 0x07
    2520:	22 30       	cpi	r18, 0x02	; 2
    2522:	31 05       	cpc	r19, r1
    2524:	71 f1       	breq	.+92     	; 0x2582 <DIO_VidSet_Pin_Value+0xb0>
    2526:	8e 81       	ldd	r24, Y+6	; 0x06
    2528:	9f 81       	ldd	r25, Y+7	; 0x07
    252a:	83 30       	cpi	r24, 0x03	; 3
    252c:	91 05       	cpc	r25, r1
    252e:	e9 f1       	breq	.+122    	; 0x25aa <DIO_VidSet_Pin_Value+0xd8>
    2530:	c7 c0       	rjmp	.+398    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
		{
			case(Port_A):Set_Bit(PORTA,Copy_u8Pin);break;
    2532:	ab e3       	ldi	r26, 0x3B	; 59
    2534:	b0 e0       	ldi	r27, 0x00	; 0
    2536:	eb e3       	ldi	r30, 0x3B	; 59
    2538:	f0 e0       	ldi	r31, 0x00	; 0
    253a:	80 81       	ld	r24, Z
    253c:	48 2f       	mov	r20, r24
    253e:	8a 81       	ldd	r24, Y+2	; 0x02
    2540:	28 2f       	mov	r18, r24
    2542:	30 e0       	ldi	r19, 0x00	; 0
    2544:	81 e0       	ldi	r24, 0x01	; 1
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	02 2e       	mov	r0, r18
    254a:	02 c0       	rjmp	.+4      	; 0x2550 <DIO_VidSet_Pin_Value+0x7e>
    254c:	88 0f       	add	r24, r24
    254e:	99 1f       	adc	r25, r25
    2550:	0a 94       	dec	r0
    2552:	e2 f7       	brpl	.-8      	; 0x254c <DIO_VidSet_Pin_Value+0x7a>
    2554:	84 2b       	or	r24, r20
    2556:	8c 93       	st	X, r24
    2558:	b3 c0       	rjmp	.+358    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
			case(Port_B):Set_Bit(PORTB,Copy_u8Pin);break;
    255a:	a8 e3       	ldi	r26, 0x38	; 56
    255c:	b0 e0       	ldi	r27, 0x00	; 0
    255e:	e8 e3       	ldi	r30, 0x38	; 56
    2560:	f0 e0       	ldi	r31, 0x00	; 0
    2562:	80 81       	ld	r24, Z
    2564:	48 2f       	mov	r20, r24
    2566:	8a 81       	ldd	r24, Y+2	; 0x02
    2568:	28 2f       	mov	r18, r24
    256a:	30 e0       	ldi	r19, 0x00	; 0
    256c:	81 e0       	ldi	r24, 0x01	; 1
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	02 2e       	mov	r0, r18
    2572:	02 c0       	rjmp	.+4      	; 0x2578 <DIO_VidSet_Pin_Value+0xa6>
    2574:	88 0f       	add	r24, r24
    2576:	99 1f       	adc	r25, r25
    2578:	0a 94       	dec	r0
    257a:	e2 f7       	brpl	.-8      	; 0x2574 <DIO_VidSet_Pin_Value+0xa2>
    257c:	84 2b       	or	r24, r20
    257e:	8c 93       	st	X, r24
    2580:	9f c0       	rjmp	.+318    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
			case(Port_C):Set_Bit(PORTC,Copy_u8Pin);break;
    2582:	a5 e3       	ldi	r26, 0x35	; 53
    2584:	b0 e0       	ldi	r27, 0x00	; 0
    2586:	e5 e3       	ldi	r30, 0x35	; 53
    2588:	f0 e0       	ldi	r31, 0x00	; 0
    258a:	80 81       	ld	r24, Z
    258c:	48 2f       	mov	r20, r24
    258e:	8a 81       	ldd	r24, Y+2	; 0x02
    2590:	28 2f       	mov	r18, r24
    2592:	30 e0       	ldi	r19, 0x00	; 0
    2594:	81 e0       	ldi	r24, 0x01	; 1
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	02 2e       	mov	r0, r18
    259a:	02 c0       	rjmp	.+4      	; 0x25a0 <DIO_VidSet_Pin_Value+0xce>
    259c:	88 0f       	add	r24, r24
    259e:	99 1f       	adc	r25, r25
    25a0:	0a 94       	dec	r0
    25a2:	e2 f7       	brpl	.-8      	; 0x259c <DIO_VidSet_Pin_Value+0xca>
    25a4:	84 2b       	or	r24, r20
    25a6:	8c 93       	st	X, r24
    25a8:	8b c0       	rjmp	.+278    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
			case(Port_D):Set_Bit(PORTD,Copy_u8Pin);break;
    25aa:	a2 e3       	ldi	r26, 0x32	; 50
    25ac:	b0 e0       	ldi	r27, 0x00	; 0
    25ae:	e2 e3       	ldi	r30, 0x32	; 50
    25b0:	f0 e0       	ldi	r31, 0x00	; 0
    25b2:	80 81       	ld	r24, Z
    25b4:	48 2f       	mov	r20, r24
    25b6:	8a 81       	ldd	r24, Y+2	; 0x02
    25b8:	28 2f       	mov	r18, r24
    25ba:	30 e0       	ldi	r19, 0x00	; 0
    25bc:	81 e0       	ldi	r24, 0x01	; 1
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	02 2e       	mov	r0, r18
    25c2:	02 c0       	rjmp	.+4      	; 0x25c8 <DIO_VidSet_Pin_Value+0xf6>
    25c4:	88 0f       	add	r24, r24
    25c6:	99 1f       	adc	r25, r25
    25c8:	0a 94       	dec	r0
    25ca:	e2 f7       	brpl	.-8      	; 0x25c4 <DIO_VidSet_Pin_Value+0xf2>
    25cc:	84 2b       	or	r24, r20
    25ce:	8c 93       	st	X, r24
    25d0:	77 c0       	rjmp	.+238    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
		}
	}
	else if(Copy_u8Value==LOW)
    25d2:	8b 81       	ldd	r24, Y+3	; 0x03
    25d4:	88 23       	and	r24, r24
    25d6:	09 f0       	breq	.+2      	; 0x25da <DIO_VidSet_Pin_Value+0x108>
    25d8:	73 c0       	rjmp	.+230    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
	{
		switch(Copy_u8Port)
    25da:	89 81       	ldd	r24, Y+1	; 0x01
    25dc:	28 2f       	mov	r18, r24
    25de:	30 e0       	ldi	r19, 0x00	; 0
    25e0:	3d 83       	std	Y+5, r19	; 0x05
    25e2:	2c 83       	std	Y+4, r18	; 0x04
    25e4:	8c 81       	ldd	r24, Y+4	; 0x04
    25e6:	9d 81       	ldd	r25, Y+5	; 0x05
    25e8:	81 30       	cpi	r24, 0x01	; 1
    25ea:	91 05       	cpc	r25, r1
    25ec:	59 f1       	breq	.+86     	; 0x2644 <DIO_VidSet_Pin_Value+0x172>
    25ee:	2c 81       	ldd	r18, Y+4	; 0x04
    25f0:	3d 81       	ldd	r19, Y+5	; 0x05
    25f2:	22 30       	cpi	r18, 0x02	; 2
    25f4:	31 05       	cpc	r19, r1
    25f6:	2c f4       	brge	.+10     	; 0x2602 <DIO_VidSet_Pin_Value+0x130>
    25f8:	8c 81       	ldd	r24, Y+4	; 0x04
    25fa:	9d 81       	ldd	r25, Y+5	; 0x05
    25fc:	00 97       	sbiw	r24, 0x00	; 0
    25fe:	69 f0       	breq	.+26     	; 0x261a <DIO_VidSet_Pin_Value+0x148>
    2600:	5f c0       	rjmp	.+190    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
    2602:	2c 81       	ldd	r18, Y+4	; 0x04
    2604:	3d 81       	ldd	r19, Y+5	; 0x05
    2606:	22 30       	cpi	r18, 0x02	; 2
    2608:	31 05       	cpc	r19, r1
    260a:	89 f1       	breq	.+98     	; 0x266e <DIO_VidSet_Pin_Value+0x19c>
    260c:	8c 81       	ldd	r24, Y+4	; 0x04
    260e:	9d 81       	ldd	r25, Y+5	; 0x05
    2610:	83 30       	cpi	r24, 0x03	; 3
    2612:	91 05       	cpc	r25, r1
    2614:	09 f4       	brne	.+2      	; 0x2618 <DIO_VidSet_Pin_Value+0x146>
    2616:	40 c0       	rjmp	.+128    	; 0x2698 <DIO_VidSet_Pin_Value+0x1c6>
    2618:	53 c0       	rjmp	.+166    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
		{
			case(Port_A):Clear_Bit(PORTA,Copy_u8Pin);break;
    261a:	ab e3       	ldi	r26, 0x3B	; 59
    261c:	b0 e0       	ldi	r27, 0x00	; 0
    261e:	eb e3       	ldi	r30, 0x3B	; 59
    2620:	f0 e0       	ldi	r31, 0x00	; 0
    2622:	80 81       	ld	r24, Z
    2624:	48 2f       	mov	r20, r24
    2626:	8a 81       	ldd	r24, Y+2	; 0x02
    2628:	28 2f       	mov	r18, r24
    262a:	30 e0       	ldi	r19, 0x00	; 0
    262c:	81 e0       	ldi	r24, 0x01	; 1
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	02 2e       	mov	r0, r18
    2632:	02 c0       	rjmp	.+4      	; 0x2638 <DIO_VidSet_Pin_Value+0x166>
    2634:	88 0f       	add	r24, r24
    2636:	99 1f       	adc	r25, r25
    2638:	0a 94       	dec	r0
    263a:	e2 f7       	brpl	.-8      	; 0x2634 <DIO_VidSet_Pin_Value+0x162>
    263c:	80 95       	com	r24
    263e:	84 23       	and	r24, r20
    2640:	8c 93       	st	X, r24
    2642:	3e c0       	rjmp	.+124    	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
			case(Port_B):Clear_Bit(PORTB,Copy_u8Pin);break;
    2644:	a8 e3       	ldi	r26, 0x38	; 56
    2646:	b0 e0       	ldi	r27, 0x00	; 0
    2648:	e8 e3       	ldi	r30, 0x38	; 56
    264a:	f0 e0       	ldi	r31, 0x00	; 0
    264c:	80 81       	ld	r24, Z
    264e:	48 2f       	mov	r20, r24
    2650:	8a 81       	ldd	r24, Y+2	; 0x02
    2652:	28 2f       	mov	r18, r24
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	81 e0       	ldi	r24, 0x01	; 1
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	02 2e       	mov	r0, r18
    265c:	02 c0       	rjmp	.+4      	; 0x2662 <DIO_VidSet_Pin_Value+0x190>
    265e:	88 0f       	add	r24, r24
    2660:	99 1f       	adc	r25, r25
    2662:	0a 94       	dec	r0
    2664:	e2 f7       	brpl	.-8      	; 0x265e <DIO_VidSet_Pin_Value+0x18c>
    2666:	80 95       	com	r24
    2668:	84 23       	and	r24, r20
    266a:	8c 93       	st	X, r24
    266c:	29 c0       	rjmp	.+82     	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
			case(Port_C):Clear_Bit(PORTC,Copy_u8Pin);break;
    266e:	a5 e3       	ldi	r26, 0x35	; 53
    2670:	b0 e0       	ldi	r27, 0x00	; 0
    2672:	e5 e3       	ldi	r30, 0x35	; 53
    2674:	f0 e0       	ldi	r31, 0x00	; 0
    2676:	80 81       	ld	r24, Z
    2678:	48 2f       	mov	r20, r24
    267a:	8a 81       	ldd	r24, Y+2	; 0x02
    267c:	28 2f       	mov	r18, r24
    267e:	30 e0       	ldi	r19, 0x00	; 0
    2680:	81 e0       	ldi	r24, 0x01	; 1
    2682:	90 e0       	ldi	r25, 0x00	; 0
    2684:	02 2e       	mov	r0, r18
    2686:	02 c0       	rjmp	.+4      	; 0x268c <DIO_VidSet_Pin_Value+0x1ba>
    2688:	88 0f       	add	r24, r24
    268a:	99 1f       	adc	r25, r25
    268c:	0a 94       	dec	r0
    268e:	e2 f7       	brpl	.-8      	; 0x2688 <DIO_VidSet_Pin_Value+0x1b6>
    2690:	80 95       	com	r24
    2692:	84 23       	and	r24, r20
    2694:	8c 93       	st	X, r24
    2696:	14 c0       	rjmp	.+40     	; 0x26c0 <DIO_VidSet_Pin_Value+0x1ee>
			case(Port_D):Clear_Bit(PORTD,Copy_u8Pin);break;
    2698:	a2 e3       	ldi	r26, 0x32	; 50
    269a:	b0 e0       	ldi	r27, 0x00	; 0
    269c:	e2 e3       	ldi	r30, 0x32	; 50
    269e:	f0 e0       	ldi	r31, 0x00	; 0
    26a0:	80 81       	ld	r24, Z
    26a2:	48 2f       	mov	r20, r24
    26a4:	8a 81       	ldd	r24, Y+2	; 0x02
    26a6:	28 2f       	mov	r18, r24
    26a8:	30 e0       	ldi	r19, 0x00	; 0
    26aa:	81 e0       	ldi	r24, 0x01	; 1
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	02 2e       	mov	r0, r18
    26b0:	02 c0       	rjmp	.+4      	; 0x26b6 <DIO_VidSet_Pin_Value+0x1e4>
    26b2:	88 0f       	add	r24, r24
    26b4:	99 1f       	adc	r25, r25
    26b6:	0a 94       	dec	r0
    26b8:	e2 f7       	brpl	.-8      	; 0x26b2 <DIO_VidSet_Pin_Value+0x1e0>
    26ba:	80 95       	com	r24
    26bc:	84 23       	and	r24, r20
    26be:	8c 93       	st	X, r24
		}
	}
}
    26c0:	27 96       	adiw	r28, 0x07	; 7
    26c2:	0f b6       	in	r0, 0x3f	; 63
    26c4:	f8 94       	cli
    26c6:	de bf       	out	0x3e, r29	; 62
    26c8:	0f be       	out	0x3f, r0	; 63
    26ca:	cd bf       	out	0x3d, r28	; 61
    26cc:	cf 91       	pop	r28
    26ce:	df 91       	pop	r29
    26d0:	08 95       	ret

000026d2 <DIO_VidToggle_Pin_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidToggle_Pin_Value(u8 Copy_u8Port,u8 Copy_u8Pin)								/*TOGGLE PIN Value*/
{
    26d2:	df 93       	push	r29
    26d4:	cf 93       	push	r28
    26d6:	00 d0       	rcall	.+0      	; 0x26d8 <DIO_VidToggle_Pin_Value+0x6>
    26d8:	00 d0       	rcall	.+0      	; 0x26da <DIO_VidToggle_Pin_Value+0x8>
    26da:	cd b7       	in	r28, 0x3d	; 61
    26dc:	de b7       	in	r29, 0x3e	; 62
    26de:	89 83       	std	Y+1, r24	; 0x01
    26e0:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    26e2:	89 81       	ldd	r24, Y+1	; 0x01
    26e4:	28 2f       	mov	r18, r24
    26e6:	30 e0       	ldi	r19, 0x00	; 0
    26e8:	3c 83       	std	Y+4, r19	; 0x04
    26ea:	2b 83       	std	Y+3, r18	; 0x03
    26ec:	8b 81       	ldd	r24, Y+3	; 0x03
    26ee:	9c 81       	ldd	r25, Y+4	; 0x04
    26f0:	81 30       	cpi	r24, 0x01	; 1
    26f2:	91 05       	cpc	r25, r1
    26f4:	49 f1       	breq	.+82     	; 0x2748 <DIO_VidToggle_Pin_Value+0x76>
    26f6:	2b 81       	ldd	r18, Y+3	; 0x03
    26f8:	3c 81       	ldd	r19, Y+4	; 0x04
    26fa:	22 30       	cpi	r18, 0x02	; 2
    26fc:	31 05       	cpc	r19, r1
    26fe:	2c f4       	brge	.+10     	; 0x270a <DIO_VidToggle_Pin_Value+0x38>
    2700:	8b 81       	ldd	r24, Y+3	; 0x03
    2702:	9c 81       	ldd	r25, Y+4	; 0x04
    2704:	00 97       	sbiw	r24, 0x00	; 0
    2706:	61 f0       	breq	.+24     	; 0x2720 <DIO_VidToggle_Pin_Value+0x4e>
    2708:	5a c0       	rjmp	.+180    	; 0x27be <DIO_VidToggle_Pin_Value+0xec>
    270a:	2b 81       	ldd	r18, Y+3	; 0x03
    270c:	3c 81       	ldd	r19, Y+4	; 0x04
    270e:	22 30       	cpi	r18, 0x02	; 2
    2710:	31 05       	cpc	r19, r1
    2712:	71 f1       	breq	.+92     	; 0x2770 <DIO_VidToggle_Pin_Value+0x9e>
    2714:	8b 81       	ldd	r24, Y+3	; 0x03
    2716:	9c 81       	ldd	r25, Y+4	; 0x04
    2718:	83 30       	cpi	r24, 0x03	; 3
    271a:	91 05       	cpc	r25, r1
    271c:	e9 f1       	breq	.+122    	; 0x2798 <DIO_VidToggle_Pin_Value+0xc6>
    271e:	4f c0       	rjmp	.+158    	; 0x27be <DIO_VidToggle_Pin_Value+0xec>
	{
		case(Port_A):Toggle_Bit(PORTA,Copy_u8Pin);break;
    2720:	ab e3       	ldi	r26, 0x3B	; 59
    2722:	b0 e0       	ldi	r27, 0x00	; 0
    2724:	eb e3       	ldi	r30, 0x3B	; 59
    2726:	f0 e0       	ldi	r31, 0x00	; 0
    2728:	80 81       	ld	r24, Z
    272a:	48 2f       	mov	r20, r24
    272c:	8a 81       	ldd	r24, Y+2	; 0x02
    272e:	28 2f       	mov	r18, r24
    2730:	30 e0       	ldi	r19, 0x00	; 0
    2732:	81 e0       	ldi	r24, 0x01	; 1
    2734:	90 e0       	ldi	r25, 0x00	; 0
    2736:	02 2e       	mov	r0, r18
    2738:	02 c0       	rjmp	.+4      	; 0x273e <DIO_VidToggle_Pin_Value+0x6c>
    273a:	88 0f       	add	r24, r24
    273c:	99 1f       	adc	r25, r25
    273e:	0a 94       	dec	r0
    2740:	e2 f7       	brpl	.-8      	; 0x273a <DIO_VidToggle_Pin_Value+0x68>
    2742:	84 27       	eor	r24, r20
    2744:	8c 93       	st	X, r24
    2746:	3b c0       	rjmp	.+118    	; 0x27be <DIO_VidToggle_Pin_Value+0xec>
		case(Port_B):Toggle_Bit(PORTB,Copy_u8Pin);break;
    2748:	a8 e3       	ldi	r26, 0x38	; 56
    274a:	b0 e0       	ldi	r27, 0x00	; 0
    274c:	e8 e3       	ldi	r30, 0x38	; 56
    274e:	f0 e0       	ldi	r31, 0x00	; 0
    2750:	80 81       	ld	r24, Z
    2752:	48 2f       	mov	r20, r24
    2754:	8a 81       	ldd	r24, Y+2	; 0x02
    2756:	28 2f       	mov	r18, r24
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	81 e0       	ldi	r24, 0x01	; 1
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	02 2e       	mov	r0, r18
    2760:	02 c0       	rjmp	.+4      	; 0x2766 <DIO_VidToggle_Pin_Value+0x94>
    2762:	88 0f       	add	r24, r24
    2764:	99 1f       	adc	r25, r25
    2766:	0a 94       	dec	r0
    2768:	e2 f7       	brpl	.-8      	; 0x2762 <DIO_VidToggle_Pin_Value+0x90>
    276a:	84 27       	eor	r24, r20
    276c:	8c 93       	st	X, r24
    276e:	27 c0       	rjmp	.+78     	; 0x27be <DIO_VidToggle_Pin_Value+0xec>
		case(Port_C):Toggle_Bit(PORTC,Copy_u8Pin);break;
    2770:	a5 e3       	ldi	r26, 0x35	; 53
    2772:	b0 e0       	ldi	r27, 0x00	; 0
    2774:	e5 e3       	ldi	r30, 0x35	; 53
    2776:	f0 e0       	ldi	r31, 0x00	; 0
    2778:	80 81       	ld	r24, Z
    277a:	48 2f       	mov	r20, r24
    277c:	8a 81       	ldd	r24, Y+2	; 0x02
    277e:	28 2f       	mov	r18, r24
    2780:	30 e0       	ldi	r19, 0x00	; 0
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	02 2e       	mov	r0, r18
    2788:	02 c0       	rjmp	.+4      	; 0x278e <DIO_VidToggle_Pin_Value+0xbc>
    278a:	88 0f       	add	r24, r24
    278c:	99 1f       	adc	r25, r25
    278e:	0a 94       	dec	r0
    2790:	e2 f7       	brpl	.-8      	; 0x278a <DIO_VidToggle_Pin_Value+0xb8>
    2792:	84 27       	eor	r24, r20
    2794:	8c 93       	st	X, r24
    2796:	13 c0       	rjmp	.+38     	; 0x27be <DIO_VidToggle_Pin_Value+0xec>
		case(Port_D):Toggle_Bit(PORTD,Copy_u8Pin);break;
    2798:	a2 e3       	ldi	r26, 0x32	; 50
    279a:	b0 e0       	ldi	r27, 0x00	; 0
    279c:	e2 e3       	ldi	r30, 0x32	; 50
    279e:	f0 e0       	ldi	r31, 0x00	; 0
    27a0:	80 81       	ld	r24, Z
    27a2:	48 2f       	mov	r20, r24
    27a4:	8a 81       	ldd	r24, Y+2	; 0x02
    27a6:	28 2f       	mov	r18, r24
    27a8:	30 e0       	ldi	r19, 0x00	; 0
    27aa:	81 e0       	ldi	r24, 0x01	; 1
    27ac:	90 e0       	ldi	r25, 0x00	; 0
    27ae:	02 2e       	mov	r0, r18
    27b0:	02 c0       	rjmp	.+4      	; 0x27b6 <DIO_VidToggle_Pin_Value+0xe4>
    27b2:	88 0f       	add	r24, r24
    27b4:	99 1f       	adc	r25, r25
    27b6:	0a 94       	dec	r0
    27b8:	e2 f7       	brpl	.-8      	; 0x27b2 <DIO_VidToggle_Pin_Value+0xe0>
    27ba:	84 27       	eor	r24, r20
    27bc:	8c 93       	st	X, r24
	}
}
    27be:	0f 90       	pop	r0
    27c0:	0f 90       	pop	r0
    27c2:	0f 90       	pop	r0
    27c4:	0f 90       	pop	r0
    27c6:	cf 91       	pop	r28
    27c8:	df 91       	pop	r29
    27ca:	08 95       	ret

000027cc <DIO_VidGet_Pin_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidGet_Pin_Value(u8 Copy_u8Port,u8 Copy_u8Pin,u8 *Copy_Pu8Pin_Value)			/*Get PIN Value*/
{
    27cc:	df 93       	push	r29
    27ce:	cf 93       	push	r28
    27d0:	00 d0       	rcall	.+0      	; 0x27d2 <DIO_VidGet_Pin_Value+0x6>
    27d2:	00 d0       	rcall	.+0      	; 0x27d4 <DIO_VidGet_Pin_Value+0x8>
    27d4:	00 d0       	rcall	.+0      	; 0x27d6 <DIO_VidGet_Pin_Value+0xa>
    27d6:	cd b7       	in	r28, 0x3d	; 61
    27d8:	de b7       	in	r29, 0x3e	; 62
    27da:	89 83       	std	Y+1, r24	; 0x01
    27dc:	6a 83       	std	Y+2, r22	; 0x02
    27de:	5c 83       	std	Y+4, r21	; 0x04
    27e0:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_u8Port)
    27e2:	89 81       	ldd	r24, Y+1	; 0x01
    27e4:	28 2f       	mov	r18, r24
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	3e 83       	std	Y+6, r19	; 0x06
    27ea:	2d 83       	std	Y+5, r18	; 0x05
    27ec:	4d 81       	ldd	r20, Y+5	; 0x05
    27ee:	5e 81       	ldd	r21, Y+6	; 0x06
    27f0:	41 30       	cpi	r20, 0x01	; 1
    27f2:	51 05       	cpc	r21, r1
    27f4:	59 f1       	breq	.+86     	; 0x284c <DIO_VidGet_Pin_Value+0x80>
    27f6:	8d 81       	ldd	r24, Y+5	; 0x05
    27f8:	9e 81       	ldd	r25, Y+6	; 0x06
    27fa:	82 30       	cpi	r24, 0x02	; 2
    27fc:	91 05       	cpc	r25, r1
    27fe:	34 f4       	brge	.+12     	; 0x280c <DIO_VidGet_Pin_Value+0x40>
    2800:	2d 81       	ldd	r18, Y+5	; 0x05
    2802:	3e 81       	ldd	r19, Y+6	; 0x06
    2804:	21 15       	cp	r18, r1
    2806:	31 05       	cpc	r19, r1
    2808:	69 f0       	breq	.+26     	; 0x2824 <DIO_VidGet_Pin_Value+0x58>
    280a:	5b c0       	rjmp	.+182    	; 0x28c2 <DIO_VidGet_Pin_Value+0xf6>
    280c:	4d 81       	ldd	r20, Y+5	; 0x05
    280e:	5e 81       	ldd	r21, Y+6	; 0x06
    2810:	42 30       	cpi	r20, 0x02	; 2
    2812:	51 05       	cpc	r21, r1
    2814:	79 f1       	breq	.+94     	; 0x2874 <DIO_VidGet_Pin_Value+0xa8>
    2816:	8d 81       	ldd	r24, Y+5	; 0x05
    2818:	9e 81       	ldd	r25, Y+6	; 0x06
    281a:	83 30       	cpi	r24, 0x03	; 3
    281c:	91 05       	cpc	r25, r1
    281e:	09 f4       	brne	.+2      	; 0x2822 <DIO_VidGet_Pin_Value+0x56>
    2820:	3d c0       	rjmp	.+122    	; 0x289c <DIO_VidGet_Pin_Value+0xd0>
    2822:	4f c0       	rjmp	.+158    	; 0x28c2 <DIO_VidGet_Pin_Value+0xf6>
	{
		case(Port_A):*Copy_Pu8Pin_Value = Get_Bit(PINA,Copy_u8Pin);break;
    2824:	e9 e3       	ldi	r30, 0x39	; 57
    2826:	f0 e0       	ldi	r31, 0x00	; 0
    2828:	80 81       	ld	r24, Z
    282a:	28 2f       	mov	r18, r24
    282c:	30 e0       	ldi	r19, 0x00	; 0
    282e:	8a 81       	ldd	r24, Y+2	; 0x02
    2830:	88 2f       	mov	r24, r24
    2832:	90 e0       	ldi	r25, 0x00	; 0
    2834:	a9 01       	movw	r20, r18
    2836:	02 c0       	rjmp	.+4      	; 0x283c <DIO_VidGet_Pin_Value+0x70>
    2838:	55 95       	asr	r21
    283a:	47 95       	ror	r20
    283c:	8a 95       	dec	r24
    283e:	e2 f7       	brpl	.-8      	; 0x2838 <DIO_VidGet_Pin_Value+0x6c>
    2840:	ca 01       	movw	r24, r20
    2842:	81 70       	andi	r24, 0x01	; 1
    2844:	eb 81       	ldd	r30, Y+3	; 0x03
    2846:	fc 81       	ldd	r31, Y+4	; 0x04
    2848:	80 83       	st	Z, r24
    284a:	3b c0       	rjmp	.+118    	; 0x28c2 <DIO_VidGet_Pin_Value+0xf6>
		case(Port_B):*Copy_Pu8Pin_Value = Get_Bit(PINB,Copy_u8Pin);break;
    284c:	e6 e3       	ldi	r30, 0x36	; 54
    284e:	f0 e0       	ldi	r31, 0x00	; 0
    2850:	80 81       	ld	r24, Z
    2852:	28 2f       	mov	r18, r24
    2854:	30 e0       	ldi	r19, 0x00	; 0
    2856:	8a 81       	ldd	r24, Y+2	; 0x02
    2858:	88 2f       	mov	r24, r24
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	a9 01       	movw	r20, r18
    285e:	02 c0       	rjmp	.+4      	; 0x2864 <DIO_VidGet_Pin_Value+0x98>
    2860:	55 95       	asr	r21
    2862:	47 95       	ror	r20
    2864:	8a 95       	dec	r24
    2866:	e2 f7       	brpl	.-8      	; 0x2860 <DIO_VidGet_Pin_Value+0x94>
    2868:	ca 01       	movw	r24, r20
    286a:	81 70       	andi	r24, 0x01	; 1
    286c:	eb 81       	ldd	r30, Y+3	; 0x03
    286e:	fc 81       	ldd	r31, Y+4	; 0x04
    2870:	80 83       	st	Z, r24
    2872:	27 c0       	rjmp	.+78     	; 0x28c2 <DIO_VidGet_Pin_Value+0xf6>
		case(Port_C):*Copy_Pu8Pin_Value = Get_Bit(PINC,Copy_u8Pin);break;
    2874:	e3 e3       	ldi	r30, 0x33	; 51
    2876:	f0 e0       	ldi	r31, 0x00	; 0
    2878:	80 81       	ld	r24, Z
    287a:	28 2f       	mov	r18, r24
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	8a 81       	ldd	r24, Y+2	; 0x02
    2880:	88 2f       	mov	r24, r24
    2882:	90 e0       	ldi	r25, 0x00	; 0
    2884:	a9 01       	movw	r20, r18
    2886:	02 c0       	rjmp	.+4      	; 0x288c <DIO_VidGet_Pin_Value+0xc0>
    2888:	55 95       	asr	r21
    288a:	47 95       	ror	r20
    288c:	8a 95       	dec	r24
    288e:	e2 f7       	brpl	.-8      	; 0x2888 <DIO_VidGet_Pin_Value+0xbc>
    2890:	ca 01       	movw	r24, r20
    2892:	81 70       	andi	r24, 0x01	; 1
    2894:	eb 81       	ldd	r30, Y+3	; 0x03
    2896:	fc 81       	ldd	r31, Y+4	; 0x04
    2898:	80 83       	st	Z, r24
    289a:	13 c0       	rjmp	.+38     	; 0x28c2 <DIO_VidGet_Pin_Value+0xf6>
		case(Port_D):*Copy_Pu8Pin_Value = Get_Bit(PIND,Copy_u8Pin);break;
    289c:	e0 e3       	ldi	r30, 0x30	; 48
    289e:	f0 e0       	ldi	r31, 0x00	; 0
    28a0:	80 81       	ld	r24, Z
    28a2:	28 2f       	mov	r18, r24
    28a4:	30 e0       	ldi	r19, 0x00	; 0
    28a6:	8a 81       	ldd	r24, Y+2	; 0x02
    28a8:	88 2f       	mov	r24, r24
    28aa:	90 e0       	ldi	r25, 0x00	; 0
    28ac:	a9 01       	movw	r20, r18
    28ae:	02 c0       	rjmp	.+4      	; 0x28b4 <DIO_VidGet_Pin_Value+0xe8>
    28b0:	55 95       	asr	r21
    28b2:	47 95       	ror	r20
    28b4:	8a 95       	dec	r24
    28b6:	e2 f7       	brpl	.-8      	; 0x28b0 <DIO_VidGet_Pin_Value+0xe4>
    28b8:	ca 01       	movw	r24, r20
    28ba:	81 70       	andi	r24, 0x01	; 1
    28bc:	eb 81       	ldd	r30, Y+3	; 0x03
    28be:	fc 81       	ldd	r31, Y+4	; 0x04
    28c0:	80 83       	st	Z, r24
	}
}
    28c2:	26 96       	adiw	r28, 0x06	; 6
    28c4:	0f b6       	in	r0, 0x3f	; 63
    28c6:	f8 94       	cli
    28c8:	de bf       	out	0x3e, r29	; 62
    28ca:	0f be       	out	0x3f, r0	; 63
    28cc:	cd bf       	out	0x3d, r28	; 61
    28ce:	cf 91       	pop	r28
    28d0:	df 91       	pop	r29
    28d2:	08 95       	ret

000028d4 <DIO_VidSet_Whole_Port_Direction>:
/*---------------------------------------------------------------------------*/
/*------------------------- OPTIONS FOR SINGLE PORT -------------------------*/
/*---------------------------------------------------------------------------*/
void DIO_VidSet_Whole_Port_Direction(u8 Copy_u8Port,u8 Copy_u8Direction)						/*SET PORT Direction*/
{
    28d4:	df 93       	push	r29
    28d6:	cf 93       	push	r28
    28d8:	cd b7       	in	r28, 0x3d	; 61
    28da:	de b7       	in	r29, 0x3e	; 62
    28dc:	2e 97       	sbiw	r28, 0x0e	; 14
    28de:	0f b6       	in	r0, 0x3f	; 63
    28e0:	f8 94       	cli
    28e2:	de bf       	out	0x3e, r29	; 62
    28e4:	0f be       	out	0x3f, r0	; 63
    28e6:	cd bf       	out	0x3d, r28	; 61
    28e8:	89 83       	std	Y+1, r24	; 0x01
    28ea:	6a 83       	std	Y+2, r22	; 0x02
	if(Copy_u8Direction==INPUT)
    28ec:	8a 81       	ldd	r24, Y+2	; 0x02
    28ee:	88 23       	and	r24, r24
    28f0:	d9 f5       	brne	.+118    	; 0x2968 <DIO_VidSet_Whole_Port_Direction+0x94>
	{
		switch(Copy_u8Port)
    28f2:	89 81       	ldd	r24, Y+1	; 0x01
    28f4:	28 2f       	mov	r18, r24
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	3e 87       	std	Y+14, r19	; 0x0e
    28fa:	2d 87       	std	Y+13, r18	; 0x0d
    28fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    28fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    2900:	81 30       	cpi	r24, 0x01	; 1
    2902:	91 05       	cpc	r25, r1
    2904:	e1 f0       	breq	.+56     	; 0x293e <DIO_VidSet_Whole_Port_Direction+0x6a>
    2906:	2d 85       	ldd	r18, Y+13	; 0x0d
    2908:	3e 85       	ldd	r19, Y+14	; 0x0e
    290a:	22 30       	cpi	r18, 0x02	; 2
    290c:	31 05       	cpc	r19, r1
    290e:	2c f4       	brge	.+10     	; 0x291a <DIO_VidSet_Whole_Port_Direction+0x46>
    2910:	8d 85       	ldd	r24, Y+13	; 0x0d
    2912:	9e 85       	ldd	r25, Y+14	; 0x0e
    2914:	00 97       	sbiw	r24, 0x00	; 0
    2916:	61 f0       	breq	.+24     	; 0x2930 <DIO_VidSet_Whole_Port_Direction+0x5c>
    2918:	69 c0       	rjmp	.+210    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
    291a:	2d 85       	ldd	r18, Y+13	; 0x0d
    291c:	3e 85       	ldd	r19, Y+14	; 0x0e
    291e:	22 30       	cpi	r18, 0x02	; 2
    2920:	31 05       	cpc	r19, r1
    2922:	a1 f0       	breq	.+40     	; 0x294c <DIO_VidSet_Whole_Port_Direction+0x78>
    2924:	8d 85       	ldd	r24, Y+13	; 0x0d
    2926:	9e 85       	ldd	r25, Y+14	; 0x0e
    2928:	83 30       	cpi	r24, 0x03	; 3
    292a:	91 05       	cpc	r25, r1
    292c:	b1 f0       	breq	.+44     	; 0x295a <DIO_VidSet_Whole_Port_Direction+0x86>
    292e:	5e c0       	rjmp	.+188    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
				{
					case(Port_A):DDRA&=0x00;break;
    2930:	ea e3       	ldi	r30, 0x3A	; 58
    2932:	f0 e0       	ldi	r31, 0x00	; 0
    2934:	90 81       	ld	r25, Z
    2936:	ea e3       	ldi	r30, 0x3A	; 58
    2938:	f0 e0       	ldi	r31, 0x00	; 0
    293a:	10 82       	st	Z, r1
    293c:	57 c0       	rjmp	.+174    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
					case(Port_B):DDRB&=0x00;break;
    293e:	e7 e3       	ldi	r30, 0x37	; 55
    2940:	f0 e0       	ldi	r31, 0x00	; 0
    2942:	20 81       	ld	r18, Z
    2944:	e7 e3       	ldi	r30, 0x37	; 55
    2946:	f0 e0       	ldi	r31, 0x00	; 0
    2948:	10 82       	st	Z, r1
    294a:	50 c0       	rjmp	.+160    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
					case(Port_C):DDRC&=0x00;break;
    294c:	e4 e3       	ldi	r30, 0x34	; 52
    294e:	f0 e0       	ldi	r31, 0x00	; 0
    2950:	30 81       	ld	r19, Z
    2952:	e4 e3       	ldi	r30, 0x34	; 52
    2954:	f0 e0       	ldi	r31, 0x00	; 0
    2956:	10 82       	st	Z, r1
    2958:	49 c0       	rjmp	.+146    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
					case(Port_D):DDRD&=0x00;break;
    295a:	e1 e3       	ldi	r30, 0x31	; 49
    295c:	f0 e0       	ldi	r31, 0x00	; 0
    295e:	80 81       	ld	r24, Z
    2960:	e1 e3       	ldi	r30, 0x31	; 49
    2962:	f0 e0       	ldi	r31, 0x00	; 0
    2964:	10 82       	st	Z, r1
    2966:	42 c0       	rjmp	.+132    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
				}
	}
	else if(Copy_u8Direction==OUTPUT)
    2968:	8a 81       	ldd	r24, Y+2	; 0x02
    296a:	81 30       	cpi	r24, 0x01	; 1
    296c:	09 f0       	breq	.+2      	; 0x2970 <DIO_VidSet_Whole_Port_Direction+0x9c>
    296e:	3e c0       	rjmp	.+124    	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
	{
		switch(Copy_u8Port)
    2970:	89 81       	ldd	r24, Y+1	; 0x01
    2972:	28 2f       	mov	r18, r24
    2974:	30 e0       	ldi	r19, 0x00	; 0
    2976:	38 87       	std	Y+8, r19	; 0x08
    2978:	2f 83       	std	Y+7, r18	; 0x07
    297a:	8f 81       	ldd	r24, Y+7	; 0x07
    297c:	98 85       	ldd	r25, Y+8	; 0x08
    297e:	81 30       	cpi	r24, 0x01	; 1
    2980:	91 05       	cpc	r25, r1
    2982:	e9 f0       	breq	.+58     	; 0x29be <DIO_VidSet_Whole_Port_Direction+0xea>
    2984:	2f 81       	ldd	r18, Y+7	; 0x07
    2986:	38 85       	ldd	r19, Y+8	; 0x08
    2988:	22 30       	cpi	r18, 0x02	; 2
    298a:	31 05       	cpc	r19, r1
    298c:	2c f4       	brge	.+10     	; 0x2998 <DIO_VidSet_Whole_Port_Direction+0xc4>
    298e:	8f 81       	ldd	r24, Y+7	; 0x07
    2990:	98 85       	ldd	r25, Y+8	; 0x08
    2992:	00 97       	sbiw	r24, 0x00	; 0
    2994:	61 f0       	breq	.+24     	; 0x29ae <DIO_VidSet_Whole_Port_Direction+0xda>
    2996:	2a c0       	rjmp	.+84     	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
    2998:	2f 81       	ldd	r18, Y+7	; 0x07
    299a:	38 85       	ldd	r19, Y+8	; 0x08
    299c:	22 30       	cpi	r18, 0x02	; 2
    299e:	31 05       	cpc	r19, r1
    29a0:	b1 f0       	breq	.+44     	; 0x29ce <DIO_VidSet_Whole_Port_Direction+0xfa>
    29a2:	8f 81       	ldd	r24, Y+7	; 0x07
    29a4:	98 85       	ldd	r25, Y+8	; 0x08
    29a6:	83 30       	cpi	r24, 0x03	; 3
    29a8:	91 05       	cpc	r25, r1
    29aa:	c9 f0       	breq	.+50     	; 0x29de <DIO_VidSet_Whole_Port_Direction+0x10a>
    29ac:	1f c0       	rjmp	.+62     	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
				{
					case(Port_A):DDRA|=0xff;break;
    29ae:	ea e3       	ldi	r30, 0x3A	; 58
    29b0:	f0 e0       	ldi	r31, 0x00	; 0
    29b2:	90 81       	ld	r25, Z
    29b4:	ea e3       	ldi	r30, 0x3A	; 58
    29b6:	f0 e0       	ldi	r31, 0x00	; 0
    29b8:	8f ef       	ldi	r24, 0xFF	; 255
    29ba:	80 83       	st	Z, r24
    29bc:	17 c0       	rjmp	.+46     	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
					case(Port_B):DDRB|=0xff;break;
    29be:	e7 e3       	ldi	r30, 0x37	; 55
    29c0:	f0 e0       	ldi	r31, 0x00	; 0
    29c2:	20 81       	ld	r18, Z
    29c4:	e7 e3       	ldi	r30, 0x37	; 55
    29c6:	f0 e0       	ldi	r31, 0x00	; 0
    29c8:	8f ef       	ldi	r24, 0xFF	; 255
    29ca:	80 83       	st	Z, r24
    29cc:	0f c0       	rjmp	.+30     	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
					case(Port_C):DDRC|=0xff;break;
    29ce:	e4 e3       	ldi	r30, 0x34	; 52
    29d0:	f0 e0       	ldi	r31, 0x00	; 0
    29d2:	30 81       	ld	r19, Z
    29d4:	e4 e3       	ldi	r30, 0x34	; 52
    29d6:	f0 e0       	ldi	r31, 0x00	; 0
    29d8:	8f ef       	ldi	r24, 0xFF	; 255
    29da:	80 83       	st	Z, r24
    29dc:	07 c0       	rjmp	.+14     	; 0x29ec <DIO_VidSet_Whole_Port_Direction+0x118>
					case(Port_D):DDRD|=0xff;break;
    29de:	e1 e3       	ldi	r30, 0x31	; 49
    29e0:	f0 e0       	ldi	r31, 0x00	; 0
    29e2:	80 81       	ld	r24, Z
    29e4:	e1 e3       	ldi	r30, 0x31	; 49
    29e6:	f0 e0       	ldi	r31, 0x00	; 0
    29e8:	8f ef       	ldi	r24, 0xFF	; 255
    29ea:	80 83       	st	Z, r24
				}
	}
}
    29ec:	2e 96       	adiw	r28, 0x0e	; 14
    29ee:	0f b6       	in	r0, 0x3f	; 63
    29f0:	f8 94       	cli
    29f2:	de bf       	out	0x3e, r29	; 62
    29f4:	0f be       	out	0x3f, r0	; 63
    29f6:	cd bf       	out	0x3d, r28	; 61
    29f8:	cf 91       	pop	r28
    29fa:	df 91       	pop	r29
    29fc:	08 95       	ret

000029fe <DIO_VidSet_Port_Direction>:
/*---------------------------------------------------------------------------*/
void DIO_VidSet_Port_Direction(u8 Copy_u8Port,u8 Copy_u8Value)
{
    29fe:	df 93       	push	r29
    2a00:	cf 93       	push	r28
    2a02:	00 d0       	rcall	.+0      	; 0x2a04 <DIO_VidSet_Port_Direction+0x6>
    2a04:	00 d0       	rcall	.+0      	; 0x2a06 <DIO_VidSet_Port_Direction+0x8>
    2a06:	cd b7       	in	r28, 0x3d	; 61
    2a08:	de b7       	in	r29, 0x3e	; 62
    2a0a:	89 83       	std	Y+1, r24	; 0x01
    2a0c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    2a0e:	89 81       	ldd	r24, Y+1	; 0x01
    2a10:	28 2f       	mov	r18, r24
    2a12:	30 e0       	ldi	r19, 0x00	; 0
    2a14:	3c 83       	std	Y+4, r19	; 0x04
    2a16:	2b 83       	std	Y+3, r18	; 0x03
    2a18:	8b 81       	ldd	r24, Y+3	; 0x03
    2a1a:	9c 81       	ldd	r25, Y+4	; 0x04
    2a1c:	81 30       	cpi	r24, 0x01	; 1
    2a1e:	91 05       	cpc	r25, r1
    2a20:	d1 f0       	breq	.+52     	; 0x2a56 <DIO_VidSet_Port_Direction+0x58>
    2a22:	2b 81       	ldd	r18, Y+3	; 0x03
    2a24:	3c 81       	ldd	r19, Y+4	; 0x04
    2a26:	22 30       	cpi	r18, 0x02	; 2
    2a28:	31 05       	cpc	r19, r1
    2a2a:	2c f4       	brge	.+10     	; 0x2a36 <DIO_VidSet_Port_Direction+0x38>
    2a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    2a2e:	9c 81       	ldd	r25, Y+4	; 0x04
    2a30:	00 97       	sbiw	r24, 0x00	; 0
    2a32:	61 f0       	breq	.+24     	; 0x2a4c <DIO_VidSet_Port_Direction+0x4e>
    2a34:	1e c0       	rjmp	.+60     	; 0x2a72 <DIO_VidSet_Port_Direction+0x74>
    2a36:	2b 81       	ldd	r18, Y+3	; 0x03
    2a38:	3c 81       	ldd	r19, Y+4	; 0x04
    2a3a:	22 30       	cpi	r18, 0x02	; 2
    2a3c:	31 05       	cpc	r19, r1
    2a3e:	81 f0       	breq	.+32     	; 0x2a60 <DIO_VidSet_Port_Direction+0x62>
    2a40:	8b 81       	ldd	r24, Y+3	; 0x03
    2a42:	9c 81       	ldd	r25, Y+4	; 0x04
    2a44:	83 30       	cpi	r24, 0x03	; 3
    2a46:	91 05       	cpc	r25, r1
    2a48:	81 f0       	breq	.+32     	; 0x2a6a <DIO_VidSet_Port_Direction+0x6c>
    2a4a:	13 c0       	rjmp	.+38     	; 0x2a72 <DIO_VidSet_Port_Direction+0x74>
			{
				case(Port_A):DDRA=Copy_u8Value;break;
    2a4c:	ea e3       	ldi	r30, 0x3A	; 58
    2a4e:	f0 e0       	ldi	r31, 0x00	; 0
    2a50:	8a 81       	ldd	r24, Y+2	; 0x02
    2a52:	80 83       	st	Z, r24
    2a54:	0e c0       	rjmp	.+28     	; 0x2a72 <DIO_VidSet_Port_Direction+0x74>
				case(Port_B):DDRB=Copy_u8Value;break;
    2a56:	e7 e3       	ldi	r30, 0x37	; 55
    2a58:	f0 e0       	ldi	r31, 0x00	; 0
    2a5a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a5c:	80 83       	st	Z, r24
    2a5e:	09 c0       	rjmp	.+18     	; 0x2a72 <DIO_VidSet_Port_Direction+0x74>
				case(Port_C):DDRC=Copy_u8Value;break;
    2a60:	e4 e3       	ldi	r30, 0x34	; 52
    2a62:	f0 e0       	ldi	r31, 0x00	; 0
    2a64:	8a 81       	ldd	r24, Y+2	; 0x02
    2a66:	80 83       	st	Z, r24
    2a68:	04 c0       	rjmp	.+8      	; 0x2a72 <DIO_VidSet_Port_Direction+0x74>
				case(Port_D):DDRD=Copy_u8Value;break;
    2a6a:	e1 e3       	ldi	r30, 0x31	; 49
    2a6c:	f0 e0       	ldi	r31, 0x00	; 0
    2a6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2a70:	80 83       	st	Z, r24
			}
}
    2a72:	0f 90       	pop	r0
    2a74:	0f 90       	pop	r0
    2a76:	0f 90       	pop	r0
    2a78:	0f 90       	pop	r0
    2a7a:	cf 91       	pop	r28
    2a7c:	df 91       	pop	r29
    2a7e:	08 95       	ret

00002a80 <DIO_VidInternal_Port_Bull_Up>:
/*---------------------------------------------------------------------------*/
void DIO_VidInternal_Port_Bull_Up(u8 Copy_u8Port)										/*INTERNAL PORT PULL UP*/
{
    2a80:	df 93       	push	r29
    2a82:	cf 93       	push	r28
    2a84:	cd b7       	in	r28, 0x3d	; 61
    2a86:	de b7       	in	r29, 0x3e	; 62
    2a88:	29 97       	sbiw	r28, 0x09	; 9
    2a8a:	0f b6       	in	r0, 0x3f	; 63
    2a8c:	f8 94       	cli
    2a8e:	de bf       	out	0x3e, r29	; 62
    2a90:	0f be       	out	0x3f, r0	; 63
    2a92:	cd bf       	out	0x3d, r28	; 61
    2a94:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Port)
    2a96:	89 81       	ldd	r24, Y+1	; 0x01
    2a98:	28 2f       	mov	r18, r24
    2a9a:	30 e0       	ldi	r19, 0x00	; 0
    2a9c:	39 87       	std	Y+9, r19	; 0x09
    2a9e:	28 87       	std	Y+8, r18	; 0x08
    2aa0:	88 85       	ldd	r24, Y+8	; 0x08
    2aa2:	99 85       	ldd	r25, Y+9	; 0x09
    2aa4:	81 30       	cpi	r24, 0x01	; 1
    2aa6:	91 05       	cpc	r25, r1
    2aa8:	e9 f0       	breq	.+58     	; 0x2ae4 <DIO_VidInternal_Port_Bull_Up+0x64>
    2aaa:	28 85       	ldd	r18, Y+8	; 0x08
    2aac:	39 85       	ldd	r19, Y+9	; 0x09
    2aae:	22 30       	cpi	r18, 0x02	; 2
    2ab0:	31 05       	cpc	r19, r1
    2ab2:	2c f4       	brge	.+10     	; 0x2abe <DIO_VidInternal_Port_Bull_Up+0x3e>
    2ab4:	88 85       	ldd	r24, Y+8	; 0x08
    2ab6:	99 85       	ldd	r25, Y+9	; 0x09
    2ab8:	00 97       	sbiw	r24, 0x00	; 0
    2aba:	61 f0       	breq	.+24     	; 0x2ad4 <DIO_VidInternal_Port_Bull_Up+0x54>
    2abc:	2a c0       	rjmp	.+84     	; 0x2b12 <DIO_VidInternal_Port_Bull_Up+0x92>
    2abe:	28 85       	ldd	r18, Y+8	; 0x08
    2ac0:	39 85       	ldd	r19, Y+9	; 0x09
    2ac2:	22 30       	cpi	r18, 0x02	; 2
    2ac4:	31 05       	cpc	r19, r1
    2ac6:	b1 f0       	breq	.+44     	; 0x2af4 <DIO_VidInternal_Port_Bull_Up+0x74>
    2ac8:	88 85       	ldd	r24, Y+8	; 0x08
    2aca:	99 85       	ldd	r25, Y+9	; 0x09
    2acc:	83 30       	cpi	r24, 0x03	; 3
    2ace:	91 05       	cpc	r25, r1
    2ad0:	c9 f0       	breq	.+50     	; 0x2b04 <DIO_VidInternal_Port_Bull_Up+0x84>
    2ad2:	1f c0       	rjmp	.+62     	; 0x2b12 <DIO_VidInternal_Port_Bull_Up+0x92>
	{
		case(Port_A):DDRA|=0xff;break;
    2ad4:	ea e3       	ldi	r30, 0x3A	; 58
    2ad6:	f0 e0       	ldi	r31, 0x00	; 0
    2ad8:	90 81       	ld	r25, Z
    2ada:	ea e3       	ldi	r30, 0x3A	; 58
    2adc:	f0 e0       	ldi	r31, 0x00	; 0
    2ade:	8f ef       	ldi	r24, 0xFF	; 255
    2ae0:	80 83       	st	Z, r24
    2ae2:	17 c0       	rjmp	.+46     	; 0x2b12 <DIO_VidInternal_Port_Bull_Up+0x92>
		case(Port_B):DDRB|=0xff;break;
    2ae4:	e7 e3       	ldi	r30, 0x37	; 55
    2ae6:	f0 e0       	ldi	r31, 0x00	; 0
    2ae8:	20 81       	ld	r18, Z
    2aea:	e7 e3       	ldi	r30, 0x37	; 55
    2aec:	f0 e0       	ldi	r31, 0x00	; 0
    2aee:	8f ef       	ldi	r24, 0xFF	; 255
    2af0:	80 83       	st	Z, r24
    2af2:	0f c0       	rjmp	.+30     	; 0x2b12 <DIO_VidInternal_Port_Bull_Up+0x92>
		case(Port_C):DDRC|=0xff;break;
    2af4:	e4 e3       	ldi	r30, 0x34	; 52
    2af6:	f0 e0       	ldi	r31, 0x00	; 0
    2af8:	30 81       	ld	r19, Z
    2afa:	e4 e3       	ldi	r30, 0x34	; 52
    2afc:	f0 e0       	ldi	r31, 0x00	; 0
    2afe:	8f ef       	ldi	r24, 0xFF	; 255
    2b00:	80 83       	st	Z, r24
    2b02:	07 c0       	rjmp	.+14     	; 0x2b12 <DIO_VidInternal_Port_Bull_Up+0x92>
		case(Port_D):DDRD|=0xff;break;
    2b04:	e1 e3       	ldi	r30, 0x31	; 49
    2b06:	f0 e0       	ldi	r31, 0x00	; 0
    2b08:	80 81       	ld	r24, Z
    2b0a:	e1 e3       	ldi	r30, 0x31	; 49
    2b0c:	f0 e0       	ldi	r31, 0x00	; 0
    2b0e:	8f ef       	ldi	r24, 0xFF	; 255
    2b10:	80 83       	st	Z, r24
	}
	switch(Copy_u8Port)
    2b12:	89 81       	ldd	r24, Y+1	; 0x01
    2b14:	28 2f       	mov	r18, r24
    2b16:	30 e0       	ldi	r19, 0x00	; 0
    2b18:	3b 83       	std	Y+3, r19	; 0x03
    2b1a:	2a 83       	std	Y+2, r18	; 0x02
    2b1c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b1e:	9b 81       	ldd	r25, Y+3	; 0x03
    2b20:	81 30       	cpi	r24, 0x01	; 1
    2b22:	91 05       	cpc	r25, r1
    2b24:	d1 f0       	breq	.+52     	; 0x2b5a <DIO_VidInternal_Port_Bull_Up+0xda>
    2b26:	2a 81       	ldd	r18, Y+2	; 0x02
    2b28:	3b 81       	ldd	r19, Y+3	; 0x03
    2b2a:	22 30       	cpi	r18, 0x02	; 2
    2b2c:	31 05       	cpc	r19, r1
    2b2e:	2c f4       	brge	.+10     	; 0x2b3a <DIO_VidInternal_Port_Bull_Up+0xba>
    2b30:	8a 81       	ldd	r24, Y+2	; 0x02
    2b32:	9b 81       	ldd	r25, Y+3	; 0x03
    2b34:	00 97       	sbiw	r24, 0x00	; 0
    2b36:	61 f0       	breq	.+24     	; 0x2b50 <DIO_VidInternal_Port_Bull_Up+0xd0>
    2b38:	1e c0       	rjmp	.+60     	; 0x2b76 <DIO_VidInternal_Port_Bull_Up+0xf6>
    2b3a:	2a 81       	ldd	r18, Y+2	; 0x02
    2b3c:	3b 81       	ldd	r19, Y+3	; 0x03
    2b3e:	22 30       	cpi	r18, 0x02	; 2
    2b40:	31 05       	cpc	r19, r1
    2b42:	81 f0       	breq	.+32     	; 0x2b64 <DIO_VidInternal_Port_Bull_Up+0xe4>
    2b44:	8a 81       	ldd	r24, Y+2	; 0x02
    2b46:	9b 81       	ldd	r25, Y+3	; 0x03
    2b48:	83 30       	cpi	r24, 0x03	; 3
    2b4a:	91 05       	cpc	r25, r1
    2b4c:	81 f0       	breq	.+32     	; 0x2b6e <DIO_VidInternal_Port_Bull_Up+0xee>
    2b4e:	13 c0       	rjmp	.+38     	; 0x2b76 <DIO_VidInternal_Port_Bull_Up+0xf6>
	{
		case(Port_A):PORTA=0xff;break;
    2b50:	eb e3       	ldi	r30, 0x3B	; 59
    2b52:	f0 e0       	ldi	r31, 0x00	; 0
    2b54:	8f ef       	ldi	r24, 0xFF	; 255
    2b56:	80 83       	st	Z, r24
    2b58:	0e c0       	rjmp	.+28     	; 0x2b76 <DIO_VidInternal_Port_Bull_Up+0xf6>
		case(Port_B):PORTB=0xff;break;
    2b5a:	e8 e3       	ldi	r30, 0x38	; 56
    2b5c:	f0 e0       	ldi	r31, 0x00	; 0
    2b5e:	8f ef       	ldi	r24, 0xFF	; 255
    2b60:	80 83       	st	Z, r24
    2b62:	09 c0       	rjmp	.+18     	; 0x2b76 <DIO_VidInternal_Port_Bull_Up+0xf6>
		case(Port_C):PORTC=0xff;break;
    2b64:	e5 e3       	ldi	r30, 0x35	; 53
    2b66:	f0 e0       	ldi	r31, 0x00	; 0
    2b68:	8f ef       	ldi	r24, 0xFF	; 255
    2b6a:	80 83       	st	Z, r24
    2b6c:	04 c0       	rjmp	.+8      	; 0x2b76 <DIO_VidInternal_Port_Bull_Up+0xf6>
		case(Port_D):PORTD=0xff;break;
    2b6e:	e2 e3       	ldi	r30, 0x32	; 50
    2b70:	f0 e0       	ldi	r31, 0x00	; 0
    2b72:	8f ef       	ldi	r24, 0xFF	; 255
    2b74:	80 83       	st	Z, r24
	}
}
    2b76:	29 96       	adiw	r28, 0x09	; 9
    2b78:	0f b6       	in	r0, 0x3f	; 63
    2b7a:	f8 94       	cli
    2b7c:	de bf       	out	0x3e, r29	; 62
    2b7e:	0f be       	out	0x3f, r0	; 63
    2b80:	cd bf       	out	0x3d, r28	; 61
    2b82:	cf 91       	pop	r28
    2b84:	df 91       	pop	r29
    2b86:	08 95       	ret

00002b88 <DIO_VidSet_Port_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidSet_Port_Value(u8 Copy_u8Port,u8 Copy_u8Value)								/*SET PORT Value*/
{
    2b88:	df 93       	push	r29
    2b8a:	cf 93       	push	r28
    2b8c:	00 d0       	rcall	.+0      	; 0x2b8e <DIO_VidSet_Port_Value+0x6>
    2b8e:	00 d0       	rcall	.+0      	; 0x2b90 <DIO_VidSet_Port_Value+0x8>
    2b90:	cd b7       	in	r28, 0x3d	; 61
    2b92:	de b7       	in	r29, 0x3e	; 62
    2b94:	89 83       	std	Y+1, r24	; 0x01
    2b96:	6a 83       	std	Y+2, r22	; 0x02
		switch(Copy_u8Port)
    2b98:	89 81       	ldd	r24, Y+1	; 0x01
    2b9a:	28 2f       	mov	r18, r24
    2b9c:	30 e0       	ldi	r19, 0x00	; 0
    2b9e:	3c 83       	std	Y+4, r19	; 0x04
    2ba0:	2b 83       	std	Y+3, r18	; 0x03
    2ba2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ba4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ba6:	81 30       	cpi	r24, 0x01	; 1
    2ba8:	91 05       	cpc	r25, r1
    2baa:	d1 f0       	breq	.+52     	; 0x2be0 <DIO_VidSet_Port_Value+0x58>
    2bac:	2b 81       	ldd	r18, Y+3	; 0x03
    2bae:	3c 81       	ldd	r19, Y+4	; 0x04
    2bb0:	22 30       	cpi	r18, 0x02	; 2
    2bb2:	31 05       	cpc	r19, r1
    2bb4:	2c f4       	brge	.+10     	; 0x2bc0 <DIO_VidSet_Port_Value+0x38>
    2bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    2bb8:	9c 81       	ldd	r25, Y+4	; 0x04
    2bba:	00 97       	sbiw	r24, 0x00	; 0
    2bbc:	61 f0       	breq	.+24     	; 0x2bd6 <DIO_VidSet_Port_Value+0x4e>
    2bbe:	1e c0       	rjmp	.+60     	; 0x2bfc <DIO_VidSet_Port_Value+0x74>
    2bc0:	2b 81       	ldd	r18, Y+3	; 0x03
    2bc2:	3c 81       	ldd	r19, Y+4	; 0x04
    2bc4:	22 30       	cpi	r18, 0x02	; 2
    2bc6:	31 05       	cpc	r19, r1
    2bc8:	81 f0       	breq	.+32     	; 0x2bea <DIO_VidSet_Port_Value+0x62>
    2bca:	8b 81       	ldd	r24, Y+3	; 0x03
    2bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    2bce:	83 30       	cpi	r24, 0x03	; 3
    2bd0:	91 05       	cpc	r25, r1
    2bd2:	81 f0       	breq	.+32     	; 0x2bf4 <DIO_VidSet_Port_Value+0x6c>
    2bd4:	13 c0       	rjmp	.+38     	; 0x2bfc <DIO_VidSet_Port_Value+0x74>
		{
			case(Port_A):PORTA=Copy_u8Value;break;
    2bd6:	eb e3       	ldi	r30, 0x3B	; 59
    2bd8:	f0 e0       	ldi	r31, 0x00	; 0
    2bda:	8a 81       	ldd	r24, Y+2	; 0x02
    2bdc:	80 83       	st	Z, r24
    2bde:	0e c0       	rjmp	.+28     	; 0x2bfc <DIO_VidSet_Port_Value+0x74>
			case(Port_B):PORTB=Copy_u8Value;break;
    2be0:	e8 e3       	ldi	r30, 0x38	; 56
    2be2:	f0 e0       	ldi	r31, 0x00	; 0
    2be4:	8a 81       	ldd	r24, Y+2	; 0x02
    2be6:	80 83       	st	Z, r24
    2be8:	09 c0       	rjmp	.+18     	; 0x2bfc <DIO_VidSet_Port_Value+0x74>
			case(Port_C):PORTC=Copy_u8Value;break;
    2bea:	e5 e3       	ldi	r30, 0x35	; 53
    2bec:	f0 e0       	ldi	r31, 0x00	; 0
    2bee:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf0:	80 83       	st	Z, r24
    2bf2:	04 c0       	rjmp	.+8      	; 0x2bfc <DIO_VidSet_Port_Value+0x74>
			case(Port_D):PORTD=Copy_u8Value;break;
    2bf4:	e2 e3       	ldi	r30, 0x32	; 50
    2bf6:	f0 e0       	ldi	r31, 0x00	; 0
    2bf8:	8a 81       	ldd	r24, Y+2	; 0x02
    2bfa:	80 83       	st	Z, r24
		}
}
    2bfc:	0f 90       	pop	r0
    2bfe:	0f 90       	pop	r0
    2c00:	0f 90       	pop	r0
    2c02:	0f 90       	pop	r0
    2c04:	cf 91       	pop	r28
    2c06:	df 91       	pop	r29
    2c08:	08 95       	ret

00002c0a <DIO_VidEdit_Port_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidEdit_Port_Value(u8 Copy_u8Port,u8 Copy_u8Pins,u8 Copy_u8Value)								/*SET PORT Value*/
{
    2c0a:	df 93       	push	r29
    2c0c:	cf 93       	push	r28
    2c0e:	cd b7       	in	r28, 0x3d	; 61
    2c10:	de b7       	in	r29, 0x3e	; 62
    2c12:	27 97       	sbiw	r28, 0x07	; 7
    2c14:	0f b6       	in	r0, 0x3f	; 63
    2c16:	f8 94       	cli
    2c18:	de bf       	out	0x3e, r29	; 62
    2c1a:	0f be       	out	0x3f, r0	; 63
    2c1c:	cd bf       	out	0x3d, r28	; 61
    2c1e:	89 83       	std	Y+1, r24	; 0x01
    2c20:	6a 83       	std	Y+2, r22	; 0x02
    2c22:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Pins==HI)
    2c24:	8a 81       	ldd	r24, Y+2	; 0x02
    2c26:	81 30       	cpi	r24, 0x01	; 1
    2c28:	09 f0       	breq	.+2      	; 0x2c2c <DIO_VidEdit_Port_Value+0x22>
    2c2a:	67 c0       	rjmp	.+206    	; 0x2cfa <DIO_VidEdit_Port_Value+0xf0>
	{
		switch(Copy_u8Port)
    2c2c:	89 81       	ldd	r24, Y+1	; 0x01
    2c2e:	28 2f       	mov	r18, r24
    2c30:	30 e0       	ldi	r19, 0x00	; 0
    2c32:	3f 83       	std	Y+7, r19	; 0x07
    2c34:	2e 83       	std	Y+6, r18	; 0x06
    2c36:	8e 81       	ldd	r24, Y+6	; 0x06
    2c38:	9f 81       	ldd	r25, Y+7	; 0x07
    2c3a:	81 30       	cpi	r24, 0x01	; 1
    2c3c:	91 05       	cpc	r25, r1
    2c3e:	39 f1       	breq	.+78     	; 0x2c8e <DIO_VidEdit_Port_Value+0x84>
    2c40:	2e 81       	ldd	r18, Y+6	; 0x06
    2c42:	3f 81       	ldd	r19, Y+7	; 0x07
    2c44:	22 30       	cpi	r18, 0x02	; 2
    2c46:	31 05       	cpc	r19, r1
    2c48:	2c f4       	brge	.+10     	; 0x2c54 <DIO_VidEdit_Port_Value+0x4a>
    2c4a:	8e 81       	ldd	r24, Y+6	; 0x06
    2c4c:	9f 81       	ldd	r25, Y+7	; 0x07
    2c4e:	00 97       	sbiw	r24, 0x00	; 0
    2c50:	61 f0       	breq	.+24     	; 0x2c6a <DIO_VidEdit_Port_Value+0x60>
    2c52:	bd c0       	rjmp	.+378    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
    2c54:	2e 81       	ldd	r18, Y+6	; 0x06
    2c56:	3f 81       	ldd	r19, Y+7	; 0x07
    2c58:	22 30       	cpi	r18, 0x02	; 2
    2c5a:	31 05       	cpc	r19, r1
    2c5c:	51 f1       	breq	.+84     	; 0x2cb2 <DIO_VidEdit_Port_Value+0xa8>
    2c5e:	8e 81       	ldd	r24, Y+6	; 0x06
    2c60:	9f 81       	ldd	r25, Y+7	; 0x07
    2c62:	83 30       	cpi	r24, 0x03	; 3
    2c64:	91 05       	cpc	r25, r1
    2c66:	b9 f1       	breq	.+110    	; 0x2cd6 <DIO_VidEdit_Port_Value+0xcc>
    2c68:	b2 c0       	rjmp	.+356    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
		{
			case(Port_A):PORTA&=0x0F;PORTA|=(Copy_u8Value&0xF0);break;
    2c6a:	ab e3       	ldi	r26, 0x3B	; 59
    2c6c:	b0 e0       	ldi	r27, 0x00	; 0
    2c6e:	eb e3       	ldi	r30, 0x3B	; 59
    2c70:	f0 e0       	ldi	r31, 0x00	; 0
    2c72:	80 81       	ld	r24, Z
    2c74:	8f 70       	andi	r24, 0x0F	; 15
    2c76:	8c 93       	st	X, r24
    2c78:	ab e3       	ldi	r26, 0x3B	; 59
    2c7a:	b0 e0       	ldi	r27, 0x00	; 0
    2c7c:	eb e3       	ldi	r30, 0x3B	; 59
    2c7e:	f0 e0       	ldi	r31, 0x00	; 0
    2c80:	80 81       	ld	r24, Z
    2c82:	98 2f       	mov	r25, r24
    2c84:	8b 81       	ldd	r24, Y+3	; 0x03
    2c86:	80 7f       	andi	r24, 0xF0	; 240
    2c88:	89 2b       	or	r24, r25
    2c8a:	8c 93       	st	X, r24
    2c8c:	a0 c0       	rjmp	.+320    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
			case(Port_B):PORTB&=0x0F;PORTB|=(Copy_u8Value&0xF0);break;
    2c8e:	a8 e3       	ldi	r26, 0x38	; 56
    2c90:	b0 e0       	ldi	r27, 0x00	; 0
    2c92:	e8 e3       	ldi	r30, 0x38	; 56
    2c94:	f0 e0       	ldi	r31, 0x00	; 0
    2c96:	80 81       	ld	r24, Z
    2c98:	8f 70       	andi	r24, 0x0F	; 15
    2c9a:	8c 93       	st	X, r24
    2c9c:	a8 e3       	ldi	r26, 0x38	; 56
    2c9e:	b0 e0       	ldi	r27, 0x00	; 0
    2ca0:	e8 e3       	ldi	r30, 0x38	; 56
    2ca2:	f0 e0       	ldi	r31, 0x00	; 0
    2ca4:	80 81       	ld	r24, Z
    2ca6:	98 2f       	mov	r25, r24
    2ca8:	8b 81       	ldd	r24, Y+3	; 0x03
    2caa:	80 7f       	andi	r24, 0xF0	; 240
    2cac:	89 2b       	or	r24, r25
    2cae:	8c 93       	st	X, r24
    2cb0:	8e c0       	rjmp	.+284    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
			case(Port_C):PORTC&=0x0F;PORTC|=(Copy_u8Value&0xF0);break;
    2cb2:	a5 e3       	ldi	r26, 0x35	; 53
    2cb4:	b0 e0       	ldi	r27, 0x00	; 0
    2cb6:	e5 e3       	ldi	r30, 0x35	; 53
    2cb8:	f0 e0       	ldi	r31, 0x00	; 0
    2cba:	80 81       	ld	r24, Z
    2cbc:	8f 70       	andi	r24, 0x0F	; 15
    2cbe:	8c 93       	st	X, r24
    2cc0:	a5 e3       	ldi	r26, 0x35	; 53
    2cc2:	b0 e0       	ldi	r27, 0x00	; 0
    2cc4:	e5 e3       	ldi	r30, 0x35	; 53
    2cc6:	f0 e0       	ldi	r31, 0x00	; 0
    2cc8:	80 81       	ld	r24, Z
    2cca:	98 2f       	mov	r25, r24
    2ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    2cce:	80 7f       	andi	r24, 0xF0	; 240
    2cd0:	89 2b       	or	r24, r25
    2cd2:	8c 93       	st	X, r24
    2cd4:	7c c0       	rjmp	.+248    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
			case(Port_D):PORTD&=0x0F;PORTD|=(Copy_u8Value&0xF0);break;
    2cd6:	a2 e3       	ldi	r26, 0x32	; 50
    2cd8:	b0 e0       	ldi	r27, 0x00	; 0
    2cda:	e2 e3       	ldi	r30, 0x32	; 50
    2cdc:	f0 e0       	ldi	r31, 0x00	; 0
    2cde:	80 81       	ld	r24, Z
    2ce0:	8f 70       	andi	r24, 0x0F	; 15
    2ce2:	8c 93       	st	X, r24
    2ce4:	a2 e3       	ldi	r26, 0x32	; 50
    2ce6:	b0 e0       	ldi	r27, 0x00	; 0
    2ce8:	e2 e3       	ldi	r30, 0x32	; 50
    2cea:	f0 e0       	ldi	r31, 0x00	; 0
    2cec:	80 81       	ld	r24, Z
    2cee:	98 2f       	mov	r25, r24
    2cf0:	8b 81       	ldd	r24, Y+3	; 0x03
    2cf2:	80 7f       	andi	r24, 0xF0	; 240
    2cf4:	89 2b       	or	r24, r25
    2cf6:	8c 93       	st	X, r24
    2cf8:	6a c0       	rjmp	.+212    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
		}
	}
	else if (Copy_u8Pins==LOW)
    2cfa:	8a 81       	ldd	r24, Y+2	; 0x02
    2cfc:	88 23       	and	r24, r24
    2cfe:	09 f0       	breq	.+2      	; 0x2d02 <DIO_VidEdit_Port_Value+0xf8>
    2d00:	66 c0       	rjmp	.+204    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
	{
		switch(Copy_u8Port)
    2d02:	89 81       	ldd	r24, Y+1	; 0x01
    2d04:	28 2f       	mov	r18, r24
    2d06:	30 e0       	ldi	r19, 0x00	; 0
    2d08:	3d 83       	std	Y+5, r19	; 0x05
    2d0a:	2c 83       	std	Y+4, r18	; 0x04
    2d0c:	8c 81       	ldd	r24, Y+4	; 0x04
    2d0e:	9d 81       	ldd	r25, Y+5	; 0x05
    2d10:	81 30       	cpi	r24, 0x01	; 1
    2d12:	91 05       	cpc	r25, r1
    2d14:	39 f1       	breq	.+78     	; 0x2d64 <DIO_VidEdit_Port_Value+0x15a>
    2d16:	2c 81       	ldd	r18, Y+4	; 0x04
    2d18:	3d 81       	ldd	r19, Y+5	; 0x05
    2d1a:	22 30       	cpi	r18, 0x02	; 2
    2d1c:	31 05       	cpc	r19, r1
    2d1e:	2c f4       	brge	.+10     	; 0x2d2a <DIO_VidEdit_Port_Value+0x120>
    2d20:	8c 81       	ldd	r24, Y+4	; 0x04
    2d22:	9d 81       	ldd	r25, Y+5	; 0x05
    2d24:	00 97       	sbiw	r24, 0x00	; 0
    2d26:	61 f0       	breq	.+24     	; 0x2d40 <DIO_VidEdit_Port_Value+0x136>
    2d28:	52 c0       	rjmp	.+164    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
    2d2a:	2c 81       	ldd	r18, Y+4	; 0x04
    2d2c:	3d 81       	ldd	r19, Y+5	; 0x05
    2d2e:	22 30       	cpi	r18, 0x02	; 2
    2d30:	31 05       	cpc	r19, r1
    2d32:	51 f1       	breq	.+84     	; 0x2d88 <DIO_VidEdit_Port_Value+0x17e>
    2d34:	8c 81       	ldd	r24, Y+4	; 0x04
    2d36:	9d 81       	ldd	r25, Y+5	; 0x05
    2d38:	83 30       	cpi	r24, 0x03	; 3
    2d3a:	91 05       	cpc	r25, r1
    2d3c:	b9 f1       	breq	.+110    	; 0x2dac <DIO_VidEdit_Port_Value+0x1a2>
    2d3e:	47 c0       	rjmp	.+142    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
		{
			case(Port_A):PORTA&=0xF0;PORTA|=Copy_u8Value&0X0F;break;
    2d40:	ab e3       	ldi	r26, 0x3B	; 59
    2d42:	b0 e0       	ldi	r27, 0x00	; 0
    2d44:	eb e3       	ldi	r30, 0x3B	; 59
    2d46:	f0 e0       	ldi	r31, 0x00	; 0
    2d48:	80 81       	ld	r24, Z
    2d4a:	80 7f       	andi	r24, 0xF0	; 240
    2d4c:	8c 93       	st	X, r24
    2d4e:	ab e3       	ldi	r26, 0x3B	; 59
    2d50:	b0 e0       	ldi	r27, 0x00	; 0
    2d52:	eb e3       	ldi	r30, 0x3B	; 59
    2d54:	f0 e0       	ldi	r31, 0x00	; 0
    2d56:	80 81       	ld	r24, Z
    2d58:	98 2f       	mov	r25, r24
    2d5a:	8b 81       	ldd	r24, Y+3	; 0x03
    2d5c:	8f 70       	andi	r24, 0x0F	; 15
    2d5e:	89 2b       	or	r24, r25
    2d60:	8c 93       	st	X, r24
    2d62:	35 c0       	rjmp	.+106    	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
			case(Port_B):PORTB&=0xF0;PORTB|=Copy_u8Value&0X0F;break;
    2d64:	a8 e3       	ldi	r26, 0x38	; 56
    2d66:	b0 e0       	ldi	r27, 0x00	; 0
    2d68:	e8 e3       	ldi	r30, 0x38	; 56
    2d6a:	f0 e0       	ldi	r31, 0x00	; 0
    2d6c:	80 81       	ld	r24, Z
    2d6e:	80 7f       	andi	r24, 0xF0	; 240
    2d70:	8c 93       	st	X, r24
    2d72:	a8 e3       	ldi	r26, 0x38	; 56
    2d74:	b0 e0       	ldi	r27, 0x00	; 0
    2d76:	e8 e3       	ldi	r30, 0x38	; 56
    2d78:	f0 e0       	ldi	r31, 0x00	; 0
    2d7a:	80 81       	ld	r24, Z
    2d7c:	98 2f       	mov	r25, r24
    2d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d80:	8f 70       	andi	r24, 0x0F	; 15
    2d82:	89 2b       	or	r24, r25
    2d84:	8c 93       	st	X, r24
    2d86:	23 c0       	rjmp	.+70     	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
			case(Port_C):PORTC&=0xF0;PORTC|=Copy_u8Value&0X0F;break;
    2d88:	a5 e3       	ldi	r26, 0x35	; 53
    2d8a:	b0 e0       	ldi	r27, 0x00	; 0
    2d8c:	e5 e3       	ldi	r30, 0x35	; 53
    2d8e:	f0 e0       	ldi	r31, 0x00	; 0
    2d90:	80 81       	ld	r24, Z
    2d92:	80 7f       	andi	r24, 0xF0	; 240
    2d94:	8c 93       	st	X, r24
    2d96:	a5 e3       	ldi	r26, 0x35	; 53
    2d98:	b0 e0       	ldi	r27, 0x00	; 0
    2d9a:	e5 e3       	ldi	r30, 0x35	; 53
    2d9c:	f0 e0       	ldi	r31, 0x00	; 0
    2d9e:	80 81       	ld	r24, Z
    2da0:	98 2f       	mov	r25, r24
    2da2:	8b 81       	ldd	r24, Y+3	; 0x03
    2da4:	8f 70       	andi	r24, 0x0F	; 15
    2da6:	89 2b       	or	r24, r25
    2da8:	8c 93       	st	X, r24
    2daa:	11 c0       	rjmp	.+34     	; 0x2dce <DIO_VidEdit_Port_Value+0x1c4>
			case(Port_D):PORTD&=0xF0;PORTD|=Copy_u8Value&0X0F;break;
    2dac:	a2 e3       	ldi	r26, 0x32	; 50
    2dae:	b0 e0       	ldi	r27, 0x00	; 0
    2db0:	e2 e3       	ldi	r30, 0x32	; 50
    2db2:	f0 e0       	ldi	r31, 0x00	; 0
    2db4:	80 81       	ld	r24, Z
    2db6:	80 7f       	andi	r24, 0xF0	; 240
    2db8:	8c 93       	st	X, r24
    2dba:	a2 e3       	ldi	r26, 0x32	; 50
    2dbc:	b0 e0       	ldi	r27, 0x00	; 0
    2dbe:	e2 e3       	ldi	r30, 0x32	; 50
    2dc0:	f0 e0       	ldi	r31, 0x00	; 0
    2dc2:	80 81       	ld	r24, Z
    2dc4:	98 2f       	mov	r25, r24
    2dc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2dc8:	8f 70       	andi	r24, 0x0F	; 15
    2dca:	89 2b       	or	r24, r25
    2dcc:	8c 93       	st	X, r24
		}
	}
}
    2dce:	27 96       	adiw	r28, 0x07	; 7
    2dd0:	0f b6       	in	r0, 0x3f	; 63
    2dd2:	f8 94       	cli
    2dd4:	de bf       	out	0x3e, r29	; 62
    2dd6:	0f be       	out	0x3f, r0	; 63
    2dd8:	cd bf       	out	0x3d, r28	; 61
    2dda:	cf 91       	pop	r28
    2ddc:	df 91       	pop	r29
    2dde:	08 95       	ret

00002de0 <DIO_VidToggle_Port_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidToggle_Port_Value(u8 Copy_u8Port)											/*Toggle PORT Value*/
{
    2de0:	df 93       	push	r29
    2de2:	cf 93       	push	r28
    2de4:	00 d0       	rcall	.+0      	; 0x2de6 <DIO_VidToggle_Port_Value+0x6>
    2de6:	0f 92       	push	r0
    2de8:	cd b7       	in	r28, 0x3d	; 61
    2dea:	de b7       	in	r29, 0x3e	; 62
    2dec:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Port)
    2dee:	89 81       	ldd	r24, Y+1	; 0x01
    2df0:	28 2f       	mov	r18, r24
    2df2:	30 e0       	ldi	r19, 0x00	; 0
    2df4:	3b 83       	std	Y+3, r19	; 0x03
    2df6:	2a 83       	std	Y+2, r18	; 0x02
    2df8:	8a 81       	ldd	r24, Y+2	; 0x02
    2dfa:	9b 81       	ldd	r25, Y+3	; 0x03
    2dfc:	81 30       	cpi	r24, 0x01	; 1
    2dfe:	91 05       	cpc	r25, r1
    2e00:	e9 f0       	breq	.+58     	; 0x2e3c <DIO_VidToggle_Port_Value+0x5c>
    2e02:	2a 81       	ldd	r18, Y+2	; 0x02
    2e04:	3b 81       	ldd	r19, Y+3	; 0x03
    2e06:	22 30       	cpi	r18, 0x02	; 2
    2e08:	31 05       	cpc	r19, r1
    2e0a:	2c f4       	brge	.+10     	; 0x2e16 <DIO_VidToggle_Port_Value+0x36>
    2e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e0e:	9b 81       	ldd	r25, Y+3	; 0x03
    2e10:	00 97       	sbiw	r24, 0x00	; 0
    2e12:	61 f0       	breq	.+24     	; 0x2e2c <DIO_VidToggle_Port_Value+0x4c>
    2e14:	2a c0       	rjmp	.+84     	; 0x2e6a <DIO_VidToggle_Port_Value+0x8a>
    2e16:	2a 81       	ldd	r18, Y+2	; 0x02
    2e18:	3b 81       	ldd	r19, Y+3	; 0x03
    2e1a:	22 30       	cpi	r18, 0x02	; 2
    2e1c:	31 05       	cpc	r19, r1
    2e1e:	b1 f0       	breq	.+44     	; 0x2e4c <DIO_VidToggle_Port_Value+0x6c>
    2e20:	8a 81       	ldd	r24, Y+2	; 0x02
    2e22:	9b 81       	ldd	r25, Y+3	; 0x03
    2e24:	83 30       	cpi	r24, 0x03	; 3
    2e26:	91 05       	cpc	r25, r1
    2e28:	c9 f0       	breq	.+50     	; 0x2e5c <DIO_VidToggle_Port_Value+0x7c>
    2e2a:	1f c0       	rjmp	.+62     	; 0x2e6a <DIO_VidToggle_Port_Value+0x8a>
	{
		case(Port_A):PORTA^=0xff;break;
    2e2c:	ab e3       	ldi	r26, 0x3B	; 59
    2e2e:	b0 e0       	ldi	r27, 0x00	; 0
    2e30:	eb e3       	ldi	r30, 0x3B	; 59
    2e32:	f0 e0       	ldi	r31, 0x00	; 0
    2e34:	80 81       	ld	r24, Z
    2e36:	80 95       	com	r24
    2e38:	8c 93       	st	X, r24
    2e3a:	17 c0       	rjmp	.+46     	; 0x2e6a <DIO_VidToggle_Port_Value+0x8a>
		case(Port_B):PORTB^=0xff;break;
    2e3c:	a8 e3       	ldi	r26, 0x38	; 56
    2e3e:	b0 e0       	ldi	r27, 0x00	; 0
    2e40:	e8 e3       	ldi	r30, 0x38	; 56
    2e42:	f0 e0       	ldi	r31, 0x00	; 0
    2e44:	80 81       	ld	r24, Z
    2e46:	80 95       	com	r24
    2e48:	8c 93       	st	X, r24
    2e4a:	0f c0       	rjmp	.+30     	; 0x2e6a <DIO_VidToggle_Port_Value+0x8a>
		case(Port_C):PORTC^=0xff;break;
    2e4c:	a5 e3       	ldi	r26, 0x35	; 53
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	e5 e3       	ldi	r30, 0x35	; 53
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	80 81       	ld	r24, Z
    2e56:	80 95       	com	r24
    2e58:	8c 93       	st	X, r24
    2e5a:	07 c0       	rjmp	.+14     	; 0x2e6a <DIO_VidToggle_Port_Value+0x8a>
		case(Port_D):PORTD^=0xff;break;
    2e5c:	a2 e3       	ldi	r26, 0x32	; 50
    2e5e:	b0 e0       	ldi	r27, 0x00	; 0
    2e60:	e2 e3       	ldi	r30, 0x32	; 50
    2e62:	f0 e0       	ldi	r31, 0x00	; 0
    2e64:	80 81       	ld	r24, Z
    2e66:	80 95       	com	r24
    2e68:	8c 93       	st	X, r24
	}
}
    2e6a:	0f 90       	pop	r0
    2e6c:	0f 90       	pop	r0
    2e6e:	0f 90       	pop	r0
    2e70:	cf 91       	pop	r28
    2e72:	df 91       	pop	r29
    2e74:	08 95       	ret

00002e76 <DIO_VidGet_Port_Value>:
/*---------------------------------------------------------------------------*/
void DIO_VidGet_Port_Value(u8 Copy_u8Port,u8 *Copy_u8Port_Value)						/*Get PORT Value*/
{
    2e76:	df 93       	push	r29
    2e78:	cf 93       	push	r28
    2e7a:	00 d0       	rcall	.+0      	; 0x2e7c <DIO_VidGet_Port_Value+0x6>
    2e7c:	00 d0       	rcall	.+0      	; 0x2e7e <DIO_VidGet_Port_Value+0x8>
    2e7e:	0f 92       	push	r0
    2e80:	cd b7       	in	r28, 0x3d	; 61
    2e82:	de b7       	in	r29, 0x3e	; 62
    2e84:	89 83       	std	Y+1, r24	; 0x01
    2e86:	7b 83       	std	Y+3, r23	; 0x03
    2e88:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_u8Port)
    2e8a:	89 81       	ldd	r24, Y+1	; 0x01
    2e8c:	28 2f       	mov	r18, r24
    2e8e:	30 e0       	ldi	r19, 0x00	; 0
    2e90:	3d 83       	std	Y+5, r19	; 0x05
    2e92:	2c 83       	std	Y+4, r18	; 0x04
    2e94:	8c 81       	ldd	r24, Y+4	; 0x04
    2e96:	9d 81       	ldd	r25, Y+5	; 0x05
    2e98:	81 30       	cpi	r24, 0x01	; 1
    2e9a:	91 05       	cpc	r25, r1
    2e9c:	e1 f0       	breq	.+56     	; 0x2ed6 <DIO_VidGet_Port_Value+0x60>
    2e9e:	2c 81       	ldd	r18, Y+4	; 0x04
    2ea0:	3d 81       	ldd	r19, Y+5	; 0x05
    2ea2:	22 30       	cpi	r18, 0x02	; 2
    2ea4:	31 05       	cpc	r19, r1
    2ea6:	2c f4       	brge	.+10     	; 0x2eb2 <DIO_VidGet_Port_Value+0x3c>
    2ea8:	8c 81       	ldd	r24, Y+4	; 0x04
    2eaa:	9d 81       	ldd	r25, Y+5	; 0x05
    2eac:	00 97       	sbiw	r24, 0x00	; 0
    2eae:	61 f0       	breq	.+24     	; 0x2ec8 <DIO_VidGet_Port_Value+0x52>
    2eb0:	26 c0       	rjmp	.+76     	; 0x2efe <DIO_VidGet_Port_Value+0x88>
    2eb2:	2c 81       	ldd	r18, Y+4	; 0x04
    2eb4:	3d 81       	ldd	r19, Y+5	; 0x05
    2eb6:	22 30       	cpi	r18, 0x02	; 2
    2eb8:	31 05       	cpc	r19, r1
    2eba:	a1 f0       	breq	.+40     	; 0x2ee4 <DIO_VidGet_Port_Value+0x6e>
    2ebc:	8c 81       	ldd	r24, Y+4	; 0x04
    2ebe:	9d 81       	ldd	r25, Y+5	; 0x05
    2ec0:	83 30       	cpi	r24, 0x03	; 3
    2ec2:	91 05       	cpc	r25, r1
    2ec4:	b1 f0       	breq	.+44     	; 0x2ef2 <DIO_VidGet_Port_Value+0x7c>
    2ec6:	1b c0       	rjmp	.+54     	; 0x2efe <DIO_VidGet_Port_Value+0x88>
	{
		case(Port_A):*Copy_u8Port_Value = PINA;break;
    2ec8:	e9 e3       	ldi	r30, 0x39	; 57
    2eca:	f0 e0       	ldi	r31, 0x00	; 0
    2ecc:	80 81       	ld	r24, Z
    2ece:	ea 81       	ldd	r30, Y+2	; 0x02
    2ed0:	fb 81       	ldd	r31, Y+3	; 0x03
    2ed2:	80 83       	st	Z, r24
    2ed4:	14 c0       	rjmp	.+40     	; 0x2efe <DIO_VidGet_Port_Value+0x88>
		case(Port_B):*Copy_u8Port_Value = PINB;break;
    2ed6:	e6 e3       	ldi	r30, 0x36	; 54
    2ed8:	f0 e0       	ldi	r31, 0x00	; 0
    2eda:	80 81       	ld	r24, Z
    2edc:	ea 81       	ldd	r30, Y+2	; 0x02
    2ede:	fb 81       	ldd	r31, Y+3	; 0x03
    2ee0:	80 83       	st	Z, r24
    2ee2:	0d c0       	rjmp	.+26     	; 0x2efe <DIO_VidGet_Port_Value+0x88>
		case(Port_C):*Copy_u8Port_Value = PINC;break;
    2ee4:	e3 e3       	ldi	r30, 0x33	; 51
    2ee6:	f0 e0       	ldi	r31, 0x00	; 0
    2ee8:	80 81       	ld	r24, Z
    2eea:	ea 81       	ldd	r30, Y+2	; 0x02
    2eec:	fb 81       	ldd	r31, Y+3	; 0x03
    2eee:	80 83       	st	Z, r24
    2ef0:	06 c0       	rjmp	.+12     	; 0x2efe <DIO_VidGet_Port_Value+0x88>
		case(Port_D):*Copy_u8Port_Value = PIND;break;
    2ef2:	e0 e3       	ldi	r30, 0x30	; 48
    2ef4:	f0 e0       	ldi	r31, 0x00	; 0
    2ef6:	80 81       	ld	r24, Z
    2ef8:	ea 81       	ldd	r30, Y+2	; 0x02
    2efa:	fb 81       	ldd	r31, Y+3	; 0x03
    2efc:	80 83       	st	Z, r24
	}
}
    2efe:	0f 90       	pop	r0
    2f00:	0f 90       	pop	r0
    2f02:	0f 90       	pop	r0
    2f04:	0f 90       	pop	r0
    2f06:	0f 90       	pop	r0
    2f08:	cf 91       	pop	r28
    2f0a:	df 91       	pop	r29
    2f0c:	08 95       	ret

00002f0e <DIO_VidGlobal_Interrupt_Enable>:
void DIO_VidGlobal_Interrupt_Enable(void)
{
    2f0e:	df 93       	push	r29
    2f10:	cf 93       	push	r28
    2f12:	cd b7       	in	r28, 0x3d	; 61
    2f14:	de b7       	in	r29, 0x3e	; 62
	Set_Bit(SREG,SREG_I);
    2f16:	af e5       	ldi	r26, 0x5F	; 95
    2f18:	b0 e0       	ldi	r27, 0x00	; 0
    2f1a:	ef e5       	ldi	r30, 0x5F	; 95
    2f1c:	f0 e0       	ldi	r31, 0x00	; 0
    2f1e:	80 81       	ld	r24, Z
    2f20:	80 68       	ori	r24, 0x80	; 128
    2f22:	8c 93       	st	X, r24
}
    2f24:	cf 91       	pop	r28
    2f26:	df 91       	pop	r29
    2f28:	08 95       	ret

00002f2a <Led_VidInitialization>:
u8 Global_u8Car_State=GREEN;
u8 Global_u8Toggle_Flag=FALSE;
u8 Global_u8Interrupt_Flag=FALSE;
/*------------------------- Led_INIT -------------------------*/
void Led_VidInitialization(void)
{
    2f2a:	df 93       	push	r29
    2f2c:	cf 93       	push	r28
    2f2e:	cd b7       	in	r28, 0x3d	; 61
    2f30:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSet_Pin_Value(P_Port, P_RED, HI);
    2f32:	81 e0       	ldi	r24, 0x01	; 1
    2f34:	62 e0       	ldi	r22, 0x02	; 2
    2f36:	41 e0       	ldi	r20, 0x01	; 1
    2f38:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
	DIO_VidSet_Pin_Direction(C_Port, C_RED, OUTPUT);
    2f3c:	80 e0       	ldi	r24, 0x00	; 0
    2f3e:	62 e0       	ldi	r22, 0x02	; 2
    2f40:	41 e0       	ldi	r20, 0x01	; 1
    2f42:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <DIO_VidSet_Pin_Direction>
	DIO_VidSet_Pin_Direction(C_Port, C_GRN, OUTPUT);
    2f46:	80 e0       	ldi	r24, 0x00	; 0
    2f48:	60 e0       	ldi	r22, 0x00	; 0
    2f4a:	41 e0       	ldi	r20, 0x01	; 1
    2f4c:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <DIO_VidSet_Pin_Direction>
	DIO_VidSet_Pin_Direction(C_Port, C_YEL, OUTPUT);
    2f50:	80 e0       	ldi	r24, 0x00	; 0
    2f52:	61 e0       	ldi	r22, 0x01	; 1
    2f54:	41 e0       	ldi	r20, 0x01	; 1
    2f56:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <DIO_VidSet_Pin_Direction>
	DIO_VidSet_Pin_Direction(P_Port, P_RED, OUTPUT);
    2f5a:	81 e0       	ldi	r24, 0x01	; 1
    2f5c:	62 e0       	ldi	r22, 0x02	; 2
    2f5e:	41 e0       	ldi	r20, 0x01	; 1
    2f60:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <DIO_VidSet_Pin_Direction>
	DIO_VidSet_Pin_Direction(P_Port, P_GRN, OUTPUT);
    2f64:	81 e0       	ldi	r24, 0x01	; 1
    2f66:	60 e0       	ldi	r22, 0x00	; 0
    2f68:	41 e0       	ldi	r20, 0x01	; 1
    2f6a:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <DIO_VidSet_Pin_Direction>
	DIO_VidSet_Pin_Direction(P_Port, P_YEL, OUTPUT);
    2f6e:	81 e0       	ldi	r24, 0x01	; 1
    2f70:	61 e0       	ldi	r22, 0x01	; 1
    2f72:	41 e0       	ldi	r20, 0x01	; 1
    2f74:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <DIO_VidSet_Pin_Direction>
}
    2f78:	cf 91       	pop	r28
    2f7a:	df 91       	pop	r29
    2f7c:	08 95       	ret

00002f7e <Private_VidToggle_Led>:

/*------------------------- Toggle_Yellow -------------------------*/
void Private_VidToggle_Led(u32 Copy_u32Delay)
{
    2f7e:	df 93       	push	r29
    2f80:	cf 93       	push	r28
    2f82:	cd b7       	in	r28, 0x3d	; 61
    2f84:	de b7       	in	r29, 0x3e	; 62
    2f86:	28 97       	sbiw	r28, 0x08	; 8
    2f88:	0f b6       	in	r0, 0x3f	; 63
    2f8a:	f8 94       	cli
    2f8c:	de bf       	out	0x3e, r29	; 62
    2f8e:	0f be       	out	0x3f, r0	; 63
    2f90:	cd bf       	out	0x3d, r28	; 61
    2f92:	6d 83       	std	Y+5, r22	; 0x05
    2f94:	7e 83       	std	Y+6, r23	; 0x06
    2f96:	8f 83       	std	Y+7, r24	; 0x07
    2f98:	98 87       	std	Y+8, r25	; 0x08
	u32 Local_u8Flag=FALSE;
    2f9a:	19 82       	std	Y+1, r1	; 0x01
    2f9c:	1a 82       	std	Y+2, r1	; 0x02
    2f9e:	1b 82       	std	Y+3, r1	; 0x03
    2fa0:	1c 82       	std	Y+4, r1	; 0x04
	DIO_VidSet_Pin_Value(C_Port, C_YEL, LOW);
    2fa2:	80 e0       	ldi	r24, 0x00	; 0
    2fa4:	61 e0       	ldi	r22, 0x01	; 1
    2fa6:	40 e0       	ldi	r20, 0x00	; 0
    2fa8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
	DIO_VidSet_Pin_Value(P_Port, P_YEL, LOW);
    2fac:	81 e0       	ldi	r24, 0x01	; 1
    2fae:	61 e0       	ldi	r22, 0x01	; 1
    2fb0:	40 e0       	ldi	r20, 0x00	; 0
    2fb2:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
	for(Local_u8Flag=Copy_u32Delay/500;Local_u8Flag;Local_u8Flag--)
    2fb6:	8d 81       	ldd	r24, Y+5	; 0x05
    2fb8:	9e 81       	ldd	r25, Y+6	; 0x06
    2fba:	af 81       	ldd	r26, Y+7	; 0x07
    2fbc:	b8 85       	ldd	r27, Y+8	; 0x08
    2fbe:	24 ef       	ldi	r18, 0xF4	; 244
    2fc0:	31 e0       	ldi	r19, 0x01	; 1
    2fc2:	40 e0       	ldi	r20, 0x00	; 0
    2fc4:	50 e0       	ldi	r21, 0x00	; 0
    2fc6:	bc 01       	movw	r22, r24
    2fc8:	cd 01       	movw	r24, r26
    2fca:	0e 94 b8 19 	call	0x3370	; 0x3370 <__udivmodsi4>
    2fce:	da 01       	movw	r26, r20
    2fd0:	c9 01       	movw	r24, r18
    2fd2:	89 83       	std	Y+1, r24	; 0x01
    2fd4:	9a 83       	std	Y+2, r25	; 0x02
    2fd6:	ab 83       	std	Y+3, r26	; 0x03
    2fd8:	bc 83       	std	Y+4, r27	; 0x04
    2fda:	26 c0       	rjmp	.+76     	; 0x3028 <Private_VidToggle_Led+0xaa>
	{
		Timer_2_VidBusy_Wait_ms(500);
    2fdc:	64 ef       	ldi	r22, 0xF4	; 244
    2fde:	71 e0       	ldi	r23, 0x01	; 1
    2fe0:	80 e0       	ldi	r24, 0x00	; 0
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
		if(Global_u8Toggle_Flag)DIO_VidToggle_Pin_Value(P_Port,P_YEL);
    2fe8:	80 91 77 01 	lds	r24, 0x0177
    2fec:	88 23       	and	r24, r24
    2fee:	21 f0       	breq	.+8      	; 0x2ff8 <Private_VidToggle_Led+0x7a>
    2ff0:	81 e0       	ldi	r24, 0x01	; 1
    2ff2:	61 e0       	ldi	r22, 0x01	; 1
    2ff4:	0e 94 69 13 	call	0x26d2	; 0x26d2 <DIO_VidToggle_Pin_Value>
		DIO_VidToggle_Pin_Value(C_Port,C_YEL);
    2ff8:	80 e0       	ldi	r24, 0x00	; 0
    2ffa:	61 e0       	ldi	r22, 0x01	; 1
    2ffc:	0e 94 69 13 	call	0x26d2	; 0x26d2 <DIO_VidToggle_Pin_Value>
		if(Global_u8Interrupt_Flag)
    3000:	80 91 78 01 	lds	r24, 0x0178
    3004:	88 23       	and	r24, r24
    3006:	29 f0       	breq	.+10     	; 0x3012 <Private_VidToggle_Led+0x94>
		{
			Global_u8Car_State=GREEN;
    3008:	10 92 76 01 	sts	0x0176, r1
			Global_u8Interrupt_Flag=FALSE;
    300c:	10 92 78 01 	sts	0x0178, r1
    3010:	13 c0       	rjmp	.+38     	; 0x3038 <Private_VidToggle_Led+0xba>
void Private_VidToggle_Led(u32 Copy_u32Delay)
{
	u32 Local_u8Flag=FALSE;
	DIO_VidSet_Pin_Value(C_Port, C_YEL, LOW);
	DIO_VidSet_Pin_Value(P_Port, P_YEL, LOW);
	for(Local_u8Flag=Copy_u32Delay/500;Local_u8Flag;Local_u8Flag--)
    3012:	89 81       	ldd	r24, Y+1	; 0x01
    3014:	9a 81       	ldd	r25, Y+2	; 0x02
    3016:	ab 81       	ldd	r26, Y+3	; 0x03
    3018:	bc 81       	ldd	r27, Y+4	; 0x04
    301a:	01 97       	sbiw	r24, 0x01	; 1
    301c:	a1 09       	sbc	r26, r1
    301e:	b1 09       	sbc	r27, r1
    3020:	89 83       	std	Y+1, r24	; 0x01
    3022:	9a 83       	std	Y+2, r25	; 0x02
    3024:	ab 83       	std	Y+3, r26	; 0x03
    3026:	bc 83       	std	Y+4, r27	; 0x04
    3028:	89 81       	ldd	r24, Y+1	; 0x01
    302a:	9a 81       	ldd	r25, Y+2	; 0x02
    302c:	ab 81       	ldd	r26, Y+3	; 0x03
    302e:	bc 81       	ldd	r27, Y+4	; 0x04
    3030:	00 97       	sbiw	r24, 0x00	; 0
    3032:	a1 05       	cpc	r26, r1
    3034:	b1 05       	cpc	r27, r1
    3036:	91 f6       	brne	.-92     	; 0x2fdc <Private_VidToggle_Led+0x5e>
			Global_u8Car_State=GREEN;
			Global_u8Interrupt_Flag=FALSE;
			break;
		}
	}
	DIO_VidSet_Pin_Value(C_Port, C_YEL, LOW);
    3038:	80 e0       	ldi	r24, 0x00	; 0
    303a:	61 e0       	ldi	r22, 0x01	; 1
    303c:	40 e0       	ldi	r20, 0x00	; 0
    303e:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
	DIO_VidSet_Pin_Value(P_Port, P_YEL, LOW);
    3042:	81 e0       	ldi	r24, 0x01	; 1
    3044:	61 e0       	ldi	r22, 0x01	; 1
    3046:	40 e0       	ldi	r20, 0x00	; 0
    3048:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
}
    304c:	28 96       	adiw	r28, 0x08	; 8
    304e:	0f b6       	in	r0, 0x3f	; 63
    3050:	f8 94       	cli
    3052:	de bf       	out	0x3e, r29	; 62
    3054:	0f be       	out	0x3f, r0	; 63
    3056:	cd bf       	out	0x3d, r28	; 61
    3058:	cf 91       	pop	r28
    305a:	df 91       	pop	r29
    305c:	08 95       	ret

0000305e <Led_VidPedestrian_Mode>:
/*------------------------- Pedestrian_Mode -------------------------*/
void Led_VidPedestrian_Mode()
{
    305e:	df 93       	push	r29
    3060:	cf 93       	push	r28
    3062:	0f 92       	push	r0
    3064:	cd b7       	in	r28, 0x3d	; 61
    3066:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8Flag=FALSE;
    3068:	19 82       	std	Y+1, r1	; 0x01
	Timer_2_VidBusy_Wait_ms(1000);
    306a:	68 ee       	ldi	r22, 0xE8	; 232
    306c:	73 e0       	ldi	r23, 0x03	; 3
    306e:	80 e0       	ldi	r24, 0x00	; 0
    3070:	90 e0       	ldi	r25, 0x00	; 0
    3072:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
	DIO_VidGet_Pin_Value(Port_D, Pin_2,&Local_u8Flag);
    3076:	83 e0       	ldi	r24, 0x03	; 3
    3078:	62 e0       	ldi	r22, 0x02	; 2
    307a:	9e 01       	movw	r18, r28
    307c:	2f 5f       	subi	r18, 0xFF	; 255
    307e:	3f 4f       	sbci	r19, 0xFF	; 255
    3080:	a9 01       	movw	r20, r18
    3082:	0e 94 e6 13 	call	0x27cc	; 0x27cc <DIO_VidGet_Pin_Value>
	if(Local_u8Flag)
    3086:	89 81       	ldd	r24, Y+1	; 0x01
    3088:	88 23       	and	r24, r24
    308a:	09 f4       	brne	.+2      	; 0x308e <Led_VidPedestrian_Mode+0x30>
    308c:	b7 c0       	rjmp	.+366    	; 0x31fc <Led_VidPedestrian_Mode+0x19e>
	{
		if(Global_u8Car_State==DEFAULT)
    308e:	80 91 76 01 	lds	r24, 0x0176
    3092:	83 30       	cpi	r24, 0x03	; 3
    3094:	71 f5       	brne	.+92     	; 0x30f2 <Led_VidPedestrian_Mode+0x94>
		{
			DIO_VidSet_Pin_Value(P_Port, P_RED, LOW);
    3096:	81 e0       	ldi	r24, 0x01	; 1
    3098:	62 e0       	ldi	r22, 0x02	; 2
    309a:	40 e0       	ldi	r20, 0x00	; 0
    309c:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(P_Port, P_GRN, HI);
    30a0:	81 e0       	ldi	r24, 0x01	; 1
    30a2:	60 e0       	ldi	r22, 0x00	; 0
    30a4:	41 e0       	ldi	r20, 0x01	; 1
    30a6:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Timer_2_VidBusy_Wait_ms(5000);
    30aa:	68 e8       	ldi	r22, 0x88	; 136
    30ac:	73 e1       	ldi	r23, 0x13	; 19
    30ae:	80 e0       	ldi	r24, 0x00	; 0
    30b0:	90 e0       	ldi	r25, 0x00	; 0
    30b2:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
			DIO_VidSet_Pin_Value(C_Port, C_RED, LOW);
    30b6:	80 e0       	ldi	r24, 0x00	; 0
    30b8:	62 e0       	ldi	r22, 0x02	; 2
    30ba:	40 e0       	ldi	r20, 0x00	; 0
    30bc:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Toggle_Flag=TRUE;
    30c0:	81 e0       	ldi	r24, 0x01	; 1
    30c2:	80 93 77 01 	sts	0x0177, r24
			Private_VidToggle_Led(5000);
    30c6:	68 e8       	ldi	r22, 0x88	; 136
    30c8:	73 e1       	ldi	r23, 0x13	; 19
    30ca:	80 e0       	ldi	r24, 0x00	; 0
    30cc:	90 e0       	ldi	r25, 0x00	; 0
    30ce:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			Global_u8Toggle_Flag=FALSE;
    30d2:	10 92 77 01 	sts	0x0177, r1
			DIO_VidSet_Pin_Value(P_Port, P_GRN, LOW);
    30d6:	81 e0       	ldi	r24, 0x01	; 1
    30d8:	60 e0       	ldi	r22, 0x00	; 0
    30da:	40 e0       	ldi	r20, 0x00	; 0
    30dc:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(P_Port, P_RED, HI);
    30e0:	81 e0       	ldi	r24, 0x01	; 1
    30e2:	62 e0       	ldi	r22, 0x02	; 2
    30e4:	41 e0       	ldi	r20, 0x01	; 1
    30e6:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Interrupt_Flag=TRUE;
    30ea:	81 e0       	ldi	r24, 0x01	; 1
    30ec:	80 93 78 01 	sts	0x0178, r24
    30f0:	85 c0       	rjmp	.+266    	; 0x31fc <Led_VidPedestrian_Mode+0x19e>

		}
		else if(Global_u8Car_State==YELLOW)
    30f2:	80 91 76 01 	lds	r24, 0x0176
    30f6:	81 30       	cpi	r24, 0x01	; 1
    30f8:	09 f0       	breq	.+2      	; 0x30fc <Led_VidPedestrian_Mode+0x9e>
    30fa:	43 c0       	rjmp	.+134    	; 0x3182 <Led_VidPedestrian_Mode+0x124>
		{
			DIO_VidSet_Pin_Value(C_Port, C_GRN, LOW);
    30fc:	80 e0       	ldi	r24, 0x00	; 0
    30fe:	60 e0       	ldi	r22, 0x00	; 0
    3100:	40 e0       	ldi	r20, 0x00	; 0
    3102:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Toggle_Flag=TRUE;
    3106:	81 e0       	ldi	r24, 0x01	; 1
    3108:	80 93 77 01 	sts	0x0177, r24
			Private_VidToggle_Led(5000);
    310c:	68 e8       	ldi	r22, 0x88	; 136
    310e:	73 e1       	ldi	r23, 0x13	; 19
    3110:	80 e0       	ldi	r24, 0x00	; 0
    3112:	90 e0       	ldi	r25, 0x00	; 0
    3114:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			Global_u8Toggle_Flag=FALSE;
    3118:	10 92 77 01 	sts	0x0177, r1
			DIO_VidSet_Pin_Value(P_Port, P_RED, LOW);
    311c:	81 e0       	ldi	r24, 0x01	; 1
    311e:	62 e0       	ldi	r22, 0x02	; 2
    3120:	40 e0       	ldi	r20, 0x00	; 0
    3122:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(P_Port, P_GRN, HI);
    3126:	81 e0       	ldi	r24, 0x01	; 1
    3128:	60 e0       	ldi	r22, 0x00	; 0
    312a:	41 e0       	ldi	r20, 0x01	; 1
    312c:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(C_Port, C_RED, HI);
    3130:	80 e0       	ldi	r24, 0x00	; 0
    3132:	62 e0       	ldi	r22, 0x02	; 2
    3134:	41 e0       	ldi	r20, 0x01	; 1
    3136:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Timer_2_VidBusy_Wait_ms(5000);
    313a:	68 e8       	ldi	r22, 0x88	; 136
    313c:	73 e1       	ldi	r23, 0x13	; 19
    313e:	80 e0       	ldi	r24, 0x00	; 0
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
			DIO_VidSet_Pin_Value(C_Port, C_RED, LOW);
    3146:	80 e0       	ldi	r24, 0x00	; 0
    3148:	62 e0       	ldi	r22, 0x02	; 2
    314a:	40 e0       	ldi	r20, 0x00	; 0
    314c:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Toggle_Flag=TRUE;
    3150:	81 e0       	ldi	r24, 0x01	; 1
    3152:	80 93 77 01 	sts	0x0177, r24
			Private_VidToggle_Led(5000);
    3156:	68 e8       	ldi	r22, 0x88	; 136
    3158:	73 e1       	ldi	r23, 0x13	; 19
    315a:	80 e0       	ldi	r24, 0x00	; 0
    315c:	90 e0       	ldi	r25, 0x00	; 0
    315e:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			Global_u8Toggle_Flag=FALSE;
    3162:	10 92 77 01 	sts	0x0177, r1
			DIO_VidSet_Pin_Value(P_Port, P_GRN, LOW);
    3166:	81 e0       	ldi	r24, 0x01	; 1
    3168:	60 e0       	ldi	r22, 0x00	; 0
    316a:	40 e0       	ldi	r20, 0x00	; 0
    316c:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(P_Port, P_RED, HI);
    3170:	81 e0       	ldi	r24, 0x01	; 1
    3172:	62 e0       	ldi	r22, 0x02	; 2
    3174:	41 e0       	ldi	r20, 0x01	; 1
    3176:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Interrupt_Flag=TRUE;
    317a:	81 e0       	ldi	r24, 0x01	; 1
    317c:	80 93 78 01 	sts	0x0178, r24
    3180:	3d c0       	rjmp	.+122    	; 0x31fc <Led_VidPedestrian_Mode+0x19e>
		}
		else
		{
			Global_u8Toggle_Flag=TRUE;
    3182:	81 e0       	ldi	r24, 0x01	; 1
    3184:	80 93 77 01 	sts	0x0177, r24
			Private_VidToggle_Led(5000);
    3188:	68 e8       	ldi	r22, 0x88	; 136
    318a:	73 e1       	ldi	r23, 0x13	; 19
    318c:	80 e0       	ldi	r24, 0x00	; 0
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			Global_u8Toggle_Flag=FALSE;
    3194:	10 92 77 01 	sts	0x0177, r1
			DIO_VidSet_Pin_Value(P_Port, P_RED, LOW);
    3198:	81 e0       	ldi	r24, 0x01	; 1
    319a:	62 e0       	ldi	r22, 0x02	; 2
    319c:	40 e0       	ldi	r20, 0x00	; 0
    319e:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(P_Port, P_GRN, HI);
    31a2:	81 e0       	ldi	r24, 0x01	; 1
    31a4:	60 e0       	ldi	r22, 0x00	; 0
    31a6:	41 e0       	ldi	r20, 0x01	; 1
    31a8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(C_Port, C_RED, HI);
    31ac:	80 e0       	ldi	r24, 0x00	; 0
    31ae:	62 e0       	ldi	r22, 0x02	; 2
    31b0:	41 e0       	ldi	r20, 0x01	; 1
    31b2:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Timer_2_VidBusy_Wait_ms(5000);
    31b6:	68 e8       	ldi	r22, 0x88	; 136
    31b8:	73 e1       	ldi	r23, 0x13	; 19
    31ba:	80 e0       	ldi	r24, 0x00	; 0
    31bc:	90 e0       	ldi	r25, 0x00	; 0
    31be:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
			DIO_VidSet_Pin_Value(C_Port, C_RED, LOW);
    31c2:	80 e0       	ldi	r24, 0x00	; 0
    31c4:	62 e0       	ldi	r22, 0x02	; 2
    31c6:	40 e0       	ldi	r20, 0x00	; 0
    31c8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Toggle_Flag=TRUE;
    31cc:	81 e0       	ldi	r24, 0x01	; 1
    31ce:	80 93 77 01 	sts	0x0177, r24
			Private_VidToggle_Led(5000);
    31d2:	68 e8       	ldi	r22, 0x88	; 136
    31d4:	73 e1       	ldi	r23, 0x13	; 19
    31d6:	80 e0       	ldi	r24, 0x00	; 0
    31d8:	90 e0       	ldi	r25, 0x00	; 0
    31da:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			Global_u8Toggle_Flag=FALSE;
    31de:	10 92 77 01 	sts	0x0177, r1
			DIO_VidSet_Pin_Value(P_Port, P_GRN, LOW);
    31e2:	81 e0       	ldi	r24, 0x01	; 1
    31e4:	60 e0       	ldi	r22, 0x00	; 0
    31e6:	40 e0       	ldi	r20, 0x00	; 0
    31e8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			DIO_VidSet_Pin_Value(P_Port, P_RED, HI);
    31ec:	81 e0       	ldi	r24, 0x01	; 1
    31ee:	62 e0       	ldi	r22, 0x02	; 2
    31f0:	41 e0       	ldi	r20, 0x01	; 1
    31f2:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Global_u8Interrupt_Flag=TRUE;
    31f6:	81 e0       	ldi	r24, 0x01	; 1
    31f8:	80 93 78 01 	sts	0x0178, r24
		}
	}
}
    31fc:	0f 90       	pop	r0
    31fe:	cf 91       	pop	r28
    3200:	df 91       	pop	r29
    3202:	08 95       	ret

00003204 <Led_VidNormal_Mode>:
/*------------------------- Normal_Mode -------------------------*/
void Led_VidNormal_Mode()
{
    3204:	df 93       	push	r29
    3206:	cf 93       	push	r28
    3208:	00 d0       	rcall	.+0      	; 0x320a <Led_VidNormal_Mode+0x6>
    320a:	cd b7       	in	r28, 0x3d	; 61
    320c:	de b7       	in	r29, 0x3e	; 62
	switch(Global_u8Car_State)
    320e:	80 91 76 01 	lds	r24, 0x0176
    3212:	28 2f       	mov	r18, r24
    3214:	30 e0       	ldi	r19, 0x00	; 0
    3216:	3a 83       	std	Y+2, r19	; 0x02
    3218:	29 83       	std	Y+1, r18	; 0x01
    321a:	89 81       	ldd	r24, Y+1	; 0x01
    321c:	9a 81       	ldd	r25, Y+2	; 0x02
    321e:	81 30       	cpi	r24, 0x01	; 1
    3220:	91 05       	cpc	r25, r1
    3222:	e9 f0       	breq	.+58     	; 0x325e <Led_VidNormal_Mode+0x5a>
    3224:	29 81       	ldd	r18, Y+1	; 0x01
    3226:	3a 81       	ldd	r19, Y+2	; 0x02
    3228:	22 30       	cpi	r18, 0x02	; 2
    322a:	31 05       	cpc	r19, r1
    322c:	61 f1       	breq	.+88     	; 0x3286 <Led_VidNormal_Mode+0x82>
    322e:	89 81       	ldd	r24, Y+1	; 0x01
    3230:	9a 81       	ldd	r25, Y+2	; 0x02
    3232:	00 97       	sbiw	r24, 0x00	; 0
    3234:	e1 f5       	brne	.+120    	; 0x32ae <Led_VidNormal_Mode+0xaa>
	{
		case GREEN:
			Global_u8Car_State=YELLOW;
    3236:	81 e0       	ldi	r24, 0x01	; 1
    3238:	80 93 76 01 	sts	0x0176, r24
			DIO_VidSet_Pin_Value(C_Port, C_GRN, HI);
    323c:	80 e0       	ldi	r24, 0x00	; 0
    323e:	60 e0       	ldi	r22, 0x00	; 0
    3240:	41 e0       	ldi	r20, 0x01	; 1
    3242:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Timer_2_VidBusy_Wait_ms(5000);
    3246:	68 e8       	ldi	r22, 0x88	; 136
    3248:	73 e1       	ldi	r23, 0x13	; 19
    324a:	80 e0       	ldi	r24, 0x00	; 0
    324c:	90 e0       	ldi	r25, 0x00	; 0
    324e:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
			DIO_VidSet_Pin_Value(C_Port, C_GRN, LOW);
    3252:	80 e0       	ldi	r24, 0x00	; 0
    3254:	60 e0       	ldi	r22, 0x00	; 0
    3256:	40 e0       	ldi	r20, 0x00	; 0
    3258:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
    325c:	3a c0       	rjmp	.+116    	; 0x32d2 <Led_VidNormal_Mode+0xce>
			break;
		case YELLOW:
			Global_u8Car_State=RED;
    325e:	82 e0       	ldi	r24, 0x02	; 2
    3260:	80 93 76 01 	sts	0x0176, r24
			DIO_VidSet_Pin_Value(C_Port, C_YEL, HI);
    3264:	80 e0       	ldi	r24, 0x00	; 0
    3266:	61 e0       	ldi	r22, 0x01	; 1
    3268:	41 e0       	ldi	r20, 0x01	; 1
    326a:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Private_VidToggle_Led(5000);
    326e:	68 e8       	ldi	r22, 0x88	; 136
    3270:	73 e1       	ldi	r23, 0x13	; 19
    3272:	80 e0       	ldi	r24, 0x00	; 0
    3274:	90 e0       	ldi	r25, 0x00	; 0
    3276:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			DIO_VidSet_Pin_Value(C_Port, C_YEL, LOW);
    327a:	80 e0       	ldi	r24, 0x00	; 0
    327c:	61 e0       	ldi	r22, 0x01	; 1
    327e:	40 e0       	ldi	r20, 0x00	; 0
    3280:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
    3284:	26 c0       	rjmp	.+76     	; 0x32d2 <Led_VidNormal_Mode+0xce>
			break;
		case RED:
			Global_u8Car_State=DEFAULT;
    3286:	83 e0       	ldi	r24, 0x03	; 3
    3288:	80 93 76 01 	sts	0x0176, r24
			DIO_VidSet_Pin_Value(C_Port, C_RED, HI);
    328c:	80 e0       	ldi	r24, 0x00	; 0
    328e:	62 e0       	ldi	r22, 0x02	; 2
    3290:	41 e0       	ldi	r20, 0x01	; 1
    3292:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Timer_2_VidBusy_Wait_ms(5000);
    3296:	68 e8       	ldi	r22, 0x88	; 136
    3298:	73 e1       	ldi	r23, 0x13	; 19
    329a:	80 e0       	ldi	r24, 0x00	; 0
    329c:	90 e0       	ldi	r25, 0x00	; 0
    329e:	0e 94 62 09 	call	0x12c4	; 0x12c4 <Timer_2_VidBusy_Wait_ms>
			DIO_VidSet_Pin_Value(C_Port, C_RED, LOW);
    32a2:	80 e0       	ldi	r24, 0x00	; 0
    32a4:	62 e0       	ldi	r22, 0x02	; 2
    32a6:	40 e0       	ldi	r20, 0x00	; 0
    32a8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
    32ac:	12 c0       	rjmp	.+36     	; 0x32d2 <Led_VidNormal_Mode+0xce>
			break;
		default:
			Global_u8Car_State=GREEN;
    32ae:	10 92 76 01 	sts	0x0176, r1
			DIO_VidSet_Pin_Value(C_Port, C_YEL, HI);
    32b2:	80 e0       	ldi	r24, 0x00	; 0
    32b4:	61 e0       	ldi	r22, 0x01	; 1
    32b6:	41 e0       	ldi	r20, 0x01	; 1
    32b8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			Private_VidToggle_Led(5000);
    32bc:	68 e8       	ldi	r22, 0x88	; 136
    32be:	73 e1       	ldi	r23, 0x13	; 19
    32c0:	80 e0       	ldi	r24, 0x00	; 0
    32c2:	90 e0       	ldi	r25, 0x00	; 0
    32c4:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <Private_VidToggle_Led>
			DIO_VidSet_Pin_Value(C_Port, C_YEL, LOW);
    32c8:	80 e0       	ldi	r24, 0x00	; 0
    32ca:	61 e0       	ldi	r22, 0x01	; 1
    32cc:	40 e0       	ldi	r20, 0x00	; 0
    32ce:	0e 94 69 12 	call	0x24d2	; 0x24d2 <DIO_VidSet_Pin_Value>
			break;
	}
}
    32d2:	0f 90       	pop	r0
    32d4:	0f 90       	pop	r0
    32d6:	cf 91       	pop	r28
    32d8:	df 91       	pop	r29
    32da:	08 95       	ret

000032dc <Button_VidInitialization>:
/*------------------------------- INCLUDE -------------------------------*/
#include "Button_Interface.h"
/*------------------------- BUTTON_INIT -------------------------*/
void Button_VidInitialization(void)
{
    32dc:	df 93       	push	r29
    32de:	cf 93       	push	r28
    32e0:	cd b7       	in	r28, 0x3d	; 61
    32e2:	de b7       	in	r29, 0x3e	; 62
	DIO_VidInternal_Pin_Bull_Up(BUTTON_PORT, BUTTON_PIN);
    32e4:	83 e0       	ldi	r24, 0x03	; 3
    32e6:	62 e0       	ldi	r22, 0x02	; 2
    32e8:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <DIO_VidInternal_Pin_Bull_Up>
	External_Interrupt_0(Led_VidPedestrian_Mode);
    32ec:	8f e2       	ldi	r24, 0x2F	; 47
    32ee:	98 e1       	ldi	r25, 0x18	; 24
    32f0:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <External_Interrupt_0>
	External_Interrupt_VidInitialization(Interrupt_0,Falling_Edge);
    32f4:	80 e0       	ldi	r24, 0x00	; 0
    32f6:	62 e0       	ldi	r22, 0x02	; 2
    32f8:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <External_Interrupt_VidInitialization>
}
    32fc:	cf 91       	pop	r28
    32fe:	df 91       	pop	r29
    3300:	08 95       	ret

00003302 <main>:
/* Include */
#include "app.h"
/****************** MAIN *********************/
int main(void)
{
    3302:	df 93       	push	r29
    3304:	cf 93       	push	r28
    3306:	cd b7       	in	r28, 0x3d	; 61
    3308:	de b7       	in	r29, 0x3e	; 62
	APP_startVid();
    330a:	0e 94 8c 19 	call	0x3318	; 0x3318 <APP_startVid>
    330e:	80 e0       	ldi	r24, 0x00	; 0
    3310:	90 e0       	ldi	r25, 0x00	; 0
}
    3312:	cf 91       	pop	r28
    3314:	df 91       	pop	r29
    3316:	08 95       	ret

00003318 <APP_startVid>:
/*************** APP_startVid *****************/
void APP_startVid(void)
{
    3318:	df 93       	push	r29
    331a:	cf 93       	push	r28
    331c:	cd b7       	in	r28, 0x3d	; 61
    331e:	de b7       	in	r29, 0x3e	; 62
	Button_VidInitialization();
    3320:	0e 94 6e 19 	call	0x32dc	; 0x32dc <Button_VidInitialization>
	Led_VidInitialization();
    3324:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <Led_VidInitialization>
	DIO_VidGlobal_Interrupt_Enable();
    3328:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <DIO_VidGlobal_Interrupt_Enable>
	while(TRUE)
	{
		Led_VidNormal_Mode();
    332c:	0e 94 02 19 	call	0x3204	; 0x3204 <Led_VidNormal_Mode>
    3330:	fd cf       	rjmp	.-6      	; 0x332c <APP_startVid+0x14>

00003332 <__mulsi3>:
    3332:	62 9f       	mul	r22, r18
    3334:	d0 01       	movw	r26, r0
    3336:	73 9f       	mul	r23, r19
    3338:	f0 01       	movw	r30, r0
    333a:	82 9f       	mul	r24, r18
    333c:	e0 0d       	add	r30, r0
    333e:	f1 1d       	adc	r31, r1
    3340:	64 9f       	mul	r22, r20
    3342:	e0 0d       	add	r30, r0
    3344:	f1 1d       	adc	r31, r1
    3346:	92 9f       	mul	r25, r18
    3348:	f0 0d       	add	r31, r0
    334a:	83 9f       	mul	r24, r19
    334c:	f0 0d       	add	r31, r0
    334e:	74 9f       	mul	r23, r20
    3350:	f0 0d       	add	r31, r0
    3352:	65 9f       	mul	r22, r21
    3354:	f0 0d       	add	r31, r0
    3356:	99 27       	eor	r25, r25
    3358:	72 9f       	mul	r23, r18
    335a:	b0 0d       	add	r27, r0
    335c:	e1 1d       	adc	r30, r1
    335e:	f9 1f       	adc	r31, r25
    3360:	63 9f       	mul	r22, r19
    3362:	b0 0d       	add	r27, r0
    3364:	e1 1d       	adc	r30, r1
    3366:	f9 1f       	adc	r31, r25
    3368:	bd 01       	movw	r22, r26
    336a:	cf 01       	movw	r24, r30
    336c:	11 24       	eor	r1, r1
    336e:	08 95       	ret

00003370 <__udivmodsi4>:
    3370:	a1 e2       	ldi	r26, 0x21	; 33
    3372:	1a 2e       	mov	r1, r26
    3374:	aa 1b       	sub	r26, r26
    3376:	bb 1b       	sub	r27, r27
    3378:	fd 01       	movw	r30, r26
    337a:	0d c0       	rjmp	.+26     	; 0x3396 <__udivmodsi4_ep>

0000337c <__udivmodsi4_loop>:
    337c:	aa 1f       	adc	r26, r26
    337e:	bb 1f       	adc	r27, r27
    3380:	ee 1f       	adc	r30, r30
    3382:	ff 1f       	adc	r31, r31
    3384:	a2 17       	cp	r26, r18
    3386:	b3 07       	cpc	r27, r19
    3388:	e4 07       	cpc	r30, r20
    338a:	f5 07       	cpc	r31, r21
    338c:	20 f0       	brcs	.+8      	; 0x3396 <__udivmodsi4_ep>
    338e:	a2 1b       	sub	r26, r18
    3390:	b3 0b       	sbc	r27, r19
    3392:	e4 0b       	sbc	r30, r20
    3394:	f5 0b       	sbc	r31, r21

00003396 <__udivmodsi4_ep>:
    3396:	66 1f       	adc	r22, r22
    3398:	77 1f       	adc	r23, r23
    339a:	88 1f       	adc	r24, r24
    339c:	99 1f       	adc	r25, r25
    339e:	1a 94       	dec	r1
    33a0:	69 f7       	brne	.-38     	; 0x337c <__udivmodsi4_loop>
    33a2:	60 95       	com	r22
    33a4:	70 95       	com	r23
    33a6:	80 95       	com	r24
    33a8:	90 95       	com	r25
    33aa:	9b 01       	movw	r18, r22
    33ac:	ac 01       	movw	r20, r24
    33ae:	bd 01       	movw	r22, r26
    33b0:	cf 01       	movw	r24, r30
    33b2:	08 95       	ret

000033b4 <__prologue_saves__>:
    33b4:	2f 92       	push	r2
    33b6:	3f 92       	push	r3
    33b8:	4f 92       	push	r4
    33ba:	5f 92       	push	r5
    33bc:	6f 92       	push	r6
    33be:	7f 92       	push	r7
    33c0:	8f 92       	push	r8
    33c2:	9f 92       	push	r9
    33c4:	af 92       	push	r10
    33c6:	bf 92       	push	r11
    33c8:	cf 92       	push	r12
    33ca:	df 92       	push	r13
    33cc:	ef 92       	push	r14
    33ce:	ff 92       	push	r15
    33d0:	0f 93       	push	r16
    33d2:	1f 93       	push	r17
    33d4:	cf 93       	push	r28
    33d6:	df 93       	push	r29
    33d8:	cd b7       	in	r28, 0x3d	; 61
    33da:	de b7       	in	r29, 0x3e	; 62
    33dc:	ca 1b       	sub	r28, r26
    33de:	db 0b       	sbc	r29, r27
    33e0:	0f b6       	in	r0, 0x3f	; 63
    33e2:	f8 94       	cli
    33e4:	de bf       	out	0x3e, r29	; 62
    33e6:	0f be       	out	0x3f, r0	; 63
    33e8:	cd bf       	out	0x3d, r28	; 61
    33ea:	09 94       	ijmp

000033ec <__epilogue_restores__>:
    33ec:	2a 88       	ldd	r2, Y+18	; 0x12
    33ee:	39 88       	ldd	r3, Y+17	; 0x11
    33f0:	48 88       	ldd	r4, Y+16	; 0x10
    33f2:	5f 84       	ldd	r5, Y+15	; 0x0f
    33f4:	6e 84       	ldd	r6, Y+14	; 0x0e
    33f6:	7d 84       	ldd	r7, Y+13	; 0x0d
    33f8:	8c 84       	ldd	r8, Y+12	; 0x0c
    33fa:	9b 84       	ldd	r9, Y+11	; 0x0b
    33fc:	aa 84       	ldd	r10, Y+10	; 0x0a
    33fe:	b9 84       	ldd	r11, Y+9	; 0x09
    3400:	c8 84       	ldd	r12, Y+8	; 0x08
    3402:	df 80       	ldd	r13, Y+7	; 0x07
    3404:	ee 80       	ldd	r14, Y+6	; 0x06
    3406:	fd 80       	ldd	r15, Y+5	; 0x05
    3408:	0c 81       	ldd	r16, Y+4	; 0x04
    340a:	1b 81       	ldd	r17, Y+3	; 0x03
    340c:	aa 81       	ldd	r26, Y+2	; 0x02
    340e:	b9 81       	ldd	r27, Y+1	; 0x01
    3410:	ce 0f       	add	r28, r30
    3412:	d1 1d       	adc	r29, r1
    3414:	0f b6       	in	r0, 0x3f	; 63
    3416:	f8 94       	cli
    3418:	de bf       	out	0x3e, r29	; 62
    341a:	0f be       	out	0x3f, r0	; 63
    341c:	cd bf       	out	0x3d, r28	; 61
    341e:	ed 01       	movw	r28, r26
    3420:	08 95       	ret

00003422 <_exit>:
    3422:	f8 94       	cli

00003424 <__stop_program>:
    3424:	ff cf       	rjmp	.-2      	; 0x3424 <__stop_program>
